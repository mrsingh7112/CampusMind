"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@simplewebauthn";
exports.ids = ["vendor-chunks/@simplewebauthn"];
exports.modules = {

/***/ "(rsc)/./node_modules/@simplewebauthn/server/esm/authentication/generateAuthenticationOptions.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/@simplewebauthn/server/esm/authentication/generateAuthenticationOptions.js ***!
  \*************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   generateAuthenticationOptions: () => (/* binding */ generateAuthenticationOptions)\n/* harmony export */ });\n/* harmony import */ var _helpers_iso_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../helpers/iso/index.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/index.js\");\n/* harmony import */ var _helpers_generateChallenge_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../helpers/generateChallenge.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/generateChallenge.js\");\n\n\n/**\n * Prepare a value to pass into navigator.credentials.get(...) for authenticator \"login\"\n *\n * @param allowCredentials Authenticators previously registered by the user, if any. If undefined\n * the client will ask the user which credential they want to use\n * @param challenge Random value the authenticator needs to sign and pass back\n * user for authentication\n * @param timeout How long (in ms) the user can take to complete authentication\n * @param userVerification Set to `'discouraged'` when asserting as part of a 2FA flow, otherwise\n * set to `'preferred'` or `'required'` as desired.\n * @param extensions Additional plugins the authenticator or browser should use during authentication\n * @param rpID Valid domain name (after `https://`)\n */ async function generateAuthenticationOptions(options = {}) {\n    const { allowCredentials, challenge = await (0,_helpers_generateChallenge_js__WEBPACK_IMPORTED_MODULE_1__.generateChallenge)(), timeout = 60000, userVerification = \"preferred\", extensions, rpID } = options;\n    /**\n     * Preserve ability to specify `string` values for challenges\n     */ let _challenge = challenge;\n    if (typeof _challenge === \"string\") {\n        _challenge = _helpers_iso_index_js__WEBPACK_IMPORTED_MODULE_0__.isoUint8Array.fromUTF8String(_challenge);\n    }\n    return {\n        challenge: _helpers_iso_index_js__WEBPACK_IMPORTED_MODULE_0__.isoBase64URL.fromBuffer(_challenge),\n        allowCredentials: allowCredentials?.map((cred)=>({\n                ...cred,\n                id: _helpers_iso_index_js__WEBPACK_IMPORTED_MODULE_0__.isoBase64URL.fromBuffer(cred.id)\n            })),\n        timeout,\n        userVerification,\n        extensions,\n        rpId: rpID\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNpbXBsZXdlYmF1dGhuL3NlcnZlci9lc20vYXV0aGVudGljYXRpb24vZ2VuZXJhdGVBdXRoZW50aWNhdGlvbk9wdGlvbnMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQXNFO0FBQ0Y7QUFDcEU7Ozs7Ozs7Ozs7OztDQVlDLEdBQ00sZUFBZUcsOEJBQThCQyxVQUFVLENBQUMsQ0FBQztJQUM1RCxNQUFNLEVBQUVDLGdCQUFnQixFQUFFQyxZQUFZLE1BQU1KLGdGQUFpQkEsRUFBRSxFQUFFSyxVQUFVLEtBQUssRUFBRUMsbUJBQW1CLFdBQVcsRUFBRUMsVUFBVSxFQUFFQyxJQUFJLEVBQUcsR0FBR047SUFDeEk7O0tBRUMsR0FDRCxJQUFJTyxhQUFhTDtJQUNqQixJQUFJLE9BQU9LLGVBQWUsVUFBVTtRQUNoQ0EsYUFBYVYsK0VBQTRCLENBQUNVO0lBQzlDO0lBQ0EsT0FBTztRQUNITCxXQUFXTiwwRUFBdUIsQ0FBQ1c7UUFDbkNOLGtCQUFrQkEsa0JBQWtCUyxJQUFJLENBQUNDLE9BQVU7Z0JBQy9DLEdBQUdBLElBQUk7Z0JBQ1BDLElBQUloQiwwRUFBdUIsQ0FBQ2UsS0FBS0MsRUFBRTtZQUN2QztRQUNBVDtRQUNBQztRQUNBQztRQUNBUSxNQUFNUDtJQUNWO0FBQ0oiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jYW1wdXMtbWluZC8uL25vZGVfbW9kdWxlcy9Ac2ltcGxld2ViYXV0aG4vc2VydmVyL2VzbS9hdXRoZW50aWNhdGlvbi9nZW5lcmF0ZUF1dGhlbnRpY2F0aW9uT3B0aW9ucy5qcz83Zjg5Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGlzb0Jhc2U2NFVSTCwgaXNvVWludDhBcnJheSB9IGZyb20gJy4uL2hlbHBlcnMvaXNvL2luZGV4LmpzJztcbmltcG9ydCB7IGdlbmVyYXRlQ2hhbGxlbmdlIH0gZnJvbSAnLi4vaGVscGVycy9nZW5lcmF0ZUNoYWxsZW5nZS5qcyc7XG4vKipcbiAqIFByZXBhcmUgYSB2YWx1ZSB0byBwYXNzIGludG8gbmF2aWdhdG9yLmNyZWRlbnRpYWxzLmdldCguLi4pIGZvciBhdXRoZW50aWNhdG9yIFwibG9naW5cIlxuICpcbiAqIEBwYXJhbSBhbGxvd0NyZWRlbnRpYWxzIEF1dGhlbnRpY2F0b3JzIHByZXZpb3VzbHkgcmVnaXN0ZXJlZCBieSB0aGUgdXNlciwgaWYgYW55LiBJZiB1bmRlZmluZWRcbiAqIHRoZSBjbGllbnQgd2lsbCBhc2sgdGhlIHVzZXIgd2hpY2ggY3JlZGVudGlhbCB0aGV5IHdhbnQgdG8gdXNlXG4gKiBAcGFyYW0gY2hhbGxlbmdlIFJhbmRvbSB2YWx1ZSB0aGUgYXV0aGVudGljYXRvciBuZWVkcyB0byBzaWduIGFuZCBwYXNzIGJhY2tcbiAqIHVzZXIgZm9yIGF1dGhlbnRpY2F0aW9uXG4gKiBAcGFyYW0gdGltZW91dCBIb3cgbG9uZyAoaW4gbXMpIHRoZSB1c2VyIGNhbiB0YWtlIHRvIGNvbXBsZXRlIGF1dGhlbnRpY2F0aW9uXG4gKiBAcGFyYW0gdXNlclZlcmlmaWNhdGlvbiBTZXQgdG8gYCdkaXNjb3VyYWdlZCdgIHdoZW4gYXNzZXJ0aW5nIGFzIHBhcnQgb2YgYSAyRkEgZmxvdywgb3RoZXJ3aXNlXG4gKiBzZXQgdG8gYCdwcmVmZXJyZWQnYCBvciBgJ3JlcXVpcmVkJ2AgYXMgZGVzaXJlZC5cbiAqIEBwYXJhbSBleHRlbnNpb25zIEFkZGl0aW9uYWwgcGx1Z2lucyB0aGUgYXV0aGVudGljYXRvciBvciBicm93c2VyIHNob3VsZCB1c2UgZHVyaW5nIGF1dGhlbnRpY2F0aW9uXG4gKiBAcGFyYW0gcnBJRCBWYWxpZCBkb21haW4gbmFtZSAoYWZ0ZXIgYGh0dHBzOi8vYClcbiAqL1xuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGdlbmVyYXRlQXV0aGVudGljYXRpb25PcHRpb25zKG9wdGlvbnMgPSB7fSkge1xuICAgIGNvbnN0IHsgYWxsb3dDcmVkZW50aWFscywgY2hhbGxlbmdlID0gYXdhaXQgZ2VuZXJhdGVDaGFsbGVuZ2UoKSwgdGltZW91dCA9IDYwMDAwLCB1c2VyVmVyaWZpY2F0aW9uID0gJ3ByZWZlcnJlZCcsIGV4dGVuc2lvbnMsIHJwSUQsIH0gPSBvcHRpb25zO1xuICAgIC8qKlxuICAgICAqIFByZXNlcnZlIGFiaWxpdHkgdG8gc3BlY2lmeSBgc3RyaW5nYCB2YWx1ZXMgZm9yIGNoYWxsZW5nZXNcbiAgICAgKi9cbiAgICBsZXQgX2NoYWxsZW5nZSA9IGNoYWxsZW5nZTtcbiAgICBpZiAodHlwZW9mIF9jaGFsbGVuZ2UgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgIF9jaGFsbGVuZ2UgPSBpc29VaW50OEFycmF5LmZyb21VVEY4U3RyaW5nKF9jaGFsbGVuZ2UpO1xuICAgIH1cbiAgICByZXR1cm4ge1xuICAgICAgICBjaGFsbGVuZ2U6IGlzb0Jhc2U2NFVSTC5mcm9tQnVmZmVyKF9jaGFsbGVuZ2UpLFxuICAgICAgICBhbGxvd0NyZWRlbnRpYWxzOiBhbGxvd0NyZWRlbnRpYWxzPy5tYXAoKGNyZWQpID0+ICh7XG4gICAgICAgICAgICAuLi5jcmVkLFxuICAgICAgICAgICAgaWQ6IGlzb0Jhc2U2NFVSTC5mcm9tQnVmZmVyKGNyZWQuaWQpLFxuICAgICAgICB9KSksXG4gICAgICAgIHRpbWVvdXQsXG4gICAgICAgIHVzZXJWZXJpZmljYXRpb24sXG4gICAgICAgIGV4dGVuc2lvbnMsXG4gICAgICAgIHJwSWQ6IHJwSUQsXG4gICAgfTtcbn1cbiJdLCJuYW1lcyI6WyJpc29CYXNlNjRVUkwiLCJpc29VaW50OEFycmF5IiwiZ2VuZXJhdGVDaGFsbGVuZ2UiLCJnZW5lcmF0ZUF1dGhlbnRpY2F0aW9uT3B0aW9ucyIsIm9wdGlvbnMiLCJhbGxvd0NyZWRlbnRpYWxzIiwiY2hhbGxlbmdlIiwidGltZW91dCIsInVzZXJWZXJpZmljYXRpb24iLCJleHRlbnNpb25zIiwicnBJRCIsIl9jaGFsbGVuZ2UiLCJmcm9tVVRGOFN0cmluZyIsImZyb21CdWZmZXIiLCJtYXAiLCJjcmVkIiwiaWQiLCJycElkIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@simplewebauthn/server/esm/authentication/generateAuthenticationOptions.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@simplewebauthn/server/esm/authentication/verifyAuthenticationResponse.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/@simplewebauthn/server/esm/authentication/verifyAuthenticationResponse.js ***!
  \************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   verifyAuthenticationResponse: () => (/* binding */ verifyAuthenticationResponse)\n/* harmony export */ });\n/* harmony import */ var _helpers_decodeClientDataJSON_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../helpers/decodeClientDataJSON.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/decodeClientDataJSON.js\");\n/* harmony import */ var _helpers_toHash_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../helpers/toHash.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/toHash.js\");\n/* harmony import */ var _helpers_verifySignature_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../helpers/verifySignature.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/verifySignature.js\");\n/* harmony import */ var _helpers_parseAuthenticatorData_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../helpers/parseAuthenticatorData.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/parseAuthenticatorData.js\");\n/* harmony import */ var _helpers_parseBackupFlags_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../helpers/parseBackupFlags.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/parseBackupFlags.js\");\n/* harmony import */ var _helpers_matchExpectedRPID_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../helpers/matchExpectedRPID.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/matchExpectedRPID.js\");\n/* harmony import */ var _helpers_iso_index_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../helpers/iso/index.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/index.js\");\n\n\n\n\n\n\n\n/**\n * Verify that the user has legitimately completed the login process\n *\n * **Options:**\n *\n * @param response Response returned by **@simplewebauthn/browser**'s `startAssertion()`\n * @param expectedChallenge The base64url-encoded `options.challenge` returned by\n * `generateAuthenticationOptions()`\n * @param expectedOrigin Website URL (or array of URLs) that the registration should have occurred on\n * @param expectedRPID RP ID (or array of IDs) that was specified in the registration options\n * @param expectedType (Optional) The response type expected ('webauthn.get')\n * @param authenticator An internal {@link AuthenticatorDevice} matching the credential's ID\n * @param requireUserVerification (Optional) Enforce user verification by the authenticator\n * (via PIN, fingerprint, etc...)\n * @param advancedFIDOConfig (Optional) Options for satisfying more stringent FIDO RP feature\n * requirements\n * @param advancedFIDOConfig.userVerification (Optional) Enable alternative rules for evaluating the\n * User Presence and User Verified flags in authenticator data: UV (and UP) flags are optional\n * unless this value is `\"required\"`\n */ async function verifyAuthenticationResponse(options) {\n    const { response, expectedChallenge, expectedOrigin, expectedRPID, expectedType, authenticator, requireUserVerification = true, advancedFIDOConfig } = options;\n    const { id, rawId, type: credentialType, response: assertionResponse } = response;\n    // Ensure credential specified an ID\n    if (!id) {\n        throw new Error(\"Missing credential ID\");\n    }\n    // Ensure ID is base64url-encoded\n    if (id !== rawId) {\n        throw new Error(\"Credential ID was not base64url-encoded\");\n    }\n    // Make sure credential type is public-key\n    if (credentialType !== \"public-key\") {\n        throw new Error(`Unexpected credential type ${credentialType}, expected \"public-key\"`);\n    }\n    if (!response) {\n        throw new Error(\"Credential missing response\");\n    }\n    if (typeof assertionResponse?.clientDataJSON !== \"string\") {\n        throw new Error(\"Credential response clientDataJSON was not a string\");\n    }\n    const clientDataJSON = (0,_helpers_decodeClientDataJSON_js__WEBPACK_IMPORTED_MODULE_0__.decodeClientDataJSON)(assertionResponse.clientDataJSON);\n    const { type, origin, challenge, tokenBinding } = clientDataJSON;\n    // Make sure we're handling an authentication\n    if (Array.isArray(expectedType)) {\n        if (!expectedType.includes(type)) {\n            const joinedExpectedType = expectedType.join(\", \");\n            throw new Error(`Unexpected authentication response type \"${type}\", expected one of: ${joinedExpectedType}`);\n        }\n    } else if (expectedType) {\n        if (type !== expectedType) {\n            throw new Error(`Unexpected authentication response type \"${type}\", expected \"${expectedType}\"`);\n        }\n    } else if (type !== \"webauthn.get\") {\n        throw new Error(`Unexpected authentication response type: ${type}`);\n    }\n    // Ensure the device provided the challenge we gave it\n    if (typeof expectedChallenge === \"function\") {\n        if (!await expectedChallenge(challenge)) {\n            throw new Error(`Custom challenge verifier returned false for registration response challenge \"${challenge}\"`);\n        }\n    } else if (challenge !== expectedChallenge) {\n        throw new Error(`Unexpected authentication response challenge \"${challenge}\", expected \"${expectedChallenge}\"`);\n    }\n    // Check that the origin is our site\n    if (Array.isArray(expectedOrigin)) {\n        if (!expectedOrigin.includes(origin)) {\n            const joinedExpectedOrigin = expectedOrigin.join(\", \");\n            throw new Error(`Unexpected authentication response origin \"${origin}\", expected one of: ${joinedExpectedOrigin}`);\n        }\n    } else {\n        if (origin !== expectedOrigin) {\n            throw new Error(`Unexpected authentication response origin \"${origin}\", expected \"${expectedOrigin}\"`);\n        }\n    }\n    if (!_helpers_iso_index_js__WEBPACK_IMPORTED_MODULE_6__.isoBase64URL.isBase64url(assertionResponse.authenticatorData)) {\n        throw new Error(\"Credential response authenticatorData was not a base64url string\");\n    }\n    if (!_helpers_iso_index_js__WEBPACK_IMPORTED_MODULE_6__.isoBase64URL.isBase64url(assertionResponse.signature)) {\n        throw new Error(\"Credential response signature was not a base64url string\");\n    }\n    if (assertionResponse.userHandle && typeof assertionResponse.userHandle !== \"string\") {\n        throw new Error(\"Credential response userHandle was not a string\");\n    }\n    if (tokenBinding) {\n        if (typeof tokenBinding !== \"object\") {\n            throw new Error(\"ClientDataJSON tokenBinding was not an object\");\n        }\n        if ([\n            \"present\",\n            \"supported\",\n            \"notSupported\"\n        ].indexOf(tokenBinding.status) < 0) {\n            throw new Error(`Unexpected tokenBinding status ${tokenBinding.status}`);\n        }\n    }\n    const authDataBuffer = _helpers_iso_index_js__WEBPACK_IMPORTED_MODULE_6__.isoBase64URL.toBuffer(assertionResponse.authenticatorData);\n    const parsedAuthData = (0,_helpers_parseAuthenticatorData_js__WEBPACK_IMPORTED_MODULE_3__.parseAuthenticatorData)(authDataBuffer);\n    const { rpIdHash, flags, counter, extensionsData } = parsedAuthData;\n    // Make sure the response's RP ID is ours\n    let expectedRPIDs = [];\n    if (typeof expectedRPID === \"string\") {\n        expectedRPIDs = [\n            expectedRPID\n        ];\n    } else {\n        expectedRPIDs = expectedRPID;\n    }\n    const matchedRPID = await (0,_helpers_matchExpectedRPID_js__WEBPACK_IMPORTED_MODULE_5__.matchExpectedRPID)(rpIdHash, expectedRPIDs);\n    if (advancedFIDOConfig !== undefined) {\n        const { userVerification: fidoUserVerification } = advancedFIDOConfig;\n        /**\n         * Use FIDO Conformance-defined rules for verifying UP and UV flags\n         */ if (fidoUserVerification === \"required\") {\n            // Require `flags.uv` be true (implies `flags.up` is true)\n            if (!flags.uv) {\n                throw new Error(\"User verification required, but user could not be verified\");\n            }\n        } else if (fidoUserVerification === \"preferred\" || fidoUserVerification === \"discouraged\") {\n        // Ignore `flags.uv`\n        }\n    } else {\n        /**\n         * Use WebAuthn spec-defined rules for verifying UP and UV flags\n         */ // WebAuthn only requires the user presence flag be true\n        if (!flags.up) {\n            throw new Error(\"User not present during authentication\");\n        }\n        // Enforce user verification if required\n        if (requireUserVerification && !flags.uv) {\n            throw new Error(\"User verification required, but user could not be verified\");\n        }\n    }\n    const clientDataHash = await (0,_helpers_toHash_js__WEBPACK_IMPORTED_MODULE_1__.toHash)(_helpers_iso_index_js__WEBPACK_IMPORTED_MODULE_6__.isoBase64URL.toBuffer(assertionResponse.clientDataJSON));\n    const signatureBase = _helpers_iso_index_js__WEBPACK_IMPORTED_MODULE_6__.isoUint8Array.concat([\n        authDataBuffer,\n        clientDataHash\n    ]);\n    const signature = _helpers_iso_index_js__WEBPACK_IMPORTED_MODULE_6__.isoBase64URL.toBuffer(assertionResponse.signature);\n    if ((counter > 0 || authenticator.counter > 0) && counter <= authenticator.counter) {\n        // Error out when the counter in the DB is greater than or equal to the counter in the\n        // dataStruct. It's related to how the authenticator maintains the number of times its been\n        // used for this client. If this happens, then someone's somehow increased the counter\n        // on the device without going through this site\n        throw new Error(`Response counter value ${counter} was lower than expected ${authenticator.counter}`);\n    }\n    const { credentialDeviceType, credentialBackedUp } = (0,_helpers_parseBackupFlags_js__WEBPACK_IMPORTED_MODULE_4__.parseBackupFlags)(flags);\n    const toReturn = {\n        verified: await (0,_helpers_verifySignature_js__WEBPACK_IMPORTED_MODULE_2__.verifySignature)({\n            signature,\n            data: signatureBase,\n            credentialPublicKey: authenticator.credentialPublicKey\n        }),\n        authenticationInfo: {\n            newCounter: counter,\n            credentialID: authenticator.credentialID,\n            userVerified: flags.uv,\n            credentialDeviceType,\n            credentialBackedUp,\n            authenticatorExtensionResults: extensionsData,\n            origin: clientDataJSON.origin,\n            rpID: matchedRPID\n        }\n    };\n    return toReturn;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@simplewebauthn/server/esm/authentication/verifyAuthenticationResponse.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@simplewebauthn/server/esm/deps.js":
/*!*********************************************************!*\
  !*** ./node_modules/@simplewebauthn/server/esm/deps.js ***!
  \*********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AsnParser: () => (/* reexport safe */ _peculiar_asn1_schema__WEBPACK_IMPORTED_MODULE_3__.AsnParser),\n/* harmony export */   AsnSerializer: () => (/* reexport safe */ _peculiar_asn1_schema__WEBPACK_IMPORTED_MODULE_3__.AsnSerializer),\n/* harmony export */   AuthorityKeyIdentifier: () => (/* reexport safe */ _peculiar_asn1_x509__WEBPACK_IMPORTED_MODULE_4__.AuthorityKeyIdentifier),\n/* harmony export */   BasicConstraints: () => (/* reexport safe */ _peculiar_asn1_x509__WEBPACK_IMPORTED_MODULE_4__.BasicConstraints),\n/* harmony export */   CRLDistributionPoints: () => (/* reexport safe */ _peculiar_asn1_x509__WEBPACK_IMPORTED_MODULE_4__.CRLDistributionPoints),\n/* harmony export */   Certificate: () => (/* reexport safe */ _peculiar_asn1_x509__WEBPACK_IMPORTED_MODULE_4__.Certificate),\n/* harmony export */   CertificateList: () => (/* reexport safe */ _peculiar_asn1_x509__WEBPACK_IMPORTED_MODULE_4__.CertificateList),\n/* harmony export */   ECDSASigValue: () => (/* reexport safe */ _peculiar_asn1_ecc__WEBPACK_IMPORTED_MODULE_5__.ECDSASigValue),\n/* harmony export */   ECParameters: () => (/* reexport safe */ _peculiar_asn1_ecc__WEBPACK_IMPORTED_MODULE_5__.ECParameters),\n/* harmony export */   ExtendedKeyUsage: () => (/* reexport safe */ _peculiar_asn1_x509__WEBPACK_IMPORTED_MODULE_4__.ExtendedKeyUsage),\n/* harmony export */   KeyDescription: () => (/* reexport safe */ _peculiar_asn1_android__WEBPACK_IMPORTED_MODULE_7__.KeyDescription),\n/* harmony export */   Name: () => (/* reexport safe */ _peculiar_asn1_x509__WEBPACK_IMPORTED_MODULE_4__.Name),\n/* harmony export */   RSAPublicKey: () => (/* reexport safe */ _peculiar_asn1_rsa__WEBPACK_IMPORTED_MODULE_6__.RSAPublicKey),\n/* harmony export */   SubjectAlternativeName: () => (/* reexport safe */ _peculiar_asn1_x509__WEBPACK_IMPORTED_MODULE_4__.SubjectAlternativeName),\n/* harmony export */   SubjectKeyIdentifier: () => (/* reexport safe */ _peculiar_asn1_x509__WEBPACK_IMPORTED_MODULE_4__.SubjectKeyIdentifier),\n/* harmony export */   base64: () => (/* reexport safe */ _hexagon_base64__WEBPACK_IMPORTED_MODULE_1__[\"default\"]),\n/* harmony export */   crossFetch: () => (/* reexport safe */ cross_fetch__WEBPACK_IMPORTED_MODULE_2__.fetch),\n/* harmony export */   id_ce_authorityKeyIdentifier: () => (/* reexport safe */ _peculiar_asn1_x509__WEBPACK_IMPORTED_MODULE_4__.id_ce_authorityKeyIdentifier),\n/* harmony export */   id_ce_basicConstraints: () => (/* reexport safe */ _peculiar_asn1_x509__WEBPACK_IMPORTED_MODULE_4__.id_ce_basicConstraints),\n/* harmony export */   id_ce_cRLDistributionPoints: () => (/* reexport safe */ _peculiar_asn1_x509__WEBPACK_IMPORTED_MODULE_4__.id_ce_cRLDistributionPoints),\n/* harmony export */   id_ce_extKeyUsage: () => (/* reexport safe */ _peculiar_asn1_x509__WEBPACK_IMPORTED_MODULE_4__.id_ce_extKeyUsage),\n/* harmony export */   id_ce_keyDescription: () => (/* reexport safe */ _peculiar_asn1_android__WEBPACK_IMPORTED_MODULE_7__.id_ce_keyDescription),\n/* harmony export */   id_ce_subjectAltName: () => (/* reexport safe */ _peculiar_asn1_x509__WEBPACK_IMPORTED_MODULE_4__.id_ce_subjectAltName),\n/* harmony export */   id_ce_subjectKeyIdentifier: () => (/* reexport safe */ _peculiar_asn1_x509__WEBPACK_IMPORTED_MODULE_4__.id_ce_subjectKeyIdentifier),\n/* harmony export */   id_ecPublicKey: () => (/* reexport safe */ _peculiar_asn1_ecc__WEBPACK_IMPORTED_MODULE_5__.id_ecPublicKey),\n/* harmony export */   id_secp256r1: () => (/* reexport safe */ _peculiar_asn1_ecc__WEBPACK_IMPORTED_MODULE_5__.id_secp256r1),\n/* harmony export */   id_secp384r1: () => (/* reexport safe */ _peculiar_asn1_ecc__WEBPACK_IMPORTED_MODULE_5__.id_secp384r1),\n/* harmony export */   tinyCbor: () => (/* reexport module object */ _levischuck_tiny_cbor__WEBPACK_IMPORTED_MODULE_0__)\n/* harmony export */ });\n/* harmony import */ var _levischuck_tiny_cbor__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @levischuck/tiny-cbor */ \"(rsc)/./node_modules/@levischuck/tiny-cbor/esm/index.js\");\n/* harmony import */ var _hexagon_base64__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @hexagon/base64 */ \"(rsc)/./node_modules/@hexagon/base64/src/base64.js\");\n/* harmony import */ var cross_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! cross-fetch */ \"(rsc)/./node_modules/cross-fetch/dist/node-ponyfill.js\");\n/* harmony import */ var _peculiar_asn1_schema__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @peculiar/asn1-schema */ \"(rsc)/./node_modules/@peculiar/asn1-schema/build/es2015/index.js\");\n/* harmony import */ var _peculiar_asn1_x509__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @peculiar/asn1-x509 */ \"(rsc)/./node_modules/@peculiar/asn1-x509/build/es2015/index.js\");\n/* harmony import */ var _peculiar_asn1_ecc__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @peculiar/asn1-ecc */ \"(rsc)/./node_modules/@peculiar/asn1-ecc/build/es2015/index.js\");\n/* harmony import */ var _peculiar_asn1_rsa__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @peculiar/asn1-rsa */ \"(rsc)/./node_modules/@peculiar/asn1-rsa/build/es2015/index.js\");\n/* harmony import */ var _peculiar_asn1_android__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @peculiar/asn1-android */ \"(rsc)/./node_modules/@peculiar/asn1-android/build/es2015/index.js\");\n// tiny_cbor (a.k.a. tiny-cbor in Node land)\n\n// b64 (a.k.a. @hexagon/base64 in Node land)\n\n// cross-fetch\n\n// @peculiar libraries\n\n\n\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNpbXBsZXdlYmF1dGhuL3NlcnZlci9lc20vZGVwcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQSw0Q0FBNEM7QUFDTTtBQUNsRCw0Q0FBNEM7QUFDUTtBQUNwRCxjQUFjO0FBQ29DO0FBQ2xELHNCQUFzQjtBQUMyQztBQUNrUztBQUNyUDtBQUM1RDtBQUM0QiIsInNvdXJjZXMiOlsid2VicGFjazovL2NhbXB1cy1taW5kLy4vbm9kZV9tb2R1bGVzL0BzaW1wbGV3ZWJhdXRobi9zZXJ2ZXIvZXNtL2RlcHMuanM/OTdlOCJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyB0aW55X2Nib3IgKGEuay5hLiB0aW55LWNib3IgaW4gTm9kZSBsYW5kKVxuZXhwb3J0ICogYXMgdGlueUNib3IgZnJvbSAnQGxldmlzY2h1Y2svdGlueS1jYm9yJztcbi8vIGI2NCAoYS5rLmEuIEBoZXhhZ29uL2Jhc2U2NCBpbiBOb2RlIGxhbmQpXG5leHBvcnQgeyBkZWZhdWx0IGFzIGJhc2U2NCB9IGZyb20gJ0BoZXhhZ29uL2Jhc2U2NCc7XG4vLyBjcm9zcy1mZXRjaFxuZXhwb3J0IHsgZmV0Y2ggYXMgY3Jvc3NGZXRjaCB9IGZyb20gJ2Nyb3NzLWZldGNoJztcbi8vIEBwZWN1bGlhciBsaWJyYXJpZXNcbmV4cG9ydCB7IEFzblBhcnNlciwgQXNuU2VyaWFsaXplciB9IGZyb20gJ0BwZWN1bGlhci9hc24xLXNjaGVtYSc7XG5leHBvcnQgeyBBdXRob3JpdHlLZXlJZGVudGlmaWVyLCBCYXNpY0NvbnN0cmFpbnRzLCBDZXJ0aWZpY2F0ZSwgQ2VydGlmaWNhdGVMaXN0LCBDUkxEaXN0cmlidXRpb25Qb2ludHMsIEV4dGVuZGVkS2V5VXNhZ2UsIGlkX2NlX2F1dGhvcml0eUtleUlkZW50aWZpZXIsIGlkX2NlX2Jhc2ljQ29uc3RyYWludHMsIGlkX2NlX2NSTERpc3RyaWJ1dGlvblBvaW50cywgaWRfY2VfZXh0S2V5VXNhZ2UsIGlkX2NlX3N1YmplY3RBbHROYW1lLCBpZF9jZV9zdWJqZWN0S2V5SWRlbnRpZmllciwgTmFtZSwgU3ViamVjdEFsdGVybmF0aXZlTmFtZSwgU3ViamVjdEtleUlkZW50aWZpZXIsIH0gZnJvbSAnQHBlY3VsaWFyL2FzbjEteDUwOSc7XG5leHBvcnQgeyBFQ0RTQVNpZ1ZhbHVlLCBFQ1BhcmFtZXRlcnMsIGlkX2VjUHVibGljS2V5LCBpZF9zZWNwMjU2cjEsIGlkX3NlY3AzODRyMSwgfSBmcm9tICdAcGVjdWxpYXIvYXNuMS1lY2MnO1xuZXhwb3J0IHsgUlNBUHVibGljS2V5IH0gZnJvbSAnQHBlY3VsaWFyL2FzbjEtcnNhJztcbmV4cG9ydCB7IGlkX2NlX2tleURlc2NyaXB0aW9uLCBLZXlEZXNjcmlwdGlvbiB9IGZyb20gJ0BwZWN1bGlhci9hc24xLWFuZHJvaWQnO1xuIl0sIm5hbWVzIjpbInRpbnlDYm9yIiwiZGVmYXVsdCIsImJhc2U2NCIsImZldGNoIiwiY3Jvc3NGZXRjaCIsIkFzblBhcnNlciIsIkFzblNlcmlhbGl6ZXIiLCJBdXRob3JpdHlLZXlJZGVudGlmaWVyIiwiQmFzaWNDb25zdHJhaW50cyIsIkNlcnRpZmljYXRlIiwiQ2VydGlmaWNhdGVMaXN0IiwiQ1JMRGlzdHJpYnV0aW9uUG9pbnRzIiwiRXh0ZW5kZWRLZXlVc2FnZSIsImlkX2NlX2F1dGhvcml0eUtleUlkZW50aWZpZXIiLCJpZF9jZV9iYXNpY0NvbnN0cmFpbnRzIiwiaWRfY2VfY1JMRGlzdHJpYnV0aW9uUG9pbnRzIiwiaWRfY2VfZXh0S2V5VXNhZ2UiLCJpZF9jZV9zdWJqZWN0QWx0TmFtZSIsImlkX2NlX3N1YmplY3RLZXlJZGVudGlmaWVyIiwiTmFtZSIsIlN1YmplY3RBbHRlcm5hdGl2ZU5hbWUiLCJTdWJqZWN0S2V5SWRlbnRpZmllciIsIkVDRFNBU2lnVmFsdWUiLCJFQ1BhcmFtZXRlcnMiLCJpZF9lY1B1YmxpY0tleSIsImlkX3NlY3AyNTZyMSIsImlkX3NlY3AzODRyMSIsIlJTQVB1YmxpY0tleSIsImlkX2NlX2tleURlc2NyaXB0aW9uIiwiS2V5RGVzY3JpcHRpb24iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@simplewebauthn/server/esm/deps.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/convertAAGUIDToString.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@simplewebauthn/server/esm/helpers/convertAAGUIDToString.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   convertAAGUIDToString: () => (/* binding */ convertAAGUIDToString)\n/* harmony export */ });\n/* harmony import */ var _iso_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./iso/index.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/index.js\");\n\n/**\n * Convert the aaguid buffer in authData into a UUID string\n */ function convertAAGUIDToString(aaguid) {\n    // Raw Hex: adce000235bcc60a648b0b25f1f05503\n    const hex = _iso_index_js__WEBPACK_IMPORTED_MODULE_0__.isoUint8Array.toHex(aaguid);\n    const segments = [\n        hex.slice(0, 8),\n        hex.slice(8, 12),\n        hex.slice(12, 16),\n        hex.slice(16, 20),\n        hex.slice(20, 32)\n    ];\n    // Formatted: adce0002-35bc-c60a-648b-0b25f1f05503\n    return segments.join(\"-\");\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNpbXBsZXdlYmF1dGhuL3NlcnZlci9lc20vaGVscGVycy9jb252ZXJ0QUFHVUlEVG9TdHJpbmcuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBK0M7QUFDL0M7O0NBRUMsR0FDTSxTQUFTQyxzQkFBc0JDLE1BQU07SUFDeEMsNENBQTRDO0lBQzVDLE1BQU1DLE1BQU1ILDhEQUFtQixDQUFDRTtJQUNoQyxNQUFNRyxXQUFXO1FBQ2JGLElBQUlHLEtBQUssQ0FBQyxHQUFHO1FBQ2JILElBQUlHLEtBQUssQ0FBQyxHQUFHO1FBQ2JILElBQUlHLEtBQUssQ0FBQyxJQUFJO1FBQ2RILElBQUlHLEtBQUssQ0FBQyxJQUFJO1FBQ2RILElBQUlHLEtBQUssQ0FBQyxJQUFJO0tBQ2pCO0lBQ0Qsa0RBQWtEO0lBQ2xELE9BQU9ELFNBQVNFLElBQUksQ0FBQztBQUN6QiIsInNvdXJjZXMiOlsid2VicGFjazovL2NhbXB1cy1taW5kLy4vbm9kZV9tb2R1bGVzL0BzaW1wbGV3ZWJhdXRobi9zZXJ2ZXIvZXNtL2hlbHBlcnMvY29udmVydEFBR1VJRFRvU3RyaW5nLmpzPzNjODciXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgaXNvVWludDhBcnJheSB9IGZyb20gJy4vaXNvL2luZGV4LmpzJztcbi8qKlxuICogQ29udmVydCB0aGUgYWFndWlkIGJ1ZmZlciBpbiBhdXRoRGF0YSBpbnRvIGEgVVVJRCBzdHJpbmdcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGNvbnZlcnRBQUdVSURUb1N0cmluZyhhYWd1aWQpIHtcbiAgICAvLyBSYXcgSGV4OiBhZGNlMDAwMjM1YmNjNjBhNjQ4YjBiMjVmMWYwNTUwM1xuICAgIGNvbnN0IGhleCA9IGlzb1VpbnQ4QXJyYXkudG9IZXgoYWFndWlkKTtcbiAgICBjb25zdCBzZWdtZW50cyA9IFtcbiAgICAgICAgaGV4LnNsaWNlKDAsIDgpLFxuICAgICAgICBoZXguc2xpY2UoOCwgMTIpLFxuICAgICAgICBoZXguc2xpY2UoMTIsIDE2KSxcbiAgICAgICAgaGV4LnNsaWNlKDE2LCAyMCksXG4gICAgICAgIGhleC5zbGljZSgyMCwgMzIpLCAvLyA4XG4gICAgXTtcbiAgICAvLyBGb3JtYXR0ZWQ6IGFkY2UwMDAyLTM1YmMtYzYwYS02NDhiLTBiMjVmMWYwNTUwM1xuICAgIHJldHVybiBzZWdtZW50cy5qb2luKCctJyk7XG59XG4iXSwibmFtZXMiOlsiaXNvVWludDhBcnJheSIsImNvbnZlcnRBQUdVSURUb1N0cmluZyIsImFhZ3VpZCIsImhleCIsInRvSGV4Iiwic2VnbWVudHMiLCJzbGljZSIsImpvaW4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/convertAAGUIDToString.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/convertCOSEtoPKCS.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@simplewebauthn/server/esm/helpers/convertCOSEtoPKCS.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   convertCOSEtoPKCS: () => (/* binding */ convertCOSEtoPKCS)\n/* harmony export */ });\n/* harmony import */ var _iso_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./iso/index.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/index.js\");\n/* harmony import */ var _cose_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./cose.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/cose.js\");\n\n\n/**\n * Takes COSE-encoded public key and converts it to PKCS key\n */ function convertCOSEtoPKCS(cosePublicKey) {\n    // This is a little sloppy, I'm using COSEPublicKeyEC2 since it could have both x and y, but when\n    // there's no y it means it's probably better typed as COSEPublicKeyOKP. I'll leave this for now\n    // and revisit it later if it ever becomes an actual problem.\n    const struct = _iso_index_js__WEBPACK_IMPORTED_MODULE_0__.isoCBOR.decodeFirst(cosePublicKey);\n    const tag = Uint8Array.from([\n        0x04\n    ]);\n    const x = struct.get(_cose_js__WEBPACK_IMPORTED_MODULE_1__.COSEKEYS.x);\n    const y = struct.get(_cose_js__WEBPACK_IMPORTED_MODULE_1__.COSEKEYS.y);\n    if (!x) {\n        throw new Error(\"COSE public key was missing x\");\n    }\n    if (y) {\n        return _iso_index_js__WEBPACK_IMPORTED_MODULE_0__.isoUint8Array.concat([\n            tag,\n            x,\n            y\n        ]);\n    }\n    return _iso_index_js__WEBPACK_IMPORTED_MODULE_0__.isoUint8Array.concat([\n        tag,\n        x\n    ]);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNpbXBsZXdlYmF1dGhuL3NlcnZlci9lc20vaGVscGVycy9jb252ZXJ0Q09TRXRvUEtDUy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBd0Q7QUFDbkI7QUFDckM7O0NBRUMsR0FDTSxTQUFTRyxrQkFBa0JDLGFBQWE7SUFDM0MsaUdBQWlHO0lBQ2pHLGdHQUFnRztJQUNoRyw2REFBNkQ7SUFDN0QsTUFBTUMsU0FBU0wsOERBQW1CLENBQUNJO0lBQ25DLE1BQU1HLE1BQU1DLFdBQVdDLElBQUksQ0FBQztRQUFDO0tBQUs7SUFDbEMsTUFBTUMsSUFBSUwsT0FBT00sR0FBRyxDQUFDVCw4Q0FBUUEsQ0FBQ1EsQ0FBQztJQUMvQixNQUFNRSxJQUFJUCxPQUFPTSxHQUFHLENBQUNULDhDQUFRQSxDQUFDVSxDQUFDO0lBQy9CLElBQUksQ0FBQ0YsR0FBRztRQUNKLE1BQU0sSUFBSUcsTUFBTTtJQUNwQjtJQUNBLElBQUlELEdBQUc7UUFDSCxPQUFPWCwrREFBb0IsQ0FBQztZQUFDTTtZQUFLRztZQUFHRTtTQUFFO0lBQzNDO0lBQ0EsT0FBT1gsK0RBQW9CLENBQUM7UUFBQ007UUFBS0c7S0FBRTtBQUN4QyIsInNvdXJjZXMiOlsid2VicGFjazovL2NhbXB1cy1taW5kLy4vbm9kZV9tb2R1bGVzL0BzaW1wbGV3ZWJhdXRobi9zZXJ2ZXIvZXNtL2hlbHBlcnMvY29udmVydENPU0V0b1BLQ1MuanM/NWM0MyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBpc29DQk9SLCBpc29VaW50OEFycmF5IH0gZnJvbSAnLi9pc28vaW5kZXguanMnO1xuaW1wb3J0IHsgQ09TRUtFWVMgfSBmcm9tICcuL2Nvc2UuanMnO1xuLyoqXG4gKiBUYWtlcyBDT1NFLWVuY29kZWQgcHVibGljIGtleSBhbmQgY29udmVydHMgaXQgdG8gUEtDUyBrZXlcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGNvbnZlcnRDT1NFdG9QS0NTKGNvc2VQdWJsaWNLZXkpIHtcbiAgICAvLyBUaGlzIGlzIGEgbGl0dGxlIHNsb3BweSwgSSdtIHVzaW5nIENPU0VQdWJsaWNLZXlFQzIgc2luY2UgaXQgY291bGQgaGF2ZSBib3RoIHggYW5kIHksIGJ1dCB3aGVuXG4gICAgLy8gdGhlcmUncyBubyB5IGl0IG1lYW5zIGl0J3MgcHJvYmFibHkgYmV0dGVyIHR5cGVkIGFzIENPU0VQdWJsaWNLZXlPS1AuIEknbGwgbGVhdmUgdGhpcyBmb3Igbm93XG4gICAgLy8gYW5kIHJldmlzaXQgaXQgbGF0ZXIgaWYgaXQgZXZlciBiZWNvbWVzIGFuIGFjdHVhbCBwcm9ibGVtLlxuICAgIGNvbnN0IHN0cnVjdCA9IGlzb0NCT1IuZGVjb2RlRmlyc3QoY29zZVB1YmxpY0tleSk7XG4gICAgY29uc3QgdGFnID0gVWludDhBcnJheS5mcm9tKFsweDA0XSk7XG4gICAgY29uc3QgeCA9IHN0cnVjdC5nZXQoQ09TRUtFWVMueCk7XG4gICAgY29uc3QgeSA9IHN0cnVjdC5nZXQoQ09TRUtFWVMueSk7XG4gICAgaWYgKCF4KSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcignQ09TRSBwdWJsaWMga2V5IHdhcyBtaXNzaW5nIHgnKTtcbiAgICB9XG4gICAgaWYgKHkpIHtcbiAgICAgICAgcmV0dXJuIGlzb1VpbnQ4QXJyYXkuY29uY2F0KFt0YWcsIHgsIHldKTtcbiAgICB9XG4gICAgcmV0dXJuIGlzb1VpbnQ4QXJyYXkuY29uY2F0KFt0YWcsIHhdKTtcbn1cbiJdLCJuYW1lcyI6WyJpc29DQk9SIiwiaXNvVWludDhBcnJheSIsIkNPU0VLRVlTIiwiY29udmVydENPU0V0b1BLQ1MiLCJjb3NlUHVibGljS2V5Iiwic3RydWN0IiwiZGVjb2RlRmlyc3QiLCJ0YWciLCJVaW50OEFycmF5IiwiZnJvbSIsIngiLCJnZXQiLCJ5IiwiRXJyb3IiLCJjb25jYXQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/convertCOSEtoPKCS.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/convertCertBufferToPEM.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@simplewebauthn/server/esm/helpers/convertCertBufferToPEM.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   convertCertBufferToPEM: () => (/* binding */ convertCertBufferToPEM)\n/* harmony export */ });\n/* harmony import */ var _iso_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./iso/index.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/index.js\");\n\n/**\n * Convert buffer to an OpenSSL-compatible PEM text format.\n */ function convertCertBufferToPEM(certBuffer) {\n    let b64cert;\n    /**\n     * Get certBuffer to a base64 representation\n     */ if (typeof certBuffer === \"string\") {\n        if (_iso_index_js__WEBPACK_IMPORTED_MODULE_0__.isoBase64URL.isBase64url(certBuffer)) {\n            b64cert = _iso_index_js__WEBPACK_IMPORTED_MODULE_0__.isoBase64URL.toBase64(certBuffer);\n        } else if (_iso_index_js__WEBPACK_IMPORTED_MODULE_0__.isoBase64URL.isBase64(certBuffer)) {\n            b64cert = certBuffer;\n        } else {\n            throw new Error(\"Certificate is not a valid base64 or base64url string\");\n        }\n    } else {\n        b64cert = _iso_index_js__WEBPACK_IMPORTED_MODULE_0__.isoBase64URL.fromBuffer(certBuffer, \"base64\");\n    }\n    let PEMKey = \"\";\n    for(let i = 0; i < Math.ceil(b64cert.length / 64); i += 1){\n        const start = 64 * i;\n        PEMKey += `${b64cert.substr(start, 64)}\\n`;\n    }\n    PEMKey = `-----BEGIN CERTIFICATE-----\\n${PEMKey}-----END CERTIFICATE-----\\n`;\n    return PEMKey;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNpbXBsZXdlYmF1dGhuL3NlcnZlci9lc20vaGVscGVycy9jb252ZXJ0Q2VydEJ1ZmZlclRvUEVNLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQThDO0FBQzlDOztDQUVDLEdBQ00sU0FBU0MsdUJBQXVCQyxVQUFVO0lBQzdDLElBQUlDO0lBQ0o7O0tBRUMsR0FDRCxJQUFJLE9BQU9ELGVBQWUsVUFBVTtRQUNoQyxJQUFJRixtRUFBd0IsQ0FBQ0UsYUFBYTtZQUN0Q0MsVUFBVUgsZ0VBQXFCLENBQUNFO1FBQ3BDLE9BQ0ssSUFBSUYsZ0VBQXFCLENBQUNFLGFBQWE7WUFDeENDLFVBQVVEO1FBQ2QsT0FDSztZQUNELE1BQU0sSUFBSUssTUFBTTtRQUNwQjtJQUNKLE9BQ0s7UUFDREosVUFBVUgsa0VBQXVCLENBQUNFLFlBQVk7SUFDbEQ7SUFDQSxJQUFJTyxTQUFTO0lBQ2IsSUFBSyxJQUFJQyxJQUFJLEdBQUdBLElBQUlDLEtBQUtDLElBQUksQ0FBQ1QsUUFBUVUsTUFBTSxHQUFHLEtBQUtILEtBQUssRUFBRztRQUN4RCxNQUFNSSxRQUFRLEtBQUtKO1FBQ25CRCxVQUFVLENBQUMsRUFBRU4sUUFBUVksTUFBTSxDQUFDRCxPQUFPLElBQUksRUFBRSxDQUFDO0lBQzlDO0lBQ0FMLFNBQVMsQ0FBQyw2QkFBNkIsRUFBRUEsT0FBTywyQkFBMkIsQ0FBQztJQUM1RSxPQUFPQTtBQUNYIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vY2FtcHVzLW1pbmQvLi9ub2RlX21vZHVsZXMvQHNpbXBsZXdlYmF1dGhuL3NlcnZlci9lc20vaGVscGVycy9jb252ZXJ0Q2VydEJ1ZmZlclRvUEVNLmpzPzdhYTAiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgaXNvQmFzZTY0VVJMIH0gZnJvbSAnLi9pc28vaW5kZXguanMnO1xuLyoqXG4gKiBDb252ZXJ0IGJ1ZmZlciB0byBhbiBPcGVuU1NMLWNvbXBhdGlibGUgUEVNIHRleHQgZm9ybWF0LlxuICovXG5leHBvcnQgZnVuY3Rpb24gY29udmVydENlcnRCdWZmZXJUb1BFTShjZXJ0QnVmZmVyKSB7XG4gICAgbGV0IGI2NGNlcnQ7XG4gICAgLyoqXG4gICAgICogR2V0IGNlcnRCdWZmZXIgdG8gYSBiYXNlNjQgcmVwcmVzZW50YXRpb25cbiAgICAgKi9cbiAgICBpZiAodHlwZW9mIGNlcnRCdWZmZXIgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgIGlmIChpc29CYXNlNjRVUkwuaXNCYXNlNjR1cmwoY2VydEJ1ZmZlcikpIHtcbiAgICAgICAgICAgIGI2NGNlcnQgPSBpc29CYXNlNjRVUkwudG9CYXNlNjQoY2VydEJ1ZmZlcik7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAoaXNvQmFzZTY0VVJMLmlzQmFzZTY0KGNlcnRCdWZmZXIpKSB7XG4gICAgICAgICAgICBiNjRjZXJ0ID0gY2VydEJ1ZmZlcjtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcignQ2VydGlmaWNhdGUgaXMgbm90IGEgdmFsaWQgYmFzZTY0IG9yIGJhc2U2NHVybCBzdHJpbmcnKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgICAgYjY0Y2VydCA9IGlzb0Jhc2U2NFVSTC5mcm9tQnVmZmVyKGNlcnRCdWZmZXIsICdiYXNlNjQnKTtcbiAgICB9XG4gICAgbGV0IFBFTUtleSA9ICcnO1xuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgTWF0aC5jZWlsKGI2NGNlcnQubGVuZ3RoIC8gNjQpOyBpICs9IDEpIHtcbiAgICAgICAgY29uc3Qgc3RhcnQgPSA2NCAqIGk7XG4gICAgICAgIFBFTUtleSArPSBgJHtiNjRjZXJ0LnN1YnN0cihzdGFydCwgNjQpfVxcbmA7XG4gICAgfVxuICAgIFBFTUtleSA9IGAtLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS1cXG4ke1BFTUtleX0tLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tXFxuYDtcbiAgICByZXR1cm4gUEVNS2V5O1xufVxuIl0sIm5hbWVzIjpbImlzb0Jhc2U2NFVSTCIsImNvbnZlcnRDZXJ0QnVmZmVyVG9QRU0iLCJjZXJ0QnVmZmVyIiwiYjY0Y2VydCIsImlzQmFzZTY0dXJsIiwidG9CYXNlNjQiLCJpc0Jhc2U2NCIsIkVycm9yIiwiZnJvbUJ1ZmZlciIsIlBFTUtleSIsImkiLCJNYXRoIiwiY2VpbCIsImxlbmd0aCIsInN0YXJ0Iiwic3Vic3RyIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/convertCertBufferToPEM.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/convertPEMToBytes.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@simplewebauthn/server/esm/helpers/convertPEMToBytes.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   convertPEMToBytes: () => (/* binding */ convertPEMToBytes)\n/* harmony export */ });\n/* harmony import */ var _iso_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./iso/index.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/index.js\");\n\n/**\n * Take a certificate in PEM format and convert it to bytes\n */ function convertPEMToBytes(pem) {\n    const certBase64 = pem.replace(\"-----BEGIN CERTIFICATE-----\", \"\").replace(\"-----END CERTIFICATE-----\", \"\").replace(/[\\n ]/g, \"\");\n    return _iso_index_js__WEBPACK_IMPORTED_MODULE_0__.isoBase64URL.toBuffer(certBase64, \"base64\");\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNpbXBsZXdlYmF1dGhuL3NlcnZlci9lc20vaGVscGVycy9jb252ZXJ0UEVNVG9CeXRlcy5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUE4QztBQUM5Qzs7Q0FFQyxHQUNNLFNBQVNDLGtCQUFrQkMsR0FBRztJQUNqQyxNQUFNQyxhQUFhRCxJQUNkRSxPQUFPLENBQUMsK0JBQStCLElBQ3ZDQSxPQUFPLENBQUMsNkJBQTZCLElBQ3JDQSxPQUFPLENBQUMsVUFBVTtJQUN2QixPQUFPSixnRUFBcUIsQ0FBQ0csWUFBWTtBQUM3QyIsInNvdXJjZXMiOlsid2VicGFjazovL2NhbXB1cy1taW5kLy4vbm9kZV9tb2R1bGVzL0BzaW1wbGV3ZWJhdXRobi9zZXJ2ZXIvZXNtL2hlbHBlcnMvY29udmVydFBFTVRvQnl0ZXMuanM/ODA5MSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBpc29CYXNlNjRVUkwgfSBmcm9tICcuL2lzby9pbmRleC5qcyc7XG4vKipcbiAqIFRha2UgYSBjZXJ0aWZpY2F0ZSBpbiBQRU0gZm9ybWF0IGFuZCBjb252ZXJ0IGl0IHRvIGJ5dGVzXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBjb252ZXJ0UEVNVG9CeXRlcyhwZW0pIHtcbiAgICBjb25zdCBjZXJ0QmFzZTY0ID0gcGVtXG4gICAgICAgIC5yZXBsYWNlKCctLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0nLCAnJylcbiAgICAgICAgLnJlcGxhY2UoJy0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0nLCAnJylcbiAgICAgICAgLnJlcGxhY2UoL1tcXG4gXS9nLCAnJyk7XG4gICAgcmV0dXJuIGlzb0Jhc2U2NFVSTC50b0J1ZmZlcihjZXJ0QmFzZTY0LCAnYmFzZTY0Jyk7XG59XG4iXSwibmFtZXMiOlsiaXNvQmFzZTY0VVJMIiwiY29udmVydFBFTVRvQnl0ZXMiLCJwZW0iLCJjZXJ0QmFzZTY0IiwicmVwbGFjZSIsInRvQnVmZmVyIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/convertPEMToBytes.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/convertX509PublicKeyToCOSE.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@simplewebauthn/server/esm/helpers/convertX509PublicKeyToCOSE.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   convertX509PublicKeyToCOSE: () => (/* binding */ convertX509PublicKeyToCOSE)\n/* harmony export */ });\n/* harmony import */ var _deps_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../deps.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/deps.js\");\n/* harmony import */ var _cose_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./cose.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/cose.js\");\n/* harmony import */ var _mapX509SignatureAlgToCOSEAlg_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./mapX509SignatureAlgToCOSEAlg.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/mapX509SignatureAlgToCOSEAlg.js\");\n\n\n\nfunction convertX509PublicKeyToCOSE(x509Certificate) {\n    let cosePublicKey = new Map();\n    /**\n     * Time to extract the public key from an X.509 certificate\n     */ const x509 = _deps_js__WEBPACK_IMPORTED_MODULE_0__.AsnParser.parse(x509Certificate, _deps_js__WEBPACK_IMPORTED_MODULE_0__.Certificate);\n    const { tbsCertificate } = x509;\n    const { subjectPublicKeyInfo, signature: _tbsSignature } = tbsCertificate;\n    const signatureAlgorithm = _tbsSignature.algorithm;\n    const publicKeyAlgorithmID = subjectPublicKeyInfo.algorithm.algorithm;\n    if (publicKeyAlgorithmID === _deps_js__WEBPACK_IMPORTED_MODULE_0__.id_ecPublicKey) {\n        /**\n         * EC2 Public Key\n         */ if (!subjectPublicKeyInfo.algorithm.parameters) {\n            throw new Error(\"Certificate public key was missing parameters (EC2)\");\n        }\n        const ecParameters = _deps_js__WEBPACK_IMPORTED_MODULE_0__.AsnParser.parse(new Uint8Array(subjectPublicKeyInfo.algorithm.parameters), _deps_js__WEBPACK_IMPORTED_MODULE_0__.ECParameters);\n        let crv = -999;\n        const { namedCurve } = ecParameters;\n        if (namedCurve === _deps_js__WEBPACK_IMPORTED_MODULE_0__.id_secp256r1) {\n            crv = _cose_js__WEBPACK_IMPORTED_MODULE_1__.COSECRV.P256;\n        } else if (namedCurve === _deps_js__WEBPACK_IMPORTED_MODULE_0__.id_secp384r1) {\n            crv = _cose_js__WEBPACK_IMPORTED_MODULE_1__.COSECRV.P384;\n        } else {\n            throw new Error(`Certificate public key contained unexpected namedCurve ${namedCurve} (EC2)`);\n        }\n        const subjectPublicKey = new Uint8Array(subjectPublicKeyInfo.subjectPublicKey);\n        let x;\n        let y;\n        if (subjectPublicKey[0] === 0x04) {\n            // Public key is in \"uncompressed form\", so we can split the remaining bytes in half\n            let pointer = 1;\n            const halfLength = (subjectPublicKey.length - 1) / 2;\n            x = subjectPublicKey.slice(pointer, pointer += halfLength);\n            y = subjectPublicKey.slice(pointer);\n        } else {\n            throw new Error('TODO: Figure out how to handle public keys in \"compressed form\"');\n        }\n        const coseEC2PubKey = new Map();\n        coseEC2PubKey.set(_cose_js__WEBPACK_IMPORTED_MODULE_1__.COSEKEYS.kty, _cose_js__WEBPACK_IMPORTED_MODULE_1__.COSEKTY.EC2);\n        coseEC2PubKey.set(_cose_js__WEBPACK_IMPORTED_MODULE_1__.COSEKEYS.alg, (0,_mapX509SignatureAlgToCOSEAlg_js__WEBPACK_IMPORTED_MODULE_2__.mapX509SignatureAlgToCOSEAlg)(signatureAlgorithm));\n        coseEC2PubKey.set(_cose_js__WEBPACK_IMPORTED_MODULE_1__.COSEKEYS.crv, crv);\n        coseEC2PubKey.set(_cose_js__WEBPACK_IMPORTED_MODULE_1__.COSEKEYS.x, x);\n        coseEC2PubKey.set(_cose_js__WEBPACK_IMPORTED_MODULE_1__.COSEKEYS.y, y);\n        cosePublicKey = coseEC2PubKey;\n    } else if (publicKeyAlgorithmID === \"1.2.840.113549.1.1.1\") {\n        /**\n         * RSA public key\n         */ const rsaPublicKey = _deps_js__WEBPACK_IMPORTED_MODULE_0__.AsnParser.parse(subjectPublicKeyInfo.subjectPublicKey, _deps_js__WEBPACK_IMPORTED_MODULE_0__.RSAPublicKey);\n        const coseRSAPubKey = new Map();\n        coseRSAPubKey.set(_cose_js__WEBPACK_IMPORTED_MODULE_1__.COSEKEYS.kty, _cose_js__WEBPACK_IMPORTED_MODULE_1__.COSEKTY.RSA);\n        coseRSAPubKey.set(_cose_js__WEBPACK_IMPORTED_MODULE_1__.COSEKEYS.alg, (0,_mapX509SignatureAlgToCOSEAlg_js__WEBPACK_IMPORTED_MODULE_2__.mapX509SignatureAlgToCOSEAlg)(signatureAlgorithm));\n        coseRSAPubKey.set(_cose_js__WEBPACK_IMPORTED_MODULE_1__.COSEKEYS.n, new Uint8Array(rsaPublicKey.modulus));\n        coseRSAPubKey.set(_cose_js__WEBPACK_IMPORTED_MODULE_1__.COSEKEYS.e, new Uint8Array(rsaPublicKey.publicExponent));\n        cosePublicKey = coseRSAPubKey;\n    } else {\n        throw new Error(`Certificate public key contained unexpected algorithm ID ${publicKeyAlgorithmID}`);\n    }\n    return cosePublicKey;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNpbXBsZXdlYmF1dGhuL3NlcnZlci9lc20vaGVscGVycy9jb252ZXJ0WDUwOVB1YmxpY0tleVRvQ09TRS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQTZIO0FBQ3JFO0FBQ3lCO0FBQzFFLFNBQVNXLDJCQUEyQkMsZUFBZTtJQUN0RCxJQUFJQyxnQkFBZ0IsSUFBSUM7SUFDeEI7O0tBRUMsR0FDRCxNQUFNQyxPQUFPZiwrQ0FBU0EsQ0FBQ2dCLEtBQUssQ0FBQ0osaUJBQWlCWCxpREFBV0E7SUFDekQsTUFBTSxFQUFFZ0IsY0FBYyxFQUFFLEdBQUdGO0lBQzNCLE1BQU0sRUFBRUcsb0JBQW9CLEVBQUVDLFdBQVdDLGFBQWEsRUFBRSxHQUFHSDtJQUMzRCxNQUFNSSxxQkFBcUJELGNBQWNFLFNBQVM7SUFDbEQsTUFBTUMsdUJBQXVCTCxxQkFBcUJJLFNBQVMsQ0FBQ0EsU0FBUztJQUNyRSxJQUFJQyx5QkFBeUJwQixvREFBY0EsRUFBRTtRQUN6Qzs7U0FFQyxHQUNELElBQUksQ0FBQ2UscUJBQXFCSSxTQUFTLENBQUNFLFVBQVUsRUFBRTtZQUM1QyxNQUFNLElBQUlDLE1BQU07UUFDcEI7UUFDQSxNQUFNQyxlQUFlMUIsK0NBQVNBLENBQUNnQixLQUFLLENBQUMsSUFBSVcsV0FBV1QscUJBQXFCSSxTQUFTLENBQUNFLFVBQVUsR0FBR3RCLGtEQUFZQTtRQUM1RyxJQUFJMEIsTUFBTSxDQUFDO1FBQ1gsTUFBTSxFQUFFQyxVQUFVLEVBQUUsR0FBR0g7UUFDdkIsSUFBSUcsZUFBZXpCLGtEQUFZQSxFQUFFO1lBQzdCd0IsTUFBTXJCLDZDQUFPQSxDQUFDdUIsSUFBSTtRQUN0QixPQUNLLElBQUlELGVBQWV4QixrREFBWUEsRUFBRTtZQUNsQ3VCLE1BQU1yQiw2Q0FBT0EsQ0FBQ3dCLElBQUk7UUFDdEIsT0FDSztZQUNELE1BQU0sSUFBSU4sTUFBTSxDQUFDLHVEQUF1RCxFQUFFSSxXQUFXLE1BQU0sQ0FBQztRQUNoRztRQUNBLE1BQU1HLG1CQUFtQixJQUFJTCxXQUFXVCxxQkFBcUJjLGdCQUFnQjtRQUM3RSxJQUFJQztRQUNKLElBQUlDO1FBQ0osSUFBSUYsZ0JBQWdCLENBQUMsRUFBRSxLQUFLLE1BQU07WUFDOUIsb0ZBQW9GO1lBQ3BGLElBQUlHLFVBQVU7WUFDZCxNQUFNQyxhQUFhLENBQUNKLGlCQUFpQkssTUFBTSxHQUFHLEtBQUs7WUFDbkRKLElBQUlELGlCQUFpQk0sS0FBSyxDQUFDSCxTQUFTQSxXQUFXQztZQUMvQ0YsSUFBSUYsaUJBQWlCTSxLQUFLLENBQUNIO1FBQy9CLE9BQ0s7WUFDRCxNQUFNLElBQUlWLE1BQU07UUFDcEI7UUFDQSxNQUFNYyxnQkFBZ0IsSUFBSXpCO1FBQzFCeUIsY0FBY0MsR0FBRyxDQUFDaEMsOENBQVFBLENBQUNpQyxHQUFHLEVBQUVoQyw2Q0FBT0EsQ0FBQ2lDLEdBQUc7UUFDM0NILGNBQWNDLEdBQUcsQ0FBQ2hDLDhDQUFRQSxDQUFDbUMsR0FBRyxFQUFFakMsOEZBQTRCQSxDQUFDVztRQUM3RGtCLGNBQWNDLEdBQUcsQ0FBQ2hDLDhDQUFRQSxDQUFDb0IsR0FBRyxFQUFFQTtRQUNoQ1csY0FBY0MsR0FBRyxDQUFDaEMsOENBQVFBLENBQUN5QixDQUFDLEVBQUVBO1FBQzlCTSxjQUFjQyxHQUFHLENBQUNoQyw4Q0FBUUEsQ0FBQzBCLENBQUMsRUFBRUE7UUFDOUJyQixnQkFBZ0IwQjtJQUNwQixPQUNLLElBQUloQix5QkFBeUIsd0JBQXdCO1FBQ3REOztTQUVDLEdBQ0QsTUFBTXFCLGVBQWU1QywrQ0FBU0EsQ0FBQ2dCLEtBQUssQ0FBQ0UscUJBQXFCYyxnQkFBZ0IsRUFBRTFCLGtEQUFZQTtRQUN4RixNQUFNdUMsZ0JBQWdCLElBQUkvQjtRQUMxQitCLGNBQWNMLEdBQUcsQ0FBQ2hDLDhDQUFRQSxDQUFDaUMsR0FBRyxFQUFFaEMsNkNBQU9BLENBQUNxQyxHQUFHO1FBQzNDRCxjQUFjTCxHQUFHLENBQUNoQyw4Q0FBUUEsQ0FBQ21DLEdBQUcsRUFBRWpDLDhGQUE0QkEsQ0FBQ1c7UUFDN0R3QixjQUFjTCxHQUFHLENBQUNoQyw4Q0FBUUEsQ0FBQ3VDLENBQUMsRUFBRSxJQUFJcEIsV0FBV2lCLGFBQWFJLE9BQU87UUFDakVILGNBQWNMLEdBQUcsQ0FBQ2hDLDhDQUFRQSxDQUFDeUMsQ0FBQyxFQUFFLElBQUl0QixXQUFXaUIsYUFBYU0sY0FBYztRQUN4RXJDLGdCQUFnQmdDO0lBQ3BCLE9BQ0s7UUFDRCxNQUFNLElBQUlwQixNQUFNLENBQUMseURBQXlELEVBQUVGLHFCQUFxQixDQUFDO0lBQ3RHO0lBQ0EsT0FBT1Y7QUFDWCIsInNvdXJjZXMiOlsid2VicGFjazovL2NhbXB1cy1taW5kLy4vbm9kZV9tb2R1bGVzL0BzaW1wbGV3ZWJhdXRobi9zZXJ2ZXIvZXNtL2hlbHBlcnMvY29udmVydFg1MDlQdWJsaWNLZXlUb0NPU0UuanM/YWY1MiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBBc25QYXJzZXIsIENlcnRpZmljYXRlLCBFQ1BhcmFtZXRlcnMsIGlkX2VjUHVibGljS2V5LCBpZF9zZWNwMjU2cjEsIGlkX3NlY3AzODRyMSwgUlNBUHVibGljS2V5LCB9IGZyb20gJy4uL2RlcHMuanMnO1xuaW1wb3J0IHsgQ09TRUNSViwgQ09TRUtFWVMsIENPU0VLVFksIH0gZnJvbSAnLi9jb3NlLmpzJztcbmltcG9ydCB7IG1hcFg1MDlTaWduYXR1cmVBbGdUb0NPU0VBbGcgfSBmcm9tICcuL21hcFg1MDlTaWduYXR1cmVBbGdUb0NPU0VBbGcuanMnO1xuZXhwb3J0IGZ1bmN0aW9uIGNvbnZlcnRYNTA5UHVibGljS2V5VG9DT1NFKHg1MDlDZXJ0aWZpY2F0ZSkge1xuICAgIGxldCBjb3NlUHVibGljS2V5ID0gbmV3IE1hcCgpO1xuICAgIC8qKlxuICAgICAqIFRpbWUgdG8gZXh0cmFjdCB0aGUgcHVibGljIGtleSBmcm9tIGFuIFguNTA5IGNlcnRpZmljYXRlXG4gICAgICovXG4gICAgY29uc3QgeDUwOSA9IEFzblBhcnNlci5wYXJzZSh4NTA5Q2VydGlmaWNhdGUsIENlcnRpZmljYXRlKTtcbiAgICBjb25zdCB7IHRic0NlcnRpZmljYXRlIH0gPSB4NTA5O1xuICAgIGNvbnN0IHsgc3ViamVjdFB1YmxpY0tleUluZm8sIHNpZ25hdHVyZTogX3Ric1NpZ25hdHVyZSB9ID0gdGJzQ2VydGlmaWNhdGU7XG4gICAgY29uc3Qgc2lnbmF0dXJlQWxnb3JpdGhtID0gX3Ric1NpZ25hdHVyZS5hbGdvcml0aG07XG4gICAgY29uc3QgcHVibGljS2V5QWxnb3JpdGhtSUQgPSBzdWJqZWN0UHVibGljS2V5SW5mby5hbGdvcml0aG0uYWxnb3JpdGhtO1xuICAgIGlmIChwdWJsaWNLZXlBbGdvcml0aG1JRCA9PT0gaWRfZWNQdWJsaWNLZXkpIHtcbiAgICAgICAgLyoqXG4gICAgICAgICAqIEVDMiBQdWJsaWMgS2V5XG4gICAgICAgICAqL1xuICAgICAgICBpZiAoIXN1YmplY3RQdWJsaWNLZXlJbmZvLmFsZ29yaXRobS5wYXJhbWV0ZXJzKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ0NlcnRpZmljYXRlIHB1YmxpYyBrZXkgd2FzIG1pc3NpbmcgcGFyYW1ldGVycyAoRUMyKScpO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IGVjUGFyYW1ldGVycyA9IEFzblBhcnNlci5wYXJzZShuZXcgVWludDhBcnJheShzdWJqZWN0UHVibGljS2V5SW5mby5hbGdvcml0aG0ucGFyYW1ldGVycyksIEVDUGFyYW1ldGVycyk7XG4gICAgICAgIGxldCBjcnYgPSAtOTk5O1xuICAgICAgICBjb25zdCB7IG5hbWVkQ3VydmUgfSA9IGVjUGFyYW1ldGVycztcbiAgICAgICAgaWYgKG5hbWVkQ3VydmUgPT09IGlkX3NlY3AyNTZyMSkge1xuICAgICAgICAgICAgY3J2ID0gQ09TRUNSVi5QMjU2O1xuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYgKG5hbWVkQ3VydmUgPT09IGlkX3NlY3AzODRyMSkge1xuICAgICAgICAgICAgY3J2ID0gQ09TRUNSVi5QMzg0O1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBDZXJ0aWZpY2F0ZSBwdWJsaWMga2V5IGNvbnRhaW5lZCB1bmV4cGVjdGVkIG5hbWVkQ3VydmUgJHtuYW1lZEN1cnZlfSAoRUMyKWApO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IHN1YmplY3RQdWJsaWNLZXkgPSBuZXcgVWludDhBcnJheShzdWJqZWN0UHVibGljS2V5SW5mby5zdWJqZWN0UHVibGljS2V5KTtcbiAgICAgICAgbGV0IHg7XG4gICAgICAgIGxldCB5O1xuICAgICAgICBpZiAoc3ViamVjdFB1YmxpY0tleVswXSA9PT0gMHgwNCkge1xuICAgICAgICAgICAgLy8gUHVibGljIGtleSBpcyBpbiBcInVuY29tcHJlc3NlZCBmb3JtXCIsIHNvIHdlIGNhbiBzcGxpdCB0aGUgcmVtYWluaW5nIGJ5dGVzIGluIGhhbGZcbiAgICAgICAgICAgIGxldCBwb2ludGVyID0gMTtcbiAgICAgICAgICAgIGNvbnN0IGhhbGZMZW5ndGggPSAoc3ViamVjdFB1YmxpY0tleS5sZW5ndGggLSAxKSAvIDI7XG4gICAgICAgICAgICB4ID0gc3ViamVjdFB1YmxpY0tleS5zbGljZShwb2ludGVyLCBwb2ludGVyICs9IGhhbGZMZW5ndGgpO1xuICAgICAgICAgICAgeSA9IHN1YmplY3RQdWJsaWNLZXkuc2xpY2UocG9pbnRlcik7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ1RPRE86IEZpZ3VyZSBvdXQgaG93IHRvIGhhbmRsZSBwdWJsaWMga2V5cyBpbiBcImNvbXByZXNzZWQgZm9ybVwiJyk7XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgY29zZUVDMlB1YktleSA9IG5ldyBNYXAoKTtcbiAgICAgICAgY29zZUVDMlB1YktleS5zZXQoQ09TRUtFWVMua3R5LCBDT1NFS1RZLkVDMik7XG4gICAgICAgIGNvc2VFQzJQdWJLZXkuc2V0KENPU0VLRVlTLmFsZywgbWFwWDUwOVNpZ25hdHVyZUFsZ1RvQ09TRUFsZyhzaWduYXR1cmVBbGdvcml0aG0pKTtcbiAgICAgICAgY29zZUVDMlB1YktleS5zZXQoQ09TRUtFWVMuY3J2LCBjcnYpO1xuICAgICAgICBjb3NlRUMyUHViS2V5LnNldChDT1NFS0VZUy54LCB4KTtcbiAgICAgICAgY29zZUVDMlB1YktleS5zZXQoQ09TRUtFWVMueSwgeSk7XG4gICAgICAgIGNvc2VQdWJsaWNLZXkgPSBjb3NlRUMyUHViS2V5O1xuICAgIH1cbiAgICBlbHNlIGlmIChwdWJsaWNLZXlBbGdvcml0aG1JRCA9PT0gJzEuMi44NDAuMTEzNTQ5LjEuMS4xJykge1xuICAgICAgICAvKipcbiAgICAgICAgICogUlNBIHB1YmxpYyBrZXlcbiAgICAgICAgICovXG4gICAgICAgIGNvbnN0IHJzYVB1YmxpY0tleSA9IEFzblBhcnNlci5wYXJzZShzdWJqZWN0UHVibGljS2V5SW5mby5zdWJqZWN0UHVibGljS2V5LCBSU0FQdWJsaWNLZXkpO1xuICAgICAgICBjb25zdCBjb3NlUlNBUHViS2V5ID0gbmV3IE1hcCgpO1xuICAgICAgICBjb3NlUlNBUHViS2V5LnNldChDT1NFS0VZUy5rdHksIENPU0VLVFkuUlNBKTtcbiAgICAgICAgY29zZVJTQVB1YktleS5zZXQoQ09TRUtFWVMuYWxnLCBtYXBYNTA5U2lnbmF0dXJlQWxnVG9DT1NFQWxnKHNpZ25hdHVyZUFsZ29yaXRobSkpO1xuICAgICAgICBjb3NlUlNBUHViS2V5LnNldChDT1NFS0VZUy5uLCBuZXcgVWludDhBcnJheShyc2FQdWJsaWNLZXkubW9kdWx1cykpO1xuICAgICAgICBjb3NlUlNBUHViS2V5LnNldChDT1NFS0VZUy5lLCBuZXcgVWludDhBcnJheShyc2FQdWJsaWNLZXkucHVibGljRXhwb25lbnQpKTtcbiAgICAgICAgY29zZVB1YmxpY0tleSA9IGNvc2VSU0FQdWJLZXk7XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYENlcnRpZmljYXRlIHB1YmxpYyBrZXkgY29udGFpbmVkIHVuZXhwZWN0ZWQgYWxnb3JpdGhtIElEICR7cHVibGljS2V5QWxnb3JpdGhtSUR9YCk7XG4gICAgfVxuICAgIHJldHVybiBjb3NlUHVibGljS2V5O1xufVxuIl0sIm5hbWVzIjpbIkFzblBhcnNlciIsIkNlcnRpZmljYXRlIiwiRUNQYXJhbWV0ZXJzIiwiaWRfZWNQdWJsaWNLZXkiLCJpZF9zZWNwMjU2cjEiLCJpZF9zZWNwMzg0cjEiLCJSU0FQdWJsaWNLZXkiLCJDT1NFQ1JWIiwiQ09TRUtFWVMiLCJDT1NFS1RZIiwibWFwWDUwOVNpZ25hdHVyZUFsZ1RvQ09TRUFsZyIsImNvbnZlcnRYNTA5UHVibGljS2V5VG9DT1NFIiwieDUwOUNlcnRpZmljYXRlIiwiY29zZVB1YmxpY0tleSIsIk1hcCIsIng1MDkiLCJwYXJzZSIsInRic0NlcnRpZmljYXRlIiwic3ViamVjdFB1YmxpY0tleUluZm8iLCJzaWduYXR1cmUiLCJfdGJzU2lnbmF0dXJlIiwic2lnbmF0dXJlQWxnb3JpdGhtIiwiYWxnb3JpdGhtIiwicHVibGljS2V5QWxnb3JpdGhtSUQiLCJwYXJhbWV0ZXJzIiwiRXJyb3IiLCJlY1BhcmFtZXRlcnMiLCJVaW50OEFycmF5IiwiY3J2IiwibmFtZWRDdXJ2ZSIsIlAyNTYiLCJQMzg0Iiwic3ViamVjdFB1YmxpY0tleSIsIngiLCJ5IiwicG9pbnRlciIsImhhbGZMZW5ndGgiLCJsZW5ndGgiLCJzbGljZSIsImNvc2VFQzJQdWJLZXkiLCJzZXQiLCJrdHkiLCJFQzIiLCJhbGciLCJyc2FQdWJsaWNLZXkiLCJjb3NlUlNBUHViS2V5IiwiUlNBIiwibiIsIm1vZHVsdXMiLCJlIiwicHVibGljRXhwb25lbnQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/convertX509PublicKeyToCOSE.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/cose.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@simplewebauthn/server/esm/helpers/cose.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   COSEALG: () => (/* binding */ COSEALG),\n/* harmony export */   COSECRV: () => (/* binding */ COSECRV),\n/* harmony export */   COSEKEYS: () => (/* binding */ COSEKEYS),\n/* harmony export */   COSEKTY: () => (/* binding */ COSEKTY),\n/* harmony export */   isCOSEAlg: () => (/* binding */ isCOSEAlg),\n/* harmony export */   isCOSECrv: () => (/* binding */ isCOSECrv),\n/* harmony export */   isCOSEKty: () => (/* binding */ isCOSEKty),\n/* harmony export */   isCOSEPublicKeyEC2: () => (/* binding */ isCOSEPublicKeyEC2),\n/* harmony export */   isCOSEPublicKeyOKP: () => (/* binding */ isCOSEPublicKeyOKP),\n/* harmony export */   isCOSEPublicKeyRSA: () => (/* binding */ isCOSEPublicKeyRSA)\n/* harmony export */ });\nfunction isCOSEPublicKeyOKP(cosePublicKey) {\n    const kty = cosePublicKey.get(COSEKEYS.kty);\n    return isCOSEKty(kty) && kty === COSEKTY.OKP;\n}\nfunction isCOSEPublicKeyEC2(cosePublicKey) {\n    const kty = cosePublicKey.get(COSEKEYS.kty);\n    return isCOSEKty(kty) && kty === COSEKTY.EC2;\n}\nfunction isCOSEPublicKeyRSA(cosePublicKey) {\n    const kty = cosePublicKey.get(COSEKEYS.kty);\n    return isCOSEKty(kty) && kty === COSEKTY.RSA;\n}\n/**\n * COSE Keys\n *\n * https://www.iana.org/assignments/cose/cose.xhtml#key-common-parameters\n * https://www.iana.org/assignments/cose/cose.xhtml#key-type-parameters\n */ var COSEKEYS;\n(function(COSEKEYS) {\n    COSEKEYS[COSEKEYS[\"kty\"] = 1] = \"kty\";\n    COSEKEYS[COSEKEYS[\"alg\"] = 3] = \"alg\";\n    COSEKEYS[COSEKEYS[\"crv\"] = -1] = \"crv\";\n    COSEKEYS[COSEKEYS[\"x\"] = -2] = \"x\";\n    COSEKEYS[COSEKEYS[\"y\"] = -3] = \"y\";\n    COSEKEYS[COSEKEYS[\"n\"] = -1] = \"n\";\n    COSEKEYS[COSEKEYS[\"e\"] = -2] = \"e\";\n})(COSEKEYS || (COSEKEYS = {}));\n/**\n * COSE Key Types\n *\n * https://www.iana.org/assignments/cose/cose.xhtml#key-type\n */ var COSEKTY;\n(function(COSEKTY) {\n    COSEKTY[COSEKTY[\"OKP\"] = 1] = \"OKP\";\n    COSEKTY[COSEKTY[\"EC2\"] = 2] = \"EC2\";\n    COSEKTY[COSEKTY[\"RSA\"] = 3] = \"RSA\";\n})(COSEKTY || (COSEKTY = {}));\nfunction isCOSEKty(kty) {\n    return Object.values(COSEKTY).indexOf(kty) >= 0;\n}\n/**\n * COSE Curves\n *\n * https://www.iana.org/assignments/cose/cose.xhtml#elliptic-curves\n */ var COSECRV;\n(function(COSECRV) {\n    COSECRV[COSECRV[\"P256\"] = 1] = \"P256\";\n    COSECRV[COSECRV[\"P384\"] = 2] = \"P384\";\n    COSECRV[COSECRV[\"P521\"] = 3] = \"P521\";\n    COSECRV[COSECRV[\"ED25519\"] = 6] = \"ED25519\";\n    COSECRV[COSECRV[\"SECP256K1\"] = 8] = \"SECP256K1\";\n})(COSECRV || (COSECRV = {}));\nfunction isCOSECrv(crv) {\n    return Object.values(COSECRV).indexOf(crv) >= 0;\n}\n/**\n * COSE Algorithms\n *\n * https://www.iana.org/assignments/cose/cose.xhtml#algorithms\n */ var COSEALG;\n(function(COSEALG) {\n    COSEALG[COSEALG[\"ES256\"] = -7] = \"ES256\";\n    COSEALG[COSEALG[\"EdDSA\"] = -8] = \"EdDSA\";\n    COSEALG[COSEALG[\"ES384\"] = -35] = \"ES384\";\n    COSEALG[COSEALG[\"ES512\"] = -36] = \"ES512\";\n    COSEALG[COSEALG[\"PS256\"] = -37] = \"PS256\";\n    COSEALG[COSEALG[\"PS384\"] = -38] = \"PS384\";\n    COSEALG[COSEALG[\"PS512\"] = -39] = \"PS512\";\n    COSEALG[COSEALG[\"ES256K\"] = -47] = \"ES256K\";\n    COSEALG[COSEALG[\"RS256\"] = -257] = \"RS256\";\n    COSEALG[COSEALG[\"RS384\"] = -258] = \"RS384\";\n    COSEALG[COSEALG[\"RS512\"] = -259] = \"RS512\";\n    COSEALG[COSEALG[\"RS1\"] = -65535] = \"RS1\";\n})(COSEALG || (COSEALG = {}));\nfunction isCOSEAlg(alg) {\n    return Object.values(COSEALG).indexOf(alg) >= 0;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNpbXBsZXdlYmF1dGhuL3NlcnZlci9lc20vaGVscGVycy9jb3NlLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7QUFBTyxTQUFTQSxtQkFBbUJDLGFBQWE7SUFDNUMsTUFBTUMsTUFBTUQsY0FBY0UsR0FBRyxDQUFDQyxTQUFTRixHQUFHO0lBQzFDLE9BQU9HLFVBQVVILFFBQVFBLFFBQVFJLFFBQVFDLEdBQUc7QUFDaEQ7QUFDTyxTQUFTQyxtQkFBbUJQLGFBQWE7SUFDNUMsTUFBTUMsTUFBTUQsY0FBY0UsR0FBRyxDQUFDQyxTQUFTRixHQUFHO0lBQzFDLE9BQU9HLFVBQVVILFFBQVFBLFFBQVFJLFFBQVFHLEdBQUc7QUFDaEQ7QUFDTyxTQUFTQyxtQkFBbUJULGFBQWE7SUFDNUMsTUFBTUMsTUFBTUQsY0FBY0UsR0FBRyxDQUFDQyxTQUFTRixHQUFHO0lBQzFDLE9BQU9HLFVBQVVILFFBQVFBLFFBQVFJLFFBQVFLLEdBQUc7QUFDaEQ7QUFDQTs7Ozs7Q0FLQyxHQUNNLElBQUlQLFNBQVM7QUFDbkIsVUFBVUEsUUFBUTtJQUNmQSxRQUFRLENBQUNBLFFBQVEsQ0FBQyxNQUFNLEdBQUcsRUFBRSxHQUFHO0lBQ2hDQSxRQUFRLENBQUNBLFFBQVEsQ0FBQyxNQUFNLEdBQUcsRUFBRSxHQUFHO0lBQ2hDQSxRQUFRLENBQUNBLFFBQVEsQ0FBQyxNQUFNLEdBQUcsQ0FBQyxFQUFFLEdBQUc7SUFDakNBLFFBQVEsQ0FBQ0EsUUFBUSxDQUFDLElBQUksR0FBRyxDQUFDLEVBQUUsR0FBRztJQUMvQkEsUUFBUSxDQUFDQSxRQUFRLENBQUMsSUFBSSxHQUFHLENBQUMsRUFBRSxHQUFHO0lBQy9CQSxRQUFRLENBQUNBLFFBQVEsQ0FBQyxJQUFJLEdBQUcsQ0FBQyxFQUFFLEdBQUc7SUFDL0JBLFFBQVEsQ0FBQ0EsUUFBUSxDQUFDLElBQUksR0FBRyxDQUFDLEVBQUUsR0FBRztBQUNuQyxHQUFHQSxZQUFhQSxDQUFBQSxXQUFXLENBQUM7QUFDNUI7Ozs7Q0FJQyxHQUNNLElBQUlFLFFBQVE7QUFDbEIsVUFBVUEsT0FBTztJQUNkQSxPQUFPLENBQUNBLE9BQU8sQ0FBQyxNQUFNLEdBQUcsRUFBRSxHQUFHO0lBQzlCQSxPQUFPLENBQUNBLE9BQU8sQ0FBQyxNQUFNLEdBQUcsRUFBRSxHQUFHO0lBQzlCQSxPQUFPLENBQUNBLE9BQU8sQ0FBQyxNQUFNLEdBQUcsRUFBRSxHQUFHO0FBQ2xDLEdBQUdBLFdBQVlBLENBQUFBLFVBQVUsQ0FBQztBQUNuQixTQUFTRCxVQUFVSCxHQUFHO0lBQ3pCLE9BQU9VLE9BQU9DLE1BQU0sQ0FBQ1AsU0FBU1EsT0FBTyxDQUFDWixRQUFRO0FBQ2xEO0FBQ0E7Ozs7Q0FJQyxHQUNNLElBQUlhLFFBQVE7QUFDbEIsVUFBVUEsT0FBTztJQUNkQSxPQUFPLENBQUNBLE9BQU8sQ0FBQyxPQUFPLEdBQUcsRUFBRSxHQUFHO0lBQy9CQSxPQUFPLENBQUNBLE9BQU8sQ0FBQyxPQUFPLEdBQUcsRUFBRSxHQUFHO0lBQy9CQSxPQUFPLENBQUNBLE9BQU8sQ0FBQyxPQUFPLEdBQUcsRUFBRSxHQUFHO0lBQy9CQSxPQUFPLENBQUNBLE9BQU8sQ0FBQyxVQUFVLEdBQUcsRUFBRSxHQUFHO0lBQ2xDQSxPQUFPLENBQUNBLE9BQU8sQ0FBQyxZQUFZLEdBQUcsRUFBRSxHQUFHO0FBQ3hDLEdBQUdBLFdBQVlBLENBQUFBLFVBQVUsQ0FBQztBQUNuQixTQUFTQyxVQUFVQyxHQUFHO0lBQ3pCLE9BQU9MLE9BQU9DLE1BQU0sQ0FBQ0UsU0FBU0QsT0FBTyxDQUFDRyxRQUFRO0FBQ2xEO0FBQ0E7Ozs7Q0FJQyxHQUNNLElBQUlDLFFBQVE7QUFDbEIsVUFBVUEsT0FBTztJQUNkQSxPQUFPLENBQUNBLE9BQU8sQ0FBQyxRQUFRLEdBQUcsQ0FBQyxFQUFFLEdBQUc7SUFDakNBLE9BQU8sQ0FBQ0EsT0FBTyxDQUFDLFFBQVEsR0FBRyxDQUFDLEVBQUUsR0FBRztJQUNqQ0EsT0FBTyxDQUFDQSxPQUFPLENBQUMsUUFBUSxHQUFHLENBQUMsR0FBRyxHQUFHO0lBQ2xDQSxPQUFPLENBQUNBLE9BQU8sQ0FBQyxRQUFRLEdBQUcsQ0FBQyxHQUFHLEdBQUc7SUFDbENBLE9BQU8sQ0FBQ0EsT0FBTyxDQUFDLFFBQVEsR0FBRyxDQUFDLEdBQUcsR0FBRztJQUNsQ0EsT0FBTyxDQUFDQSxPQUFPLENBQUMsUUFBUSxHQUFHLENBQUMsR0FBRyxHQUFHO0lBQ2xDQSxPQUFPLENBQUNBLE9BQU8sQ0FBQyxRQUFRLEdBQUcsQ0FBQyxHQUFHLEdBQUc7SUFDbENBLE9BQU8sQ0FBQ0EsT0FBTyxDQUFDLFNBQVMsR0FBRyxDQUFDLEdBQUcsR0FBRztJQUNuQ0EsT0FBTyxDQUFDQSxPQUFPLENBQUMsUUFBUSxHQUFHLENBQUMsSUFBSSxHQUFHO0lBQ25DQSxPQUFPLENBQUNBLE9BQU8sQ0FBQyxRQUFRLEdBQUcsQ0FBQyxJQUFJLEdBQUc7SUFDbkNBLE9BQU8sQ0FBQ0EsT0FBTyxDQUFDLFFBQVEsR0FBRyxDQUFDLElBQUksR0FBRztJQUNuQ0EsT0FBTyxDQUFDQSxPQUFPLENBQUMsTUFBTSxHQUFHLENBQUMsTUFBTSxHQUFHO0FBQ3ZDLEdBQUdBLFdBQVlBLENBQUFBLFVBQVUsQ0FBQztBQUNuQixTQUFTQyxVQUFVQyxHQUFHO0lBQ3pCLE9BQU9SLE9BQU9DLE1BQU0sQ0FBQ0ssU0FBU0osT0FBTyxDQUFDTSxRQUFRO0FBQ2xEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vY2FtcHVzLW1pbmQvLi9ub2RlX21vZHVsZXMvQHNpbXBsZXdlYmF1dGhuL3NlcnZlci9lc20vaGVscGVycy9jb3NlLmpzP2RlMmQiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGZ1bmN0aW9uIGlzQ09TRVB1YmxpY0tleU9LUChjb3NlUHVibGljS2V5KSB7XG4gICAgY29uc3Qga3R5ID0gY29zZVB1YmxpY0tleS5nZXQoQ09TRUtFWVMua3R5KTtcbiAgICByZXR1cm4gaXNDT1NFS3R5KGt0eSkgJiYga3R5ID09PSBDT1NFS1RZLk9LUDtcbn1cbmV4cG9ydCBmdW5jdGlvbiBpc0NPU0VQdWJsaWNLZXlFQzIoY29zZVB1YmxpY0tleSkge1xuICAgIGNvbnN0IGt0eSA9IGNvc2VQdWJsaWNLZXkuZ2V0KENPU0VLRVlTLmt0eSk7XG4gICAgcmV0dXJuIGlzQ09TRUt0eShrdHkpICYmIGt0eSA9PT0gQ09TRUtUWS5FQzI7XG59XG5leHBvcnQgZnVuY3Rpb24gaXNDT1NFUHVibGljS2V5UlNBKGNvc2VQdWJsaWNLZXkpIHtcbiAgICBjb25zdCBrdHkgPSBjb3NlUHVibGljS2V5LmdldChDT1NFS0VZUy5rdHkpO1xuICAgIHJldHVybiBpc0NPU0VLdHkoa3R5KSAmJiBrdHkgPT09IENPU0VLVFkuUlNBO1xufVxuLyoqXG4gKiBDT1NFIEtleXNcbiAqXG4gKiBodHRwczovL3d3dy5pYW5hLm9yZy9hc3NpZ25tZW50cy9jb3NlL2Nvc2UueGh0bWwja2V5LWNvbW1vbi1wYXJhbWV0ZXJzXG4gKiBodHRwczovL3d3dy5pYW5hLm9yZy9hc3NpZ25tZW50cy9jb3NlL2Nvc2UueGh0bWwja2V5LXR5cGUtcGFyYW1ldGVyc1xuICovXG5leHBvcnQgdmFyIENPU0VLRVlTO1xuKGZ1bmN0aW9uIChDT1NFS0VZUykge1xuICAgIENPU0VLRVlTW0NPU0VLRVlTW1wia3R5XCJdID0gMV0gPSBcImt0eVwiO1xuICAgIENPU0VLRVlTW0NPU0VLRVlTW1wiYWxnXCJdID0gM10gPSBcImFsZ1wiO1xuICAgIENPU0VLRVlTW0NPU0VLRVlTW1wiY3J2XCJdID0gLTFdID0gXCJjcnZcIjtcbiAgICBDT1NFS0VZU1tDT1NFS0VZU1tcInhcIl0gPSAtMl0gPSBcInhcIjtcbiAgICBDT1NFS0VZU1tDT1NFS0VZU1tcInlcIl0gPSAtM10gPSBcInlcIjtcbiAgICBDT1NFS0VZU1tDT1NFS0VZU1tcIm5cIl0gPSAtMV0gPSBcIm5cIjtcbiAgICBDT1NFS0VZU1tDT1NFS0VZU1tcImVcIl0gPSAtMl0gPSBcImVcIjtcbn0pKENPU0VLRVlTIHx8IChDT1NFS0VZUyA9IHt9KSk7XG4vKipcbiAqIENPU0UgS2V5IFR5cGVzXG4gKlxuICogaHR0cHM6Ly93d3cuaWFuYS5vcmcvYXNzaWdubWVudHMvY29zZS9jb3NlLnhodG1sI2tleS10eXBlXG4gKi9cbmV4cG9ydCB2YXIgQ09TRUtUWTtcbihmdW5jdGlvbiAoQ09TRUtUWSkge1xuICAgIENPU0VLVFlbQ09TRUtUWVtcIk9LUFwiXSA9IDFdID0gXCJPS1BcIjtcbiAgICBDT1NFS1RZW0NPU0VLVFlbXCJFQzJcIl0gPSAyXSA9IFwiRUMyXCI7XG4gICAgQ09TRUtUWVtDT1NFS1RZW1wiUlNBXCJdID0gM10gPSBcIlJTQVwiO1xufSkoQ09TRUtUWSB8fCAoQ09TRUtUWSA9IHt9KSk7XG5leHBvcnQgZnVuY3Rpb24gaXNDT1NFS3R5KGt0eSkge1xuICAgIHJldHVybiBPYmplY3QudmFsdWVzKENPU0VLVFkpLmluZGV4T2Yoa3R5KSA+PSAwO1xufVxuLyoqXG4gKiBDT1NFIEN1cnZlc1xuICpcbiAqIGh0dHBzOi8vd3d3LmlhbmEub3JnL2Fzc2lnbm1lbnRzL2Nvc2UvY29zZS54aHRtbCNlbGxpcHRpYy1jdXJ2ZXNcbiAqL1xuZXhwb3J0IHZhciBDT1NFQ1JWO1xuKGZ1bmN0aW9uIChDT1NFQ1JWKSB7XG4gICAgQ09TRUNSVltDT1NFQ1JWW1wiUDI1NlwiXSA9IDFdID0gXCJQMjU2XCI7XG4gICAgQ09TRUNSVltDT1NFQ1JWW1wiUDM4NFwiXSA9IDJdID0gXCJQMzg0XCI7XG4gICAgQ09TRUNSVltDT1NFQ1JWW1wiUDUyMVwiXSA9IDNdID0gXCJQNTIxXCI7XG4gICAgQ09TRUNSVltDT1NFQ1JWW1wiRUQyNTUxOVwiXSA9IDZdID0gXCJFRDI1NTE5XCI7XG4gICAgQ09TRUNSVltDT1NFQ1JWW1wiU0VDUDI1NksxXCJdID0gOF0gPSBcIlNFQ1AyNTZLMVwiO1xufSkoQ09TRUNSViB8fCAoQ09TRUNSViA9IHt9KSk7XG5leHBvcnQgZnVuY3Rpb24gaXNDT1NFQ3J2KGNydikge1xuICAgIHJldHVybiBPYmplY3QudmFsdWVzKENPU0VDUlYpLmluZGV4T2YoY3J2KSA+PSAwO1xufVxuLyoqXG4gKiBDT1NFIEFsZ29yaXRobXNcbiAqXG4gKiBodHRwczovL3d3dy5pYW5hLm9yZy9hc3NpZ25tZW50cy9jb3NlL2Nvc2UueGh0bWwjYWxnb3JpdGhtc1xuICovXG5leHBvcnQgdmFyIENPU0VBTEc7XG4oZnVuY3Rpb24gKENPU0VBTEcpIHtcbiAgICBDT1NFQUxHW0NPU0VBTEdbXCJFUzI1NlwiXSA9IC03XSA9IFwiRVMyNTZcIjtcbiAgICBDT1NFQUxHW0NPU0VBTEdbXCJFZERTQVwiXSA9IC04XSA9IFwiRWREU0FcIjtcbiAgICBDT1NFQUxHW0NPU0VBTEdbXCJFUzM4NFwiXSA9IC0zNV0gPSBcIkVTMzg0XCI7XG4gICAgQ09TRUFMR1tDT1NFQUxHW1wiRVM1MTJcIl0gPSAtMzZdID0gXCJFUzUxMlwiO1xuICAgIENPU0VBTEdbQ09TRUFMR1tcIlBTMjU2XCJdID0gLTM3XSA9IFwiUFMyNTZcIjtcbiAgICBDT1NFQUxHW0NPU0VBTEdbXCJQUzM4NFwiXSA9IC0zOF0gPSBcIlBTMzg0XCI7XG4gICAgQ09TRUFMR1tDT1NFQUxHW1wiUFM1MTJcIl0gPSAtMzldID0gXCJQUzUxMlwiO1xuICAgIENPU0VBTEdbQ09TRUFMR1tcIkVTMjU2S1wiXSA9IC00N10gPSBcIkVTMjU2S1wiO1xuICAgIENPU0VBTEdbQ09TRUFMR1tcIlJTMjU2XCJdID0gLTI1N10gPSBcIlJTMjU2XCI7XG4gICAgQ09TRUFMR1tDT1NFQUxHW1wiUlMzODRcIl0gPSAtMjU4XSA9IFwiUlMzODRcIjtcbiAgICBDT1NFQUxHW0NPU0VBTEdbXCJSUzUxMlwiXSA9IC0yNTldID0gXCJSUzUxMlwiO1xuICAgIENPU0VBTEdbQ09TRUFMR1tcIlJTMVwiXSA9IC02NTUzNV0gPSBcIlJTMVwiO1xufSkoQ09TRUFMRyB8fCAoQ09TRUFMRyA9IHt9KSk7XG5leHBvcnQgZnVuY3Rpb24gaXNDT1NFQWxnKGFsZykge1xuICAgIHJldHVybiBPYmplY3QudmFsdWVzKENPU0VBTEcpLmluZGV4T2YoYWxnKSA+PSAwO1xufVxuIl0sIm5hbWVzIjpbImlzQ09TRVB1YmxpY0tleU9LUCIsImNvc2VQdWJsaWNLZXkiLCJrdHkiLCJnZXQiLCJDT1NFS0VZUyIsImlzQ09TRUt0eSIsIkNPU0VLVFkiLCJPS1AiLCJpc0NPU0VQdWJsaWNLZXlFQzIiLCJFQzIiLCJpc0NPU0VQdWJsaWNLZXlSU0EiLCJSU0EiLCJPYmplY3QiLCJ2YWx1ZXMiLCJpbmRleE9mIiwiQ09TRUNSViIsImlzQ09TRUNydiIsImNydiIsIkNPU0VBTEciLCJpc0NPU0VBbGciLCJhbGciXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/cose.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/decodeAttestationObject.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@simplewebauthn/server/esm/helpers/decodeAttestationObject.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   _decodeAttestationObjectInternals: () => (/* binding */ _decodeAttestationObjectInternals),\n/* harmony export */   decodeAttestationObject: () => (/* binding */ decodeAttestationObject)\n/* harmony export */ });\n/* harmony import */ var _iso_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./iso/index.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/index.js\");\n\n/**\n * Convert an AttestationObject buffer to a proper object\n *\n * @param base64AttestationObject Attestation Object buffer\n */ function decodeAttestationObject(attestationObject) {\n    return _decodeAttestationObjectInternals.stubThis(_iso_index_js__WEBPACK_IMPORTED_MODULE_0__.isoCBOR.decodeFirst(attestationObject));\n}\n// Make it possible to stub the return value during testing\nconst _decodeAttestationObjectInternals = {\n    stubThis: (value)=>value\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNpbXBsZXdlYmF1dGhuL3NlcnZlci9lc20vaGVscGVycy9kZWNvZGVBdHRlc3RhdGlvbk9iamVjdC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBeUM7QUFDekM7Ozs7Q0FJQyxHQUNNLFNBQVNDLHdCQUF3QkMsaUJBQWlCO0lBQ3JELE9BQU9DLGtDQUFrQ0MsUUFBUSxDQUFDSiw4REFBbUIsQ0FBQ0U7QUFDMUU7QUFDQSwyREFBMkQ7QUFDcEQsTUFBTUMsb0NBQW9DO0lBQzdDQyxVQUFVLENBQUNFLFFBQVVBO0FBQ3pCLEVBQUUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jYW1wdXMtbWluZC8uL25vZGVfbW9kdWxlcy9Ac2ltcGxld2ViYXV0aG4vc2VydmVyL2VzbS9oZWxwZXJzL2RlY29kZUF0dGVzdGF0aW9uT2JqZWN0LmpzPzBiNGUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgaXNvQ0JPUiB9IGZyb20gJy4vaXNvL2luZGV4LmpzJztcbi8qKlxuICogQ29udmVydCBhbiBBdHRlc3RhdGlvbk9iamVjdCBidWZmZXIgdG8gYSBwcm9wZXIgb2JqZWN0XG4gKlxuICogQHBhcmFtIGJhc2U2NEF0dGVzdGF0aW9uT2JqZWN0IEF0dGVzdGF0aW9uIE9iamVjdCBidWZmZXJcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGRlY29kZUF0dGVzdGF0aW9uT2JqZWN0KGF0dGVzdGF0aW9uT2JqZWN0KSB7XG4gICAgcmV0dXJuIF9kZWNvZGVBdHRlc3RhdGlvbk9iamVjdEludGVybmFscy5zdHViVGhpcyhpc29DQk9SLmRlY29kZUZpcnN0KGF0dGVzdGF0aW9uT2JqZWN0KSk7XG59XG4vLyBNYWtlIGl0IHBvc3NpYmxlIHRvIHN0dWIgdGhlIHJldHVybiB2YWx1ZSBkdXJpbmcgdGVzdGluZ1xuZXhwb3J0IGNvbnN0IF9kZWNvZGVBdHRlc3RhdGlvbk9iamVjdEludGVybmFscyA9IHtcbiAgICBzdHViVGhpczogKHZhbHVlKSA9PiB2YWx1ZSxcbn07XG4iXSwibmFtZXMiOlsiaXNvQ0JPUiIsImRlY29kZUF0dGVzdGF0aW9uT2JqZWN0IiwiYXR0ZXN0YXRpb25PYmplY3QiLCJfZGVjb2RlQXR0ZXN0YXRpb25PYmplY3RJbnRlcm5hbHMiLCJzdHViVGhpcyIsImRlY29kZUZpcnN0IiwidmFsdWUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/decodeAttestationObject.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/decodeAuthenticatorExtensions.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/@simplewebauthn/server/esm/helpers/decodeAuthenticatorExtensions.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   decodeAuthenticatorExtensions: () => (/* binding */ decodeAuthenticatorExtensions)\n/* harmony export */ });\n/* harmony import */ var _iso_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./iso/index.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/index.js\");\n\n/**\n * Convert authenticator extension data buffer to a proper object\n *\n * @param extensionData Authenticator Extension Data buffer\n */ function decodeAuthenticatorExtensions(extensionData) {\n    let toCBOR;\n    try {\n        toCBOR = _iso_index_js__WEBPACK_IMPORTED_MODULE_0__.isoCBOR.decodeFirst(extensionData);\n    } catch (err) {\n        const _err = err;\n        throw new Error(`Error decoding authenticator extensions: ${_err.message}`);\n    }\n    return convertMapToObjectDeep(toCBOR);\n}\n/**\n * CBOR-encoded extensions can be deeply-nested Maps, which are too deep for a simple\n * `Object.entries()`. This method will recursively make sure that all Maps are converted into\n * basic objects.\n */ function convertMapToObjectDeep(input) {\n    const mapped = {};\n    for (const [key, value] of input){\n        if (value instanceof Map) {\n            mapped[key] = convertMapToObjectDeep(value);\n        } else {\n            mapped[key] = value;\n        }\n    }\n    return mapped;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNpbXBsZXdlYmF1dGhuL3NlcnZlci9lc20vaGVscGVycy9kZWNvZGVBdXRoZW50aWNhdG9yRXh0ZW5zaW9ucy5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUF5QztBQUN6Qzs7OztDQUlDLEdBQ00sU0FBU0MsOEJBQThCQyxhQUFhO0lBQ3ZELElBQUlDO0lBQ0osSUFBSTtRQUNBQSxTQUFTSCw4REFBbUIsQ0FBQ0U7SUFDakMsRUFDQSxPQUFPRyxLQUFLO1FBQ1IsTUFBTUMsT0FBT0Q7UUFDYixNQUFNLElBQUlFLE1BQU0sQ0FBQyx5Q0FBeUMsRUFBRUQsS0FBS0UsT0FBTyxDQUFDLENBQUM7SUFDOUU7SUFDQSxPQUFPQyx1QkFBdUJOO0FBQ2xDO0FBQ0E7Ozs7Q0FJQyxHQUNELFNBQVNNLHVCQUF1QkMsS0FBSztJQUNqQyxNQUFNQyxTQUFTLENBQUM7SUFDaEIsS0FBSyxNQUFNLENBQUNDLEtBQUtDLE1BQU0sSUFBSUgsTUFBTztRQUM5QixJQUFJRyxpQkFBaUJDLEtBQUs7WUFDdEJILE1BQU0sQ0FBQ0MsSUFBSSxHQUFHSCx1QkFBdUJJO1FBQ3pDLE9BQ0s7WUFDREYsTUFBTSxDQUFDQyxJQUFJLEdBQUdDO1FBQ2xCO0lBQ0o7SUFDQSxPQUFPRjtBQUNYIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vY2FtcHVzLW1pbmQvLi9ub2RlX21vZHVsZXMvQHNpbXBsZXdlYmF1dGhuL3NlcnZlci9lc20vaGVscGVycy9kZWNvZGVBdXRoZW50aWNhdG9yRXh0ZW5zaW9ucy5qcz8yNjA3Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGlzb0NCT1IgfSBmcm9tICcuL2lzby9pbmRleC5qcyc7XG4vKipcbiAqIENvbnZlcnQgYXV0aGVudGljYXRvciBleHRlbnNpb24gZGF0YSBidWZmZXIgdG8gYSBwcm9wZXIgb2JqZWN0XG4gKlxuICogQHBhcmFtIGV4dGVuc2lvbkRhdGEgQXV0aGVudGljYXRvciBFeHRlbnNpb24gRGF0YSBidWZmZXJcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGRlY29kZUF1dGhlbnRpY2F0b3JFeHRlbnNpb25zKGV4dGVuc2lvbkRhdGEpIHtcbiAgICBsZXQgdG9DQk9SO1xuICAgIHRyeSB7XG4gICAgICAgIHRvQ0JPUiA9IGlzb0NCT1IuZGVjb2RlRmlyc3QoZXh0ZW5zaW9uRGF0YSk7XG4gICAgfVxuICAgIGNhdGNoIChlcnIpIHtcbiAgICAgICAgY29uc3QgX2VyciA9IGVycjtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBFcnJvciBkZWNvZGluZyBhdXRoZW50aWNhdG9yIGV4dGVuc2lvbnM6ICR7X2Vyci5tZXNzYWdlfWApO1xuICAgIH1cbiAgICByZXR1cm4gY29udmVydE1hcFRvT2JqZWN0RGVlcCh0b0NCT1IpO1xufVxuLyoqXG4gKiBDQk9SLWVuY29kZWQgZXh0ZW5zaW9ucyBjYW4gYmUgZGVlcGx5LW5lc3RlZCBNYXBzLCB3aGljaCBhcmUgdG9vIGRlZXAgZm9yIGEgc2ltcGxlXG4gKiBgT2JqZWN0LmVudHJpZXMoKWAuIFRoaXMgbWV0aG9kIHdpbGwgcmVjdXJzaXZlbHkgbWFrZSBzdXJlIHRoYXQgYWxsIE1hcHMgYXJlIGNvbnZlcnRlZCBpbnRvXG4gKiBiYXNpYyBvYmplY3RzLlxuICovXG5mdW5jdGlvbiBjb252ZXJ0TWFwVG9PYmplY3REZWVwKGlucHV0KSB7XG4gICAgY29uc3QgbWFwcGVkID0ge307XG4gICAgZm9yIChjb25zdCBba2V5LCB2YWx1ZV0gb2YgaW5wdXQpIHtcbiAgICAgICAgaWYgKHZhbHVlIGluc3RhbmNlb2YgTWFwKSB7XG4gICAgICAgICAgICBtYXBwZWRba2V5XSA9IGNvbnZlcnRNYXBUb09iamVjdERlZXAodmFsdWUpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgbWFwcGVkW2tleV0gPSB2YWx1ZTtcbiAgICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gbWFwcGVkO1xufVxuIl0sIm5hbWVzIjpbImlzb0NCT1IiLCJkZWNvZGVBdXRoZW50aWNhdG9yRXh0ZW5zaW9ucyIsImV4dGVuc2lvbkRhdGEiLCJ0b0NCT1IiLCJkZWNvZGVGaXJzdCIsImVyciIsIl9lcnIiLCJFcnJvciIsIm1lc3NhZ2UiLCJjb252ZXJ0TWFwVG9PYmplY3REZWVwIiwiaW5wdXQiLCJtYXBwZWQiLCJrZXkiLCJ2YWx1ZSIsIk1hcCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/decodeAuthenticatorExtensions.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/decodeClientDataJSON.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@simplewebauthn/server/esm/helpers/decodeClientDataJSON.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   _decodeClientDataJSONInternals: () => (/* binding */ _decodeClientDataJSONInternals),\n/* harmony export */   decodeClientDataJSON: () => (/* binding */ decodeClientDataJSON)\n/* harmony export */ });\n/* harmony import */ var _iso_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./iso/index.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/index.js\");\n\n/**\n * Decode an authenticator's base64url-encoded clientDataJSON to JSON\n */ function decodeClientDataJSON(data) {\n    const toString = _iso_index_js__WEBPACK_IMPORTED_MODULE_0__.isoBase64URL.toString(data);\n    const clientData = JSON.parse(toString);\n    return _decodeClientDataJSONInternals.stubThis(clientData);\n}\n// Make it possible to stub the return value during testing\nconst _decodeClientDataJSONInternals = {\n    stubThis: (value)=>value\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNpbXBsZXdlYmF1dGhuL3NlcnZlci9lc20vaGVscGVycy9kZWNvZGVDbGllbnREYXRhSlNPTi5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBOEM7QUFDOUM7O0NBRUMsR0FDTSxTQUFTQyxxQkFBcUJDLElBQUk7SUFDckMsTUFBTUMsV0FBV0gsZ0VBQXFCLENBQUNFO0lBQ3ZDLE1BQU1FLGFBQWFDLEtBQUtDLEtBQUssQ0FBQ0g7SUFDOUIsT0FBT0ksK0JBQStCQyxRQUFRLENBQUNKO0FBQ25EO0FBQ0EsMkRBQTJEO0FBQ3BELE1BQU1HLGlDQUFpQztJQUMxQ0MsVUFBVSxDQUFDQyxRQUFVQTtBQUN6QixFQUFFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vY2FtcHVzLW1pbmQvLi9ub2RlX21vZHVsZXMvQHNpbXBsZXdlYmF1dGhuL3NlcnZlci9lc20vaGVscGVycy9kZWNvZGVDbGllbnREYXRhSlNPTi5qcz9iNzhmIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGlzb0Jhc2U2NFVSTCB9IGZyb20gJy4vaXNvL2luZGV4LmpzJztcbi8qKlxuICogRGVjb2RlIGFuIGF1dGhlbnRpY2F0b3IncyBiYXNlNjR1cmwtZW5jb2RlZCBjbGllbnREYXRhSlNPTiB0byBKU09OXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBkZWNvZGVDbGllbnREYXRhSlNPTihkYXRhKSB7XG4gICAgY29uc3QgdG9TdHJpbmcgPSBpc29CYXNlNjRVUkwudG9TdHJpbmcoZGF0YSk7XG4gICAgY29uc3QgY2xpZW50RGF0YSA9IEpTT04ucGFyc2UodG9TdHJpbmcpO1xuICAgIHJldHVybiBfZGVjb2RlQ2xpZW50RGF0YUpTT05JbnRlcm5hbHMuc3R1YlRoaXMoY2xpZW50RGF0YSk7XG59XG4vLyBNYWtlIGl0IHBvc3NpYmxlIHRvIHN0dWIgdGhlIHJldHVybiB2YWx1ZSBkdXJpbmcgdGVzdGluZ1xuZXhwb3J0IGNvbnN0IF9kZWNvZGVDbGllbnREYXRhSlNPTkludGVybmFscyA9IHtcbiAgICBzdHViVGhpczogKHZhbHVlKSA9PiB2YWx1ZSxcbn07XG4iXSwibmFtZXMiOlsiaXNvQmFzZTY0VVJMIiwiZGVjb2RlQ2xpZW50RGF0YUpTT04iLCJkYXRhIiwidG9TdHJpbmciLCJjbGllbnREYXRhIiwiSlNPTiIsInBhcnNlIiwiX2RlY29kZUNsaWVudERhdGFKU09OSW50ZXJuYWxzIiwic3R1YlRoaXMiLCJ2YWx1ZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/decodeClientDataJSON.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/decodeCredentialPublicKey.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@simplewebauthn/server/esm/helpers/decodeCredentialPublicKey.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   _decodeCredentialPublicKeyInternals: () => (/* binding */ _decodeCredentialPublicKeyInternals),\n/* harmony export */   decodeCredentialPublicKey: () => (/* binding */ decodeCredentialPublicKey)\n/* harmony export */ });\n/* harmony import */ var _iso_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./iso/index.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/index.js\");\n\nfunction decodeCredentialPublicKey(publicKey) {\n    return _decodeCredentialPublicKeyInternals.stubThis(_iso_index_js__WEBPACK_IMPORTED_MODULE_0__.isoCBOR.decodeFirst(publicKey));\n}\n// Make it possible to stub the return value during testing\nconst _decodeCredentialPublicKeyInternals = {\n    stubThis: (value)=>value\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNpbXBsZXdlYmF1dGhuL3NlcnZlci9lc20vaGVscGVycy9kZWNvZGVDcmVkZW50aWFsUHVibGljS2V5LmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUF5QztBQUNsQyxTQUFTQywwQkFBMEJDLFNBQVM7SUFDL0MsT0FBT0Msb0NBQW9DQyxRQUFRLENBQUNKLDhEQUFtQixDQUFDRTtBQUM1RTtBQUNBLDJEQUEyRDtBQUNwRCxNQUFNQyxzQ0FBc0M7SUFDL0NDLFVBQVUsQ0FBQ0UsUUFBVUE7QUFDekIsRUFBRSIsInNvdXJjZXMiOlsid2VicGFjazovL2NhbXB1cy1taW5kLy4vbm9kZV9tb2R1bGVzL0BzaW1wbGV3ZWJhdXRobi9zZXJ2ZXIvZXNtL2hlbHBlcnMvZGVjb2RlQ3JlZGVudGlhbFB1YmxpY0tleS5qcz8zYzFhIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGlzb0NCT1IgfSBmcm9tICcuL2lzby9pbmRleC5qcyc7XG5leHBvcnQgZnVuY3Rpb24gZGVjb2RlQ3JlZGVudGlhbFB1YmxpY0tleShwdWJsaWNLZXkpIHtcbiAgICByZXR1cm4gX2RlY29kZUNyZWRlbnRpYWxQdWJsaWNLZXlJbnRlcm5hbHMuc3R1YlRoaXMoaXNvQ0JPUi5kZWNvZGVGaXJzdChwdWJsaWNLZXkpKTtcbn1cbi8vIE1ha2UgaXQgcG9zc2libGUgdG8gc3R1YiB0aGUgcmV0dXJuIHZhbHVlIGR1cmluZyB0ZXN0aW5nXG5leHBvcnQgY29uc3QgX2RlY29kZUNyZWRlbnRpYWxQdWJsaWNLZXlJbnRlcm5hbHMgPSB7XG4gICAgc3R1YlRoaXM6ICh2YWx1ZSkgPT4gdmFsdWUsXG59O1xuIl0sIm5hbWVzIjpbImlzb0NCT1IiLCJkZWNvZGVDcmVkZW50aWFsUHVibGljS2V5IiwicHVibGljS2V5IiwiX2RlY29kZUNyZWRlbnRpYWxQdWJsaWNLZXlJbnRlcm5hbHMiLCJzdHViVGhpcyIsImRlY29kZUZpcnN0IiwidmFsdWUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/decodeCredentialPublicKey.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/fetch.js":
/*!******************************************************************!*\
  !*** ./node_modules/@simplewebauthn/server/esm/helpers/fetch.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   _fetchInternals: () => (/* binding */ _fetchInternals),\n/* harmony export */   fetch: () => (/* binding */ fetch)\n/* harmony export */ });\n/* harmony import */ var _deps_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../deps.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/deps.js\");\n\n/**\n * A simple method for requesting data via standard `fetch`. Should work\n * across multiple runtimes.\n */ function fetch(url) {\n    return _fetchInternals.stubThis(url);\n}\n// Make it possible to stub the return value during testing\nconst _fetchInternals = {\n    stubThis: (url)=>(0,_deps_js__WEBPACK_IMPORTED_MODULE_0__.crossFetch)(url)\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNpbXBsZXdlYmF1dGhuL3NlcnZlci9lc20vaGVscGVycy9mZXRjaC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBd0M7QUFDeEM7OztDQUdDLEdBQ00sU0FBU0MsTUFBTUMsR0FBRztJQUNyQixPQUFPQyxnQkFBZ0JDLFFBQVEsQ0FBQ0Y7QUFDcEM7QUFDQSwyREFBMkQ7QUFDcEQsTUFBTUMsa0JBQWtCO0lBQzNCQyxVQUFVLENBQUNGLE1BQVFGLG9EQUFVQSxDQUFDRTtBQUNsQyxFQUFFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vY2FtcHVzLW1pbmQvLi9ub2RlX21vZHVsZXMvQHNpbXBsZXdlYmF1dGhuL3NlcnZlci9lc20vaGVscGVycy9mZXRjaC5qcz80MjAzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGNyb3NzRmV0Y2ggfSBmcm9tICcuLi9kZXBzLmpzJztcbi8qKlxuICogQSBzaW1wbGUgbWV0aG9kIGZvciByZXF1ZXN0aW5nIGRhdGEgdmlhIHN0YW5kYXJkIGBmZXRjaGAuIFNob3VsZCB3b3JrXG4gKiBhY3Jvc3MgbXVsdGlwbGUgcnVudGltZXMuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBmZXRjaCh1cmwpIHtcbiAgICByZXR1cm4gX2ZldGNoSW50ZXJuYWxzLnN0dWJUaGlzKHVybCk7XG59XG4vLyBNYWtlIGl0IHBvc3NpYmxlIHRvIHN0dWIgdGhlIHJldHVybiB2YWx1ZSBkdXJpbmcgdGVzdGluZ1xuZXhwb3J0IGNvbnN0IF9mZXRjaEludGVybmFscyA9IHtcbiAgICBzdHViVGhpczogKHVybCkgPT4gY3Jvc3NGZXRjaCh1cmwpLFxufTtcbiJdLCJuYW1lcyI6WyJjcm9zc0ZldGNoIiwiZmV0Y2giLCJ1cmwiLCJfZmV0Y2hJbnRlcm5hbHMiLCJzdHViVGhpcyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/fetch.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/generateChallenge.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@simplewebauthn/server/esm/helpers/generateChallenge.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   _generateChallengeInternals: () => (/* binding */ _generateChallengeInternals),\n/* harmony export */   generateChallenge: () => (/* binding */ generateChallenge)\n/* harmony export */ });\n/* harmony import */ var _iso_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./iso/index.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/index.js\");\n\n/**\n * Generate a suitably random value to be used as an attestation or assertion challenge\n */ async function generateChallenge() {\n    /**\n     * WebAuthn spec says that 16 bytes is a good minimum:\n     *\n     * \"In order to prevent replay attacks, the challenges MUST contain enough entropy to make\n     * guessing them infeasible. Challenges SHOULD therefore be at least 16 bytes long.\"\n     *\n     * Just in case, let's double it\n     */ const challenge = new Uint8Array(32);\n    await _iso_index_js__WEBPACK_IMPORTED_MODULE_0__.isoCrypto.getRandomValues(challenge);\n    return _generateChallengeInternals.stubThis(challenge);\n}\n// Make it possible to stub the return value during testing\nconst _generateChallengeInternals = {\n    stubThis: (value)=>value\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNpbXBsZXdlYmF1dGhuL3NlcnZlci9lc20vaGVscGVycy9nZW5lcmF0ZUNoYWxsZW5nZS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBMkM7QUFDM0M7O0NBRUMsR0FDTSxlQUFlQztJQUNsQjs7Ozs7OztLQU9DLEdBQ0QsTUFBTUMsWUFBWSxJQUFJQyxXQUFXO0lBQ2pDLE1BQU1ILG9FQUF5QixDQUFDRTtJQUNoQyxPQUFPRyw0QkFBNEJDLFFBQVEsQ0FBQ0o7QUFDaEQ7QUFDQSwyREFBMkQ7QUFDcEQsTUFBTUcsOEJBQThCO0lBQ3ZDQyxVQUFVLENBQUNDLFFBQVVBO0FBQ3pCLEVBQUUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jYW1wdXMtbWluZC8uL25vZGVfbW9kdWxlcy9Ac2ltcGxld2ViYXV0aG4vc2VydmVyL2VzbS9oZWxwZXJzL2dlbmVyYXRlQ2hhbGxlbmdlLmpzPzliY2QiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgaXNvQ3J5cHRvIH0gZnJvbSAnLi9pc28vaW5kZXguanMnO1xuLyoqXG4gKiBHZW5lcmF0ZSBhIHN1aXRhYmx5IHJhbmRvbSB2YWx1ZSB0byBiZSB1c2VkIGFzIGFuIGF0dGVzdGF0aW9uIG9yIGFzc2VydGlvbiBjaGFsbGVuZ2VcbiAqL1xuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGdlbmVyYXRlQ2hhbGxlbmdlKCkge1xuICAgIC8qKlxuICAgICAqIFdlYkF1dGhuIHNwZWMgc2F5cyB0aGF0IDE2IGJ5dGVzIGlzIGEgZ29vZCBtaW5pbXVtOlxuICAgICAqXG4gICAgICogXCJJbiBvcmRlciB0byBwcmV2ZW50IHJlcGxheSBhdHRhY2tzLCB0aGUgY2hhbGxlbmdlcyBNVVNUIGNvbnRhaW4gZW5vdWdoIGVudHJvcHkgdG8gbWFrZVxuICAgICAqIGd1ZXNzaW5nIHRoZW0gaW5mZWFzaWJsZS4gQ2hhbGxlbmdlcyBTSE9VTEQgdGhlcmVmb3JlIGJlIGF0IGxlYXN0IDE2IGJ5dGVzIGxvbmcuXCJcbiAgICAgKlxuICAgICAqIEp1c3QgaW4gY2FzZSwgbGV0J3MgZG91YmxlIGl0XG4gICAgICovXG4gICAgY29uc3QgY2hhbGxlbmdlID0gbmV3IFVpbnQ4QXJyYXkoMzIpO1xuICAgIGF3YWl0IGlzb0NyeXB0by5nZXRSYW5kb21WYWx1ZXMoY2hhbGxlbmdlKTtcbiAgICByZXR1cm4gX2dlbmVyYXRlQ2hhbGxlbmdlSW50ZXJuYWxzLnN0dWJUaGlzKGNoYWxsZW5nZSk7XG59XG4vLyBNYWtlIGl0IHBvc3NpYmxlIHRvIHN0dWIgdGhlIHJldHVybiB2YWx1ZSBkdXJpbmcgdGVzdGluZ1xuZXhwb3J0IGNvbnN0IF9nZW5lcmF0ZUNoYWxsZW5nZUludGVybmFscyA9IHtcbiAgICBzdHViVGhpczogKHZhbHVlKSA9PiB2YWx1ZSxcbn07XG4iXSwibmFtZXMiOlsiaXNvQ3J5cHRvIiwiZ2VuZXJhdGVDaGFsbGVuZ2UiLCJjaGFsbGVuZ2UiLCJVaW50OEFycmF5IiwiZ2V0UmFuZG9tVmFsdWVzIiwiX2dlbmVyYXRlQ2hhbGxlbmdlSW50ZXJuYWxzIiwic3R1YlRoaXMiLCJ2YWx1ZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/generateChallenge.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/getCertificateInfo.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@simplewebauthn/server/esm/helpers/getCertificateInfo.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getCertificateInfo: () => (/* binding */ getCertificateInfo)\n/* harmony export */ });\n/* harmony import */ var _deps_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../deps.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/deps.js\");\n\nconst issuerSubjectIDKey = {\n    \"2.5.4.6\": \"C\",\n    \"2.5.4.10\": \"O\",\n    \"2.5.4.11\": \"OU\",\n    \"2.5.4.3\": \"CN\"\n};\n/**\n * Extract PEM certificate info\n *\n * @param pemCertificate Result from call to `convertASN1toPEM(x5c[0])`\n */ function getCertificateInfo(leafCertBuffer) {\n    const x509 = _deps_js__WEBPACK_IMPORTED_MODULE_0__.AsnParser.parse(leafCertBuffer, _deps_js__WEBPACK_IMPORTED_MODULE_0__.Certificate);\n    const parsedCert = x509.tbsCertificate;\n    // Issuer\n    const issuer = {\n        combined: \"\"\n    };\n    parsedCert.issuer.forEach(([iss])=>{\n        const key = issuerSubjectIDKey[iss.type];\n        if (key) {\n            issuer[key] = iss.value.toString();\n        }\n    });\n    issuer.combined = issuerSubjectToString(issuer);\n    // Subject\n    const subject = {\n        combined: \"\"\n    };\n    parsedCert.subject.forEach(([iss])=>{\n        const key = issuerSubjectIDKey[iss.type];\n        if (key) {\n            subject[key] = iss.value.toString();\n        }\n    });\n    subject.combined = issuerSubjectToString(subject);\n    let basicConstraintsCA = false;\n    if (parsedCert.extensions) {\n        // console.log(parsedCert.extensions);\n        for (const ext of parsedCert.extensions){\n            if (ext.extnID === _deps_js__WEBPACK_IMPORTED_MODULE_0__.id_ce_basicConstraints) {\n                const basicConstraints = _deps_js__WEBPACK_IMPORTED_MODULE_0__.AsnParser.parse(ext.extnValue, _deps_js__WEBPACK_IMPORTED_MODULE_0__.BasicConstraints);\n                basicConstraintsCA = basicConstraints.cA;\n            }\n        }\n    }\n    return {\n        issuer,\n        subject,\n        version: parsedCert.version,\n        basicConstraintsCA,\n        notBefore: parsedCert.validity.notBefore.getTime(),\n        notAfter: parsedCert.validity.notAfter.getTime(),\n        parsedCertificate: x509\n    };\n}\n/**\n * Stringify the parts of Issuer or Subject info for easier comparison of subject issuers with\n * issuer subjects.\n *\n * The order might seem arbitrary, because it is. It should be enough that the two are stringified\n * in the same order.\n */ function issuerSubjectToString(input) {\n    const parts = [];\n    if (input.C) {\n        parts.push(input.C);\n    }\n    if (input.O) {\n        parts.push(input.O);\n    }\n    if (input.OU) {\n        parts.push(input.OU);\n    }\n    if (input.CN) {\n        parts.push(input.CN);\n    }\n    return parts.join(\" : \");\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNpbXBsZXdlYmF1dGhuL3NlcnZlci9lc20vaGVscGVycy9nZXRDZXJ0aWZpY2F0ZUluZm8uanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBOEY7QUFDOUYsTUFBTUkscUJBQXFCO0lBQ3ZCLFdBQVc7SUFDWCxZQUFZO0lBQ1osWUFBWTtJQUNaLFdBQVc7QUFDZjtBQUNBOzs7O0NBSUMsR0FDTSxTQUFTQyxtQkFBbUJDLGNBQWM7SUFDN0MsTUFBTUMsT0FBT1AsK0NBQVNBLENBQUNRLEtBQUssQ0FBQ0YsZ0JBQWdCSixpREFBV0E7SUFDeEQsTUFBTU8sYUFBYUYsS0FBS0csY0FBYztJQUN0QyxTQUFTO0lBQ1QsTUFBTUMsU0FBUztRQUFFQyxVQUFVO0lBQUc7SUFDOUJILFdBQVdFLE1BQU0sQ0FBQ0UsT0FBTyxDQUFDLENBQUMsQ0FBQ0MsSUFBSTtRQUM1QixNQUFNQyxNQUFNWCxrQkFBa0IsQ0FBQ1UsSUFBSUUsSUFBSSxDQUFDO1FBQ3hDLElBQUlELEtBQUs7WUFDTEosTUFBTSxDQUFDSSxJQUFJLEdBQUdELElBQUlHLEtBQUssQ0FBQ0MsUUFBUTtRQUNwQztJQUNKO0lBQ0FQLE9BQU9DLFFBQVEsR0FBR08sc0JBQXNCUjtJQUN4QyxVQUFVO0lBQ1YsTUFBTVMsVUFBVTtRQUFFUixVQUFVO0lBQUc7SUFDL0JILFdBQVdXLE9BQU8sQ0FBQ1AsT0FBTyxDQUFDLENBQUMsQ0FBQ0MsSUFBSTtRQUM3QixNQUFNQyxNQUFNWCxrQkFBa0IsQ0FBQ1UsSUFBSUUsSUFBSSxDQUFDO1FBQ3hDLElBQUlELEtBQUs7WUFDTEssT0FBTyxDQUFDTCxJQUFJLEdBQUdELElBQUlHLEtBQUssQ0FBQ0MsUUFBUTtRQUNyQztJQUNKO0lBQ0FFLFFBQVFSLFFBQVEsR0FBR08sc0JBQXNCQztJQUN6QyxJQUFJQyxxQkFBcUI7SUFDekIsSUFBSVosV0FBV2EsVUFBVSxFQUFFO1FBQ3ZCLHNDQUFzQztRQUN0QyxLQUFLLE1BQU1DLE9BQU9kLFdBQVdhLFVBQVUsQ0FBRTtZQUNyQyxJQUFJQyxJQUFJQyxNQUFNLEtBQUtyQiw0REFBc0JBLEVBQUU7Z0JBQ3ZDLE1BQU1zQixtQkFBbUJ6QiwrQ0FBU0EsQ0FBQ1EsS0FBSyxDQUFDZSxJQUFJRyxTQUFTLEVBQUV6QixzREFBZ0JBO2dCQUN4RW9CLHFCQUFxQkksaUJBQWlCRSxFQUFFO1lBQzVDO1FBQ0o7SUFDSjtJQUNBLE9BQU87UUFDSGhCO1FBQ0FTO1FBQ0FRLFNBQVNuQixXQUFXbUIsT0FBTztRQUMzQlA7UUFDQVEsV0FBV3BCLFdBQVdxQixRQUFRLENBQUNELFNBQVMsQ0FBQ0UsT0FBTztRQUNoREMsVUFBVXZCLFdBQVdxQixRQUFRLENBQUNFLFFBQVEsQ0FBQ0QsT0FBTztRQUM5Q0UsbUJBQW1CMUI7SUFDdkI7QUFDSjtBQUNBOzs7Ozs7Q0FNQyxHQUNELFNBQVNZLHNCQUFzQmUsS0FBSztJQUNoQyxNQUFNQyxRQUFRLEVBQUU7SUFDaEIsSUFBSUQsTUFBTUUsQ0FBQyxFQUFFO1FBQ1RELE1BQU1FLElBQUksQ0FBQ0gsTUFBTUUsQ0FBQztJQUN0QjtJQUNBLElBQUlGLE1BQU1JLENBQUMsRUFBRTtRQUNUSCxNQUFNRSxJQUFJLENBQUNILE1BQU1JLENBQUM7SUFDdEI7SUFDQSxJQUFJSixNQUFNSyxFQUFFLEVBQUU7UUFDVkosTUFBTUUsSUFBSSxDQUFDSCxNQUFNSyxFQUFFO0lBQ3ZCO0lBQ0EsSUFBSUwsTUFBTU0sRUFBRSxFQUFFO1FBQ1ZMLE1BQU1FLElBQUksQ0FBQ0gsTUFBTU0sRUFBRTtJQUN2QjtJQUNBLE9BQU9MLE1BQU1NLElBQUksQ0FBQztBQUN0QiIsInNvdXJjZXMiOlsid2VicGFjazovL2NhbXB1cy1taW5kLy4vbm9kZV9tb2R1bGVzL0BzaW1wbGV3ZWJhdXRobi9zZXJ2ZXIvZXNtL2hlbHBlcnMvZ2V0Q2VydGlmaWNhdGVJbmZvLmpzP2YyMTkiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQXNuUGFyc2VyLCBCYXNpY0NvbnN0cmFpbnRzLCBDZXJ0aWZpY2F0ZSwgaWRfY2VfYmFzaWNDb25zdHJhaW50cyB9IGZyb20gJy4uL2RlcHMuanMnO1xuY29uc3QgaXNzdWVyU3ViamVjdElES2V5ID0ge1xuICAgICcyLjUuNC42JzogJ0MnLFxuICAgICcyLjUuNC4xMCc6ICdPJyxcbiAgICAnMi41LjQuMTEnOiAnT1UnLFxuICAgICcyLjUuNC4zJzogJ0NOJyxcbn07XG4vKipcbiAqIEV4dHJhY3QgUEVNIGNlcnRpZmljYXRlIGluZm9cbiAqXG4gKiBAcGFyYW0gcGVtQ2VydGlmaWNhdGUgUmVzdWx0IGZyb20gY2FsbCB0byBgY29udmVydEFTTjF0b1BFTSh4NWNbMF0pYFxuICovXG5leHBvcnQgZnVuY3Rpb24gZ2V0Q2VydGlmaWNhdGVJbmZvKGxlYWZDZXJ0QnVmZmVyKSB7XG4gICAgY29uc3QgeDUwOSA9IEFzblBhcnNlci5wYXJzZShsZWFmQ2VydEJ1ZmZlciwgQ2VydGlmaWNhdGUpO1xuICAgIGNvbnN0IHBhcnNlZENlcnQgPSB4NTA5LnRic0NlcnRpZmljYXRlO1xuICAgIC8vIElzc3VlclxuICAgIGNvbnN0IGlzc3VlciA9IHsgY29tYmluZWQ6ICcnIH07XG4gICAgcGFyc2VkQ2VydC5pc3N1ZXIuZm9yRWFjaCgoW2lzc10pID0+IHtcbiAgICAgICAgY29uc3Qga2V5ID0gaXNzdWVyU3ViamVjdElES2V5W2lzcy50eXBlXTtcbiAgICAgICAgaWYgKGtleSkge1xuICAgICAgICAgICAgaXNzdWVyW2tleV0gPSBpc3MudmFsdWUudG9TdHJpbmcoKTtcbiAgICAgICAgfVxuICAgIH0pO1xuICAgIGlzc3Vlci5jb21iaW5lZCA9IGlzc3VlclN1YmplY3RUb1N0cmluZyhpc3N1ZXIpO1xuICAgIC8vIFN1YmplY3RcbiAgICBjb25zdCBzdWJqZWN0ID0geyBjb21iaW5lZDogJycgfTtcbiAgICBwYXJzZWRDZXJ0LnN1YmplY3QuZm9yRWFjaCgoW2lzc10pID0+IHtcbiAgICAgICAgY29uc3Qga2V5ID0gaXNzdWVyU3ViamVjdElES2V5W2lzcy50eXBlXTtcbiAgICAgICAgaWYgKGtleSkge1xuICAgICAgICAgICAgc3ViamVjdFtrZXldID0gaXNzLnZhbHVlLnRvU3RyaW5nKCk7XG4gICAgICAgIH1cbiAgICB9KTtcbiAgICBzdWJqZWN0LmNvbWJpbmVkID0gaXNzdWVyU3ViamVjdFRvU3RyaW5nKHN1YmplY3QpO1xuICAgIGxldCBiYXNpY0NvbnN0cmFpbnRzQ0EgPSBmYWxzZTtcbiAgICBpZiAocGFyc2VkQ2VydC5leHRlbnNpb25zKSB7XG4gICAgICAgIC8vIGNvbnNvbGUubG9nKHBhcnNlZENlcnQuZXh0ZW5zaW9ucyk7XG4gICAgICAgIGZvciAoY29uc3QgZXh0IG9mIHBhcnNlZENlcnQuZXh0ZW5zaW9ucykge1xuICAgICAgICAgICAgaWYgKGV4dC5leHRuSUQgPT09IGlkX2NlX2Jhc2ljQ29uc3RyYWludHMpIHtcbiAgICAgICAgICAgICAgICBjb25zdCBiYXNpY0NvbnN0cmFpbnRzID0gQXNuUGFyc2VyLnBhcnNlKGV4dC5leHRuVmFsdWUsIEJhc2ljQ29uc3RyYWludHMpO1xuICAgICAgICAgICAgICAgIGJhc2ljQ29uc3RyYWludHNDQSA9IGJhc2ljQ29uc3RyYWludHMuY0E7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIHtcbiAgICAgICAgaXNzdWVyLFxuICAgICAgICBzdWJqZWN0LFxuICAgICAgICB2ZXJzaW9uOiBwYXJzZWRDZXJ0LnZlcnNpb24sXG4gICAgICAgIGJhc2ljQ29uc3RyYWludHNDQSxcbiAgICAgICAgbm90QmVmb3JlOiBwYXJzZWRDZXJ0LnZhbGlkaXR5Lm5vdEJlZm9yZS5nZXRUaW1lKCksXG4gICAgICAgIG5vdEFmdGVyOiBwYXJzZWRDZXJ0LnZhbGlkaXR5Lm5vdEFmdGVyLmdldFRpbWUoKSxcbiAgICAgICAgcGFyc2VkQ2VydGlmaWNhdGU6IHg1MDksXG4gICAgfTtcbn1cbi8qKlxuICogU3RyaW5naWZ5IHRoZSBwYXJ0cyBvZiBJc3N1ZXIgb3IgU3ViamVjdCBpbmZvIGZvciBlYXNpZXIgY29tcGFyaXNvbiBvZiBzdWJqZWN0IGlzc3VlcnMgd2l0aFxuICogaXNzdWVyIHN1YmplY3RzLlxuICpcbiAqIFRoZSBvcmRlciBtaWdodCBzZWVtIGFyYml0cmFyeSwgYmVjYXVzZSBpdCBpcy4gSXQgc2hvdWxkIGJlIGVub3VnaCB0aGF0IHRoZSB0d28gYXJlIHN0cmluZ2lmaWVkXG4gKiBpbiB0aGUgc2FtZSBvcmRlci5cbiAqL1xuZnVuY3Rpb24gaXNzdWVyU3ViamVjdFRvU3RyaW5nKGlucHV0KSB7XG4gICAgY29uc3QgcGFydHMgPSBbXTtcbiAgICBpZiAoaW5wdXQuQykge1xuICAgICAgICBwYXJ0cy5wdXNoKGlucHV0LkMpO1xuICAgIH1cbiAgICBpZiAoaW5wdXQuTykge1xuICAgICAgICBwYXJ0cy5wdXNoKGlucHV0Lk8pO1xuICAgIH1cbiAgICBpZiAoaW5wdXQuT1UpIHtcbiAgICAgICAgcGFydHMucHVzaChpbnB1dC5PVSk7XG4gICAgfVxuICAgIGlmIChpbnB1dC5DTikge1xuICAgICAgICBwYXJ0cy5wdXNoKGlucHV0LkNOKTtcbiAgICB9XG4gICAgcmV0dXJuIHBhcnRzLmpvaW4oJyA6ICcpO1xufVxuIl0sIm5hbWVzIjpbIkFzblBhcnNlciIsIkJhc2ljQ29uc3RyYWludHMiLCJDZXJ0aWZpY2F0ZSIsImlkX2NlX2Jhc2ljQ29uc3RyYWludHMiLCJpc3N1ZXJTdWJqZWN0SURLZXkiLCJnZXRDZXJ0aWZpY2F0ZUluZm8iLCJsZWFmQ2VydEJ1ZmZlciIsIng1MDkiLCJwYXJzZSIsInBhcnNlZENlcnQiLCJ0YnNDZXJ0aWZpY2F0ZSIsImlzc3VlciIsImNvbWJpbmVkIiwiZm9yRWFjaCIsImlzcyIsImtleSIsInR5cGUiLCJ2YWx1ZSIsInRvU3RyaW5nIiwiaXNzdWVyU3ViamVjdFRvU3RyaW5nIiwic3ViamVjdCIsImJhc2ljQ29uc3RyYWludHNDQSIsImV4dGVuc2lvbnMiLCJleHQiLCJleHRuSUQiLCJiYXNpY0NvbnN0cmFpbnRzIiwiZXh0blZhbHVlIiwiY0EiLCJ2ZXJzaW9uIiwibm90QmVmb3JlIiwidmFsaWRpdHkiLCJnZXRUaW1lIiwibm90QWZ0ZXIiLCJwYXJzZWRDZXJ0aWZpY2F0ZSIsImlucHV0IiwicGFydHMiLCJDIiwicHVzaCIsIk8iLCJPVSIsIkNOIiwiam9pbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/getCertificateInfo.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/index.js":
/*!******************************************************************!*\
  !*** ./node_modules/@simplewebauthn/server/esm/helpers/index.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   convertAAGUIDToString: () => (/* reexport safe */ _convertAAGUIDToString_js__WEBPACK_IMPORTED_MODULE_0__.convertAAGUIDToString),\n/* harmony export */   convertCOSEtoPKCS: () => (/* reexport safe */ _convertCOSEtoPKCS_js__WEBPACK_IMPORTED_MODULE_2__.convertCOSEtoPKCS),\n/* harmony export */   convertCertBufferToPEM: () => (/* reexport safe */ _convertCertBufferToPEM_js__WEBPACK_IMPORTED_MODULE_1__.convertCertBufferToPEM),\n/* harmony export */   cose: () => (/* reexport module object */ _cose_js__WEBPACK_IMPORTED_MODULE_14__),\n/* harmony export */   decodeAttestationObject: () => (/* reexport safe */ _decodeAttestationObject_js__WEBPACK_IMPORTED_MODULE_3__.decodeAttestationObject),\n/* harmony export */   decodeClientDataJSON: () => (/* reexport safe */ _decodeClientDataJSON_js__WEBPACK_IMPORTED_MODULE_4__.decodeClientDataJSON),\n/* harmony export */   decodeCredentialPublicKey: () => (/* reexport safe */ _decodeCredentialPublicKey_js__WEBPACK_IMPORTED_MODULE_5__.decodeCredentialPublicKey),\n/* harmony export */   generateChallenge: () => (/* reexport safe */ _generateChallenge_js__WEBPACK_IMPORTED_MODULE_6__.generateChallenge),\n/* harmony export */   getCertificateInfo: () => (/* reexport safe */ _getCertificateInfo_js__WEBPACK_IMPORTED_MODULE_7__.getCertificateInfo),\n/* harmony export */   isCertRevoked: () => (/* reexport safe */ _isCertRevoked_js__WEBPACK_IMPORTED_MODULE_8__.isCertRevoked),\n/* harmony export */   isoBase64URL: () => (/* reexport safe */ _iso_index_js__WEBPACK_IMPORTED_MODULE_13__.isoBase64URL),\n/* harmony export */   isoCBOR: () => (/* reexport safe */ _iso_index_js__WEBPACK_IMPORTED_MODULE_13__.isoCBOR),\n/* harmony export */   isoCrypto: () => (/* reexport safe */ _iso_index_js__WEBPACK_IMPORTED_MODULE_13__.isoCrypto),\n/* harmony export */   isoUint8Array: () => (/* reexport safe */ _iso_index_js__WEBPACK_IMPORTED_MODULE_13__.isoUint8Array),\n/* harmony export */   parseAuthenticatorData: () => (/* reexport safe */ _parseAuthenticatorData_js__WEBPACK_IMPORTED_MODULE_9__.parseAuthenticatorData),\n/* harmony export */   toHash: () => (/* reexport safe */ _toHash_js__WEBPACK_IMPORTED_MODULE_10__.toHash),\n/* harmony export */   validateCertificatePath: () => (/* reexport safe */ _validateCertificatePath_js__WEBPACK_IMPORTED_MODULE_11__.validateCertificatePath),\n/* harmony export */   verifySignature: () => (/* reexport safe */ _verifySignature_js__WEBPACK_IMPORTED_MODULE_12__.verifySignature)\n/* harmony export */ });\n/* harmony import */ var _convertAAGUIDToString_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./convertAAGUIDToString.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/convertAAGUIDToString.js\");\n/* harmony import */ var _convertCertBufferToPEM_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./convertCertBufferToPEM.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/convertCertBufferToPEM.js\");\n/* harmony import */ var _convertCOSEtoPKCS_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./convertCOSEtoPKCS.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/convertCOSEtoPKCS.js\");\n/* harmony import */ var _decodeAttestationObject_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./decodeAttestationObject.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/decodeAttestationObject.js\");\n/* harmony import */ var _decodeClientDataJSON_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./decodeClientDataJSON.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/decodeClientDataJSON.js\");\n/* harmony import */ var _decodeCredentialPublicKey_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./decodeCredentialPublicKey.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/decodeCredentialPublicKey.js\");\n/* harmony import */ var _generateChallenge_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./generateChallenge.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/generateChallenge.js\");\n/* harmony import */ var _getCertificateInfo_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./getCertificateInfo.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/getCertificateInfo.js\");\n/* harmony import */ var _isCertRevoked_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./isCertRevoked.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/isCertRevoked.js\");\n/* harmony import */ var _parseAuthenticatorData_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./parseAuthenticatorData.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/parseAuthenticatorData.js\");\n/* harmony import */ var _toHash_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./toHash.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/toHash.js\");\n/* harmony import */ var _validateCertificatePath_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./validateCertificatePath.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/validateCertificatePath.js\");\n/* harmony import */ var _verifySignature_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./verifySignature.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/verifySignature.js\");\n/* harmony import */ var _iso_index_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./iso/index.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/index.js\");\n/* harmony import */ var _cose_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./cose.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/cose.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNpbXBsZXdlYmF1dGhuL3NlcnZlci9lc20vaGVscGVycy9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBbUU7QUFDRTtBQUNWO0FBQ1k7QUFDTjtBQUNVO0FBQ2hCO0FBQ0U7QUFDVjtBQUNrQjtBQUNoQztBQUNrQztBQUNoQjtBQUMwQjtBQUMvQztBQUM0UyIsInNvdXJjZXMiOlsid2VicGFjazovL2NhbXB1cy1taW5kLy4vbm9kZV9tb2R1bGVzL0BzaW1wbGV3ZWJhdXRobi9zZXJ2ZXIvZXNtL2hlbHBlcnMvaW5kZXguanM/MTlkNCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjb252ZXJ0QUFHVUlEVG9TdHJpbmcgfSBmcm9tICcuL2NvbnZlcnRBQUdVSURUb1N0cmluZy5qcyc7XG5pbXBvcnQgeyBjb252ZXJ0Q2VydEJ1ZmZlclRvUEVNIH0gZnJvbSAnLi9jb252ZXJ0Q2VydEJ1ZmZlclRvUEVNLmpzJztcbmltcG9ydCB7IGNvbnZlcnRDT1NFdG9QS0NTIH0gZnJvbSAnLi9jb252ZXJ0Q09TRXRvUEtDUy5qcyc7XG5pbXBvcnQgeyBkZWNvZGVBdHRlc3RhdGlvbk9iamVjdCB9IGZyb20gJy4vZGVjb2RlQXR0ZXN0YXRpb25PYmplY3QuanMnO1xuaW1wb3J0IHsgZGVjb2RlQ2xpZW50RGF0YUpTT04gfSBmcm9tICcuL2RlY29kZUNsaWVudERhdGFKU09OLmpzJztcbmltcG9ydCB7IGRlY29kZUNyZWRlbnRpYWxQdWJsaWNLZXkgfSBmcm9tICcuL2RlY29kZUNyZWRlbnRpYWxQdWJsaWNLZXkuanMnO1xuaW1wb3J0IHsgZ2VuZXJhdGVDaGFsbGVuZ2UgfSBmcm9tICcuL2dlbmVyYXRlQ2hhbGxlbmdlLmpzJztcbmltcG9ydCB7IGdldENlcnRpZmljYXRlSW5mbyB9IGZyb20gJy4vZ2V0Q2VydGlmaWNhdGVJbmZvLmpzJztcbmltcG9ydCB7IGlzQ2VydFJldm9rZWQgfSBmcm9tICcuL2lzQ2VydFJldm9rZWQuanMnO1xuaW1wb3J0IHsgcGFyc2VBdXRoZW50aWNhdG9yRGF0YSB9IGZyb20gJy4vcGFyc2VBdXRoZW50aWNhdG9yRGF0YS5qcyc7XG5pbXBvcnQgeyB0b0hhc2ggfSBmcm9tICcuL3RvSGFzaC5qcyc7XG5pbXBvcnQgeyB2YWxpZGF0ZUNlcnRpZmljYXRlUGF0aCB9IGZyb20gJy4vdmFsaWRhdGVDZXJ0aWZpY2F0ZVBhdGguanMnO1xuaW1wb3J0IHsgdmVyaWZ5U2lnbmF0dXJlIH0gZnJvbSAnLi92ZXJpZnlTaWduYXR1cmUuanMnO1xuaW1wb3J0IHsgaXNvQmFzZTY0VVJMLCBpc29DQk9SLCBpc29DcnlwdG8sIGlzb1VpbnQ4QXJyYXkgfSBmcm9tICcuL2lzby9pbmRleC5qcyc7XG5pbXBvcnQgKiBhcyBjb3NlIGZyb20gJy4vY29zZS5qcyc7XG5leHBvcnQgeyBjb252ZXJ0QUFHVUlEVG9TdHJpbmcsIGNvbnZlcnRDZXJ0QnVmZmVyVG9QRU0sIGNvbnZlcnRDT1NFdG9QS0NTLCBjb3NlLCBkZWNvZGVBdHRlc3RhdGlvbk9iamVjdCwgZGVjb2RlQ2xpZW50RGF0YUpTT04sIGRlY29kZUNyZWRlbnRpYWxQdWJsaWNLZXksIGdlbmVyYXRlQ2hhbGxlbmdlLCBnZXRDZXJ0aWZpY2F0ZUluZm8sIGlzQ2VydFJldm9rZWQsIGlzb0Jhc2U2NFVSTCwgaXNvQ0JPUiwgaXNvQ3J5cHRvLCBpc29VaW50OEFycmF5LCBwYXJzZUF1dGhlbnRpY2F0b3JEYXRhLCB0b0hhc2gsIHZhbGlkYXRlQ2VydGlmaWNhdGVQYXRoLCB2ZXJpZnlTaWduYXR1cmUsIH07XG4iXSwibmFtZXMiOlsiY29udmVydEFBR1VJRFRvU3RyaW5nIiwiY29udmVydENlcnRCdWZmZXJUb1BFTSIsImNvbnZlcnRDT1NFdG9QS0NTIiwiZGVjb2RlQXR0ZXN0YXRpb25PYmplY3QiLCJkZWNvZGVDbGllbnREYXRhSlNPTiIsImRlY29kZUNyZWRlbnRpYWxQdWJsaWNLZXkiLCJnZW5lcmF0ZUNoYWxsZW5nZSIsImdldENlcnRpZmljYXRlSW5mbyIsImlzQ2VydFJldm9rZWQiLCJwYXJzZUF1dGhlbnRpY2F0b3JEYXRhIiwidG9IYXNoIiwidmFsaWRhdGVDZXJ0aWZpY2F0ZVBhdGgiLCJ2ZXJpZnlTaWduYXR1cmUiLCJpc29CYXNlNjRVUkwiLCJpc29DQk9SIiwiaXNvQ3J5cHRvIiwiaXNvVWludDhBcnJheSIsImNvc2UiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/isCertRevoked.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@simplewebauthn/server/esm/helpers/isCertRevoked.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isCertRevoked: () => (/* binding */ isCertRevoked)\n/* harmony export */ });\n/* harmony import */ var _deps_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../deps.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/deps.js\");\n/* harmony import */ var _iso_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./iso/index.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/index.js\");\n/* harmony import */ var _fetch_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./fetch.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/fetch.js\");\n\n\n\nconst cacheRevokedCerts = {};\n/**\n * A method to pull a CRL from a certificate and compare its serial number to the list of revoked\n * certificate serial numbers within the CRL.\n *\n * CRL certificate structure referenced from https://tools.ietf.org/html/rfc5280#page-117\n */ async function isCertRevoked(cert) {\n    const { extensions } = cert.tbsCertificate;\n    if (!extensions) {\n        return false;\n    }\n    let extAuthorityKeyID;\n    let extSubjectKeyID;\n    let extCRLDistributionPoints;\n    extensions.forEach((ext)=>{\n        if (ext.extnID === _deps_js__WEBPACK_IMPORTED_MODULE_0__.id_ce_authorityKeyIdentifier) {\n            extAuthorityKeyID = _deps_js__WEBPACK_IMPORTED_MODULE_0__.AsnParser.parse(ext.extnValue, _deps_js__WEBPACK_IMPORTED_MODULE_0__.AuthorityKeyIdentifier);\n        } else if (ext.extnID === _deps_js__WEBPACK_IMPORTED_MODULE_0__.id_ce_subjectKeyIdentifier) {\n            extSubjectKeyID = _deps_js__WEBPACK_IMPORTED_MODULE_0__.AsnParser.parse(ext.extnValue, _deps_js__WEBPACK_IMPORTED_MODULE_0__.SubjectKeyIdentifier);\n        } else if (ext.extnID === _deps_js__WEBPACK_IMPORTED_MODULE_0__.id_ce_cRLDistributionPoints) {\n            extCRLDistributionPoints = _deps_js__WEBPACK_IMPORTED_MODULE_0__.AsnParser.parse(ext.extnValue, _deps_js__WEBPACK_IMPORTED_MODULE_0__.CRLDistributionPoints);\n        }\n    });\n    // Check to see if we've got cached info for the cert's CA\n    let keyIdentifier = undefined;\n    if (extAuthorityKeyID && extAuthorityKeyID.keyIdentifier) {\n        keyIdentifier = _iso_index_js__WEBPACK_IMPORTED_MODULE_1__.isoUint8Array.toHex(new Uint8Array(extAuthorityKeyID.keyIdentifier.buffer));\n    } else if (extSubjectKeyID) {\n        /**\n         * We might be dealing with a self-signed root certificate. Check the\n         * Subject key Identifier extension next.\n         */ keyIdentifier = _iso_index_js__WEBPACK_IMPORTED_MODULE_1__.isoUint8Array.toHex(new Uint8Array(extSubjectKeyID.buffer));\n    }\n    const certSerialHex = _iso_index_js__WEBPACK_IMPORTED_MODULE_1__.isoUint8Array.toHex(new Uint8Array(cert.tbsCertificate.serialNumber));\n    if (keyIdentifier) {\n        const cached = cacheRevokedCerts[keyIdentifier];\n        if (cached) {\n            const now = new Date();\n            // If there's a nextUpdate then make sure we're before it\n            if (!cached.nextUpdate || cached.nextUpdate > now) {\n                return cached.revokedCerts.indexOf(certSerialHex) >= 0;\n            }\n        }\n    }\n    const crlURL = extCRLDistributionPoints?.[0].distributionPoint?.fullName?.[0].uniformResourceIdentifier;\n    // If no URL is provided then we have nothing to check\n    if (!crlURL) {\n        return false;\n    }\n    // Download and read the CRL\n    let certListBytes;\n    try {\n        const respCRL = await (0,_fetch_js__WEBPACK_IMPORTED_MODULE_2__.fetch)(crlURL);\n        certListBytes = await respCRL.arrayBuffer();\n    } catch (_err) {\n        return false;\n    }\n    let data;\n    try {\n        data = _deps_js__WEBPACK_IMPORTED_MODULE_0__.AsnParser.parse(certListBytes, _deps_js__WEBPACK_IMPORTED_MODULE_0__.CertificateList);\n    } catch (_err) {\n        // Something was malformed with the CRL, so pass\n        return false;\n    }\n    const newCached = {\n        revokedCerts: [],\n        nextUpdate: undefined\n    };\n    // nextUpdate\n    if (data.tbsCertList.nextUpdate) {\n        newCached.nextUpdate = data.tbsCertList.nextUpdate.getTime();\n    }\n    // revokedCertificates\n    const revokedCerts = data.tbsCertList.revokedCertificates;\n    if (revokedCerts) {\n        for (const cert of revokedCerts){\n            const revokedHex = _iso_index_js__WEBPACK_IMPORTED_MODULE_1__.isoUint8Array.toHex(new Uint8Array(cert.userCertificate));\n            newCached.revokedCerts.push(revokedHex);\n        }\n        // Cache the results\n        if (keyIdentifier) {\n            cacheRevokedCerts[keyIdentifier] = newCached;\n        }\n        return newCached.revokedCerts.indexOf(certSerialHex) >= 0;\n    }\n    return false;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/isCertRevoked.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/index.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@simplewebauthn/server/esm/helpers/iso/index.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isoBase64URL: () => (/* reexport module object */ _isoBase64URL_js__WEBPACK_IMPORTED_MODULE_0__),\n/* harmony export */   isoCBOR: () => (/* reexport module object */ _isoCBOR_js__WEBPACK_IMPORTED_MODULE_1__),\n/* harmony export */   isoCrypto: () => (/* reexport module object */ _isoCrypto_index_js__WEBPACK_IMPORTED_MODULE_2__),\n/* harmony export */   isoUint8Array: () => (/* reexport module object */ _isoUint8Array_js__WEBPACK_IMPORTED_MODULE_3__)\n/* harmony export */ });\n/* harmony import */ var _isoBase64URL_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./isoBase64URL.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/isoBase64URL.js\");\n/* harmony import */ var _isoCBOR_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./isoCBOR.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/isoCBOR.js\");\n/* harmony import */ var _isoCrypto_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./isoCrypto/index.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/isoCrypto/index.js\");\n/* harmony import */ var _isoUint8Array_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./isoUint8Array.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/isoUint8Array.js\");\n/**\n * A collection of methods for isomorphic manipulation of trickier data types\n *\n * The goal with these is to make it easier to replace dependencies later that might not play well\n * with specific server-like runtimes that expose global Web APIs (CloudFlare Workers, Deno, Bun,\n * etc...), while also supporting execution in Node.\n */ \n\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNpbXBsZXdlYmF1dGhuL3NlcnZlci9lc20vaGVscGVycy9pc28vaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFBQTs7Ozs7O0NBTUMsR0FDaUQ7QUFDVjtBQUNVO0FBQ0UiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jYW1wdXMtbWluZC8uL25vZGVfbW9kdWxlcy9Ac2ltcGxld2ViYXV0aG4vc2VydmVyL2VzbS9oZWxwZXJzL2lzby9pbmRleC5qcz9jNjI4Il0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQSBjb2xsZWN0aW9uIG9mIG1ldGhvZHMgZm9yIGlzb21vcnBoaWMgbWFuaXB1bGF0aW9uIG9mIHRyaWNraWVyIGRhdGEgdHlwZXNcbiAqXG4gKiBUaGUgZ29hbCB3aXRoIHRoZXNlIGlzIHRvIG1ha2UgaXQgZWFzaWVyIHRvIHJlcGxhY2UgZGVwZW5kZW5jaWVzIGxhdGVyIHRoYXQgbWlnaHQgbm90IHBsYXkgd2VsbFxuICogd2l0aCBzcGVjaWZpYyBzZXJ2ZXItbGlrZSBydW50aW1lcyB0aGF0IGV4cG9zZSBnbG9iYWwgV2ViIEFQSXMgKENsb3VkRmxhcmUgV29ya2VycywgRGVubywgQnVuLFxuICogZXRjLi4uKSwgd2hpbGUgYWxzbyBzdXBwb3J0aW5nIGV4ZWN1dGlvbiBpbiBOb2RlLlxuICovXG5leHBvcnQgKiBhcyBpc29CYXNlNjRVUkwgZnJvbSAnLi9pc29CYXNlNjRVUkwuanMnO1xuZXhwb3J0ICogYXMgaXNvQ0JPUiBmcm9tICcuL2lzb0NCT1IuanMnO1xuZXhwb3J0ICogYXMgaXNvQ3J5cHRvIGZyb20gJy4vaXNvQ3J5cHRvL2luZGV4LmpzJztcbmV4cG9ydCAqIGFzIGlzb1VpbnQ4QXJyYXkgZnJvbSAnLi9pc29VaW50OEFycmF5LmpzJztcbiJdLCJuYW1lcyI6WyJpc29CYXNlNjRVUkwiLCJpc29DQk9SIiwiaXNvQ3J5cHRvIiwiaXNvVWludDhBcnJheSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/isoBase64URL.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@simplewebauthn/server/esm/helpers/iso/isoBase64URL.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   fromBuffer: () => (/* binding */ fromBuffer),\n/* harmony export */   fromString: () => (/* binding */ fromString),\n/* harmony export */   isBase64: () => (/* binding */ isBase64),\n/* harmony export */   isBase64url: () => (/* binding */ isBase64url),\n/* harmony export */   toBase64: () => (/* binding */ toBase64),\n/* harmony export */   toBuffer: () => (/* binding */ toBuffer),\n/* harmony export */   toString: () => (/* binding */ toString)\n/* harmony export */ });\n/* harmony import */ var _deps_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../deps.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/deps.js\");\n\n/**\n * Decode from a Base64URL-encoded string to an ArrayBuffer. Best used when converting a\n * credential ID from a JSON string to an ArrayBuffer, like in allowCredentials or\n * excludeCredentials.\n *\n * @param buffer Value to decode from base64\n * @param to (optional) The decoding to use, in case it's desirable to decode from base64 instead\n */ function toBuffer(base64urlString, from = \"base64url\") {\n    const _buffer = _deps_js__WEBPACK_IMPORTED_MODULE_0__.base64.toArrayBuffer(base64urlString, from === \"base64url\");\n    return new Uint8Array(_buffer);\n}\n/**\n * Encode the given array buffer into a Base64URL-encoded string. Ideal for converting various\n * credential response ArrayBuffers to string for sending back to the server as JSON.\n *\n * @param buffer Value to encode to base64\n * @param to (optional) The encoding to use, in case it's desirable to encode to base64 instead\n */ function fromBuffer(buffer, to = \"base64url\") {\n    return _deps_js__WEBPACK_IMPORTED_MODULE_0__.base64.fromArrayBuffer(buffer, to === \"base64url\");\n}\n/**\n * Convert a base64url string into base64\n */ function toBase64(base64urlString) {\n    const fromBase64Url = _deps_js__WEBPACK_IMPORTED_MODULE_0__.base64.toArrayBuffer(base64urlString, true);\n    const toBase64 = _deps_js__WEBPACK_IMPORTED_MODULE_0__.base64.fromArrayBuffer(fromBase64Url);\n    return toBase64;\n}\n/**\n * Encode a string to base64url\n */ function fromString(ascii) {\n    return _deps_js__WEBPACK_IMPORTED_MODULE_0__.base64.fromString(ascii, true);\n}\n/**\n * Decode a base64url string into its original string\n */ function toString(base64urlString) {\n    return _deps_js__WEBPACK_IMPORTED_MODULE_0__.base64.toString(base64urlString, true);\n}\n/**\n * Confirm that the string is encoded into base64\n */ function isBase64(input) {\n    return _deps_js__WEBPACK_IMPORTED_MODULE_0__.base64.validate(input, false);\n}\n/**\n * Confirm that the string is encoded into base64url, with support for optional padding\n */ function isBase64url(input) {\n    // Trim padding characters from the string if present\n    input = input.replace(/=/g, \"\");\n    return _deps_js__WEBPACK_IMPORTED_MODULE_0__.base64.validate(input, true);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNpbXBsZXdlYmF1dGhuL3NlcnZlci9lc20vaGVscGVycy9pc28vaXNvQmFzZTY0VVJMLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0FBQXVDO0FBQ3ZDOzs7Ozs7O0NBT0MsR0FDTSxTQUFTQyxTQUFTQyxlQUFlLEVBQUVDLE9BQU8sV0FBVztJQUN4RCxNQUFNQyxVQUFVSiw0Q0FBTUEsQ0FBQ0ssYUFBYSxDQUFDSCxpQkFBaUJDLFNBQVM7SUFDL0QsT0FBTyxJQUFJRyxXQUFXRjtBQUMxQjtBQUNBOzs7Ozs7Q0FNQyxHQUNNLFNBQVNHLFdBQVdDLE1BQU0sRUFBRUMsS0FBSyxXQUFXO0lBQy9DLE9BQU9ULDRDQUFNQSxDQUFDVSxlQUFlLENBQUNGLFFBQVFDLE9BQU87QUFDakQ7QUFDQTs7Q0FFQyxHQUNNLFNBQVNFLFNBQVNULGVBQWU7SUFDcEMsTUFBTVUsZ0JBQWdCWiw0Q0FBTUEsQ0FBQ0ssYUFBYSxDQUFDSCxpQkFBaUI7SUFDNUQsTUFBTVMsV0FBV1gsNENBQU1BLENBQUNVLGVBQWUsQ0FBQ0U7SUFDeEMsT0FBT0Q7QUFDWDtBQUNBOztDQUVDLEdBQ00sU0FBU0UsV0FBV0MsS0FBSztJQUM1QixPQUFPZCw0Q0FBTUEsQ0FBQ2EsVUFBVSxDQUFDQyxPQUFPO0FBQ3BDO0FBQ0E7O0NBRUMsR0FDTSxTQUFTQyxTQUFTYixlQUFlO0lBQ3BDLE9BQU9GLDRDQUFNQSxDQUFDZSxRQUFRLENBQUNiLGlCQUFpQjtBQUM1QztBQUNBOztDQUVDLEdBQ00sU0FBU2MsU0FBU0MsS0FBSztJQUMxQixPQUFPakIsNENBQU1BLENBQUNrQixRQUFRLENBQUNELE9BQU87QUFDbEM7QUFDQTs7Q0FFQyxHQUNNLFNBQVNFLFlBQVlGLEtBQUs7SUFDN0IscURBQXFEO0lBQ3JEQSxRQUFRQSxNQUFNRyxPQUFPLENBQUMsTUFBTTtJQUM1QixPQUFPcEIsNENBQU1BLENBQUNrQixRQUFRLENBQUNELE9BQU87QUFDbEMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jYW1wdXMtbWluZC8uL25vZGVfbW9kdWxlcy9Ac2ltcGxld2ViYXV0aG4vc2VydmVyL2VzbS9oZWxwZXJzL2lzby9pc29CYXNlNjRVUkwuanM/ZGZlZiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBiYXNlNjQgfSBmcm9tICcuLi8uLi9kZXBzLmpzJztcbi8qKlxuICogRGVjb2RlIGZyb20gYSBCYXNlNjRVUkwtZW5jb2RlZCBzdHJpbmcgdG8gYW4gQXJyYXlCdWZmZXIuIEJlc3QgdXNlZCB3aGVuIGNvbnZlcnRpbmcgYVxuICogY3JlZGVudGlhbCBJRCBmcm9tIGEgSlNPTiBzdHJpbmcgdG8gYW4gQXJyYXlCdWZmZXIsIGxpa2UgaW4gYWxsb3dDcmVkZW50aWFscyBvclxuICogZXhjbHVkZUNyZWRlbnRpYWxzLlxuICpcbiAqIEBwYXJhbSBidWZmZXIgVmFsdWUgdG8gZGVjb2RlIGZyb20gYmFzZTY0XG4gKiBAcGFyYW0gdG8gKG9wdGlvbmFsKSBUaGUgZGVjb2RpbmcgdG8gdXNlLCBpbiBjYXNlIGl0J3MgZGVzaXJhYmxlIHRvIGRlY29kZSBmcm9tIGJhc2U2NCBpbnN0ZWFkXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiB0b0J1ZmZlcihiYXNlNjR1cmxTdHJpbmcsIGZyb20gPSAnYmFzZTY0dXJsJykge1xuICAgIGNvbnN0IF9idWZmZXIgPSBiYXNlNjQudG9BcnJheUJ1ZmZlcihiYXNlNjR1cmxTdHJpbmcsIGZyb20gPT09ICdiYXNlNjR1cmwnKTtcbiAgICByZXR1cm4gbmV3IFVpbnQ4QXJyYXkoX2J1ZmZlcik7XG59XG4vKipcbiAqIEVuY29kZSB0aGUgZ2l2ZW4gYXJyYXkgYnVmZmVyIGludG8gYSBCYXNlNjRVUkwtZW5jb2RlZCBzdHJpbmcuIElkZWFsIGZvciBjb252ZXJ0aW5nIHZhcmlvdXNcbiAqIGNyZWRlbnRpYWwgcmVzcG9uc2UgQXJyYXlCdWZmZXJzIHRvIHN0cmluZyBmb3Igc2VuZGluZyBiYWNrIHRvIHRoZSBzZXJ2ZXIgYXMgSlNPTi5cbiAqXG4gKiBAcGFyYW0gYnVmZmVyIFZhbHVlIHRvIGVuY29kZSB0byBiYXNlNjRcbiAqIEBwYXJhbSB0byAob3B0aW9uYWwpIFRoZSBlbmNvZGluZyB0byB1c2UsIGluIGNhc2UgaXQncyBkZXNpcmFibGUgdG8gZW5jb2RlIHRvIGJhc2U2NCBpbnN0ZWFkXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBmcm9tQnVmZmVyKGJ1ZmZlciwgdG8gPSAnYmFzZTY0dXJsJykge1xuICAgIHJldHVybiBiYXNlNjQuZnJvbUFycmF5QnVmZmVyKGJ1ZmZlciwgdG8gPT09ICdiYXNlNjR1cmwnKTtcbn1cbi8qKlxuICogQ29udmVydCBhIGJhc2U2NHVybCBzdHJpbmcgaW50byBiYXNlNjRcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHRvQmFzZTY0KGJhc2U2NHVybFN0cmluZykge1xuICAgIGNvbnN0IGZyb21CYXNlNjRVcmwgPSBiYXNlNjQudG9BcnJheUJ1ZmZlcihiYXNlNjR1cmxTdHJpbmcsIHRydWUpO1xuICAgIGNvbnN0IHRvQmFzZTY0ID0gYmFzZTY0LmZyb21BcnJheUJ1ZmZlcihmcm9tQmFzZTY0VXJsKTtcbiAgICByZXR1cm4gdG9CYXNlNjQ7XG59XG4vKipcbiAqIEVuY29kZSBhIHN0cmluZyB0byBiYXNlNjR1cmxcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGZyb21TdHJpbmcoYXNjaWkpIHtcbiAgICByZXR1cm4gYmFzZTY0LmZyb21TdHJpbmcoYXNjaWksIHRydWUpO1xufVxuLyoqXG4gKiBEZWNvZGUgYSBiYXNlNjR1cmwgc3RyaW5nIGludG8gaXRzIG9yaWdpbmFsIHN0cmluZ1xuICovXG5leHBvcnQgZnVuY3Rpb24gdG9TdHJpbmcoYmFzZTY0dXJsU3RyaW5nKSB7XG4gICAgcmV0dXJuIGJhc2U2NC50b1N0cmluZyhiYXNlNjR1cmxTdHJpbmcsIHRydWUpO1xufVxuLyoqXG4gKiBDb25maXJtIHRoYXQgdGhlIHN0cmluZyBpcyBlbmNvZGVkIGludG8gYmFzZTY0XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBpc0Jhc2U2NChpbnB1dCkge1xuICAgIHJldHVybiBiYXNlNjQudmFsaWRhdGUoaW5wdXQsIGZhbHNlKTtcbn1cbi8qKlxuICogQ29uZmlybSB0aGF0IHRoZSBzdHJpbmcgaXMgZW5jb2RlZCBpbnRvIGJhc2U2NHVybCwgd2l0aCBzdXBwb3J0IGZvciBvcHRpb25hbCBwYWRkaW5nXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBpc0Jhc2U2NHVybChpbnB1dCkge1xuICAgIC8vIFRyaW0gcGFkZGluZyBjaGFyYWN0ZXJzIGZyb20gdGhlIHN0cmluZyBpZiBwcmVzZW50XG4gICAgaW5wdXQgPSBpbnB1dC5yZXBsYWNlKC89L2csICcnKTtcbiAgICByZXR1cm4gYmFzZTY0LnZhbGlkYXRlKGlucHV0LCB0cnVlKTtcbn1cbiJdLCJuYW1lcyI6WyJiYXNlNjQiLCJ0b0J1ZmZlciIsImJhc2U2NHVybFN0cmluZyIsImZyb20iLCJfYnVmZmVyIiwidG9BcnJheUJ1ZmZlciIsIlVpbnQ4QXJyYXkiLCJmcm9tQnVmZmVyIiwiYnVmZmVyIiwidG8iLCJmcm9tQXJyYXlCdWZmZXIiLCJ0b0Jhc2U2NCIsImZyb21CYXNlNjRVcmwiLCJmcm9tU3RyaW5nIiwiYXNjaWkiLCJ0b1N0cmluZyIsImlzQmFzZTY0IiwiaW5wdXQiLCJ2YWxpZGF0ZSIsImlzQmFzZTY0dXJsIiwicmVwbGFjZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/isoBase64URL.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/isoCBOR.js":
/*!************************************************************************!*\
  !*** ./node_modules/@simplewebauthn/server/esm/helpers/iso/isoCBOR.js ***!
  \************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   decodeFirst: () => (/* binding */ decodeFirst),\n/* harmony export */   encode: () => (/* binding */ encode)\n/* harmony export */ });\n/* harmony import */ var _deps_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../deps.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/deps.js\");\n\n/**\n * Whatever CBOR encoder is used should keep CBOR data the same length when data is re-encoded\n *\n * MOST CRITICALLY, this means the following needs to be true of whatever CBOR library we use:\n * - CBOR Map type values MUST decode to JavaScript Maps\n * - CBOR tag 64 (uint8 Typed Array) MUST NOT be used when encoding Uint8Arrays back to CBOR\n *\n * So long as these requirements are maintained, then CBOR sequences can be encoded and decoded\n * freely while maintaining their lengths for the most accurate pointer movement across them.\n */ /**\n * Decode and return the first item in a sequence of CBOR-encoded values\n *\n * @param input The CBOR data to decode\n * @param asObject (optional) Whether to convert any CBOR Maps into JavaScript Objects. Defaults to\n * `false`\n */ function decodeFirst(input) {\n    // Make a copy so we don't mutate the original\n    const _input = new Uint8Array(input);\n    const decoded = _deps_js__WEBPACK_IMPORTED_MODULE_0__.tinyCbor.decodePartialCBOR(_input, 0);\n    const [first] = decoded;\n    return first;\n}\n/**\n * Encode data to CBOR\n */ function encode(input) {\n    return _deps_js__WEBPACK_IMPORTED_MODULE_0__.tinyCbor.encodeCBOR(input);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNpbXBsZXdlYmF1dGhuL3NlcnZlci9lc20vaGVscGVycy9pc28vaXNvQ0JPUi5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBeUM7QUFDekM7Ozs7Ozs7OztDQVNDLEdBQ0Q7Ozs7OztDQU1DLEdBQ00sU0FBU0MsWUFBWUMsS0FBSztJQUM3Qiw4Q0FBOEM7SUFDOUMsTUFBTUMsU0FBUyxJQUFJQyxXQUFXRjtJQUM5QixNQUFNRyxVQUFVTCxnRUFBMEIsQ0FBQ0csUUFBUTtJQUNuRCxNQUFNLENBQUNJLE1BQU0sR0FBR0Y7SUFDaEIsT0FBT0U7QUFDWDtBQUNBOztDQUVDLEdBQ00sU0FBU0MsT0FBT04sS0FBSztJQUN4QixPQUFPRix5REFBbUIsQ0FBQ0U7QUFDL0IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jYW1wdXMtbWluZC8uL25vZGVfbW9kdWxlcy9Ac2ltcGxld2ViYXV0aG4vc2VydmVyL2VzbS9oZWxwZXJzL2lzby9pc29DQk9SLmpzP2VlNmEiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgdGlueUNib3IgfSBmcm9tICcuLi8uLi9kZXBzLmpzJztcbi8qKlxuICogV2hhdGV2ZXIgQ0JPUiBlbmNvZGVyIGlzIHVzZWQgc2hvdWxkIGtlZXAgQ0JPUiBkYXRhIHRoZSBzYW1lIGxlbmd0aCB3aGVuIGRhdGEgaXMgcmUtZW5jb2RlZFxuICpcbiAqIE1PU1QgQ1JJVElDQUxMWSwgdGhpcyBtZWFucyB0aGUgZm9sbG93aW5nIG5lZWRzIHRvIGJlIHRydWUgb2Ygd2hhdGV2ZXIgQ0JPUiBsaWJyYXJ5IHdlIHVzZTpcbiAqIC0gQ0JPUiBNYXAgdHlwZSB2YWx1ZXMgTVVTVCBkZWNvZGUgdG8gSmF2YVNjcmlwdCBNYXBzXG4gKiAtIENCT1IgdGFnIDY0ICh1aW50OCBUeXBlZCBBcnJheSkgTVVTVCBOT1QgYmUgdXNlZCB3aGVuIGVuY29kaW5nIFVpbnQ4QXJyYXlzIGJhY2sgdG8gQ0JPUlxuICpcbiAqIFNvIGxvbmcgYXMgdGhlc2UgcmVxdWlyZW1lbnRzIGFyZSBtYWludGFpbmVkLCB0aGVuIENCT1Igc2VxdWVuY2VzIGNhbiBiZSBlbmNvZGVkIGFuZCBkZWNvZGVkXG4gKiBmcmVlbHkgd2hpbGUgbWFpbnRhaW5pbmcgdGhlaXIgbGVuZ3RocyBmb3IgdGhlIG1vc3QgYWNjdXJhdGUgcG9pbnRlciBtb3ZlbWVudCBhY3Jvc3MgdGhlbS5cbiAqL1xuLyoqXG4gKiBEZWNvZGUgYW5kIHJldHVybiB0aGUgZmlyc3QgaXRlbSBpbiBhIHNlcXVlbmNlIG9mIENCT1ItZW5jb2RlZCB2YWx1ZXNcbiAqXG4gKiBAcGFyYW0gaW5wdXQgVGhlIENCT1IgZGF0YSB0byBkZWNvZGVcbiAqIEBwYXJhbSBhc09iamVjdCAob3B0aW9uYWwpIFdoZXRoZXIgdG8gY29udmVydCBhbnkgQ0JPUiBNYXBzIGludG8gSmF2YVNjcmlwdCBPYmplY3RzLiBEZWZhdWx0cyB0b1xuICogYGZhbHNlYFxuICovXG5leHBvcnQgZnVuY3Rpb24gZGVjb2RlRmlyc3QoaW5wdXQpIHtcbiAgICAvLyBNYWtlIGEgY29weSBzbyB3ZSBkb24ndCBtdXRhdGUgdGhlIG9yaWdpbmFsXG4gICAgY29uc3QgX2lucHV0ID0gbmV3IFVpbnQ4QXJyYXkoaW5wdXQpO1xuICAgIGNvbnN0IGRlY29kZWQgPSB0aW55Q2Jvci5kZWNvZGVQYXJ0aWFsQ0JPUihfaW5wdXQsIDApO1xuICAgIGNvbnN0IFtmaXJzdF0gPSBkZWNvZGVkO1xuICAgIHJldHVybiBmaXJzdDtcbn1cbi8qKlxuICogRW5jb2RlIGRhdGEgdG8gQ0JPUlxuICovXG5leHBvcnQgZnVuY3Rpb24gZW5jb2RlKGlucHV0KSB7XG4gICAgcmV0dXJuIHRpbnlDYm9yLmVuY29kZUNCT1IoaW5wdXQpO1xufVxuIl0sIm5hbWVzIjpbInRpbnlDYm9yIiwiZGVjb2RlRmlyc3QiLCJpbnB1dCIsIl9pbnB1dCIsIlVpbnQ4QXJyYXkiLCJkZWNvZGVkIiwiZGVjb2RlUGFydGlhbENCT1IiLCJmaXJzdCIsImVuY29kZSIsImVuY29kZUNCT1IiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/isoCBOR.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/isoCrypto/digest.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@simplewebauthn/server/esm/helpers/iso/isoCrypto/digest.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   digest: () => (/* binding */ digest)\n/* harmony export */ });\n/* harmony import */ var _mapCoseAlgToWebCryptoAlg_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./mapCoseAlgToWebCryptoAlg.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/isoCrypto/mapCoseAlgToWebCryptoAlg.js\");\n/* harmony import */ var _getWebCrypto_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./getWebCrypto.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/isoCrypto/getWebCrypto.js\");\n\n\n/**\n * Generate a digest of the provided data.\n *\n * @param data The data to generate a digest of\n * @param algorithm A COSE algorithm ID that maps to a desired SHA algorithm\n */ async function digest(data, algorithm) {\n    const WebCrypto = await (0,_getWebCrypto_js__WEBPACK_IMPORTED_MODULE_1__.getWebCrypto)();\n    const subtleAlgorithm = (0,_mapCoseAlgToWebCryptoAlg_js__WEBPACK_IMPORTED_MODULE_0__.mapCoseAlgToWebCryptoAlg)(algorithm);\n    const hashed = await WebCrypto.subtle.digest(subtleAlgorithm, data);\n    return new Uint8Array(hashed);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNpbXBsZXdlYmF1dGhuL3NlcnZlci9lc20vaGVscGVycy9pc28vaXNvQ3J5cHRvL2RpZ2VzdC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBeUU7QUFDeEI7QUFDakQ7Ozs7O0NBS0MsR0FDTSxlQUFlRSxPQUFPQyxJQUFJLEVBQUVDLFNBQVM7SUFDeEMsTUFBTUMsWUFBWSxNQUFNSiw4REFBWUE7SUFDcEMsTUFBTUssa0JBQWtCTixzRkFBd0JBLENBQUNJO0lBQ2pELE1BQU1HLFNBQVMsTUFBTUYsVUFBVUcsTUFBTSxDQUFDTixNQUFNLENBQUNJLGlCQUFpQkg7SUFDOUQsT0FBTyxJQUFJTSxXQUFXRjtBQUMxQiIsInNvdXJjZXMiOlsid2VicGFjazovL2NhbXB1cy1taW5kLy4vbm9kZV9tb2R1bGVzL0BzaW1wbGV3ZWJhdXRobi9zZXJ2ZXIvZXNtL2hlbHBlcnMvaXNvL2lzb0NyeXB0by9kaWdlc3QuanM/YjVlOSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBtYXBDb3NlQWxnVG9XZWJDcnlwdG9BbGcgfSBmcm9tICcuL21hcENvc2VBbGdUb1dlYkNyeXB0b0FsZy5qcyc7XG5pbXBvcnQgeyBnZXRXZWJDcnlwdG8gfSBmcm9tICcuL2dldFdlYkNyeXB0by5qcyc7XG4vKipcbiAqIEdlbmVyYXRlIGEgZGlnZXN0IG9mIHRoZSBwcm92aWRlZCBkYXRhLlxuICpcbiAqIEBwYXJhbSBkYXRhIFRoZSBkYXRhIHRvIGdlbmVyYXRlIGEgZGlnZXN0IG9mXG4gKiBAcGFyYW0gYWxnb3JpdGhtIEEgQ09TRSBhbGdvcml0aG0gSUQgdGhhdCBtYXBzIHRvIGEgZGVzaXJlZCBTSEEgYWxnb3JpdGhtXG4gKi9cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBkaWdlc3QoZGF0YSwgYWxnb3JpdGhtKSB7XG4gICAgY29uc3QgV2ViQ3J5cHRvID0gYXdhaXQgZ2V0V2ViQ3J5cHRvKCk7XG4gICAgY29uc3Qgc3VidGxlQWxnb3JpdGhtID0gbWFwQ29zZUFsZ1RvV2ViQ3J5cHRvQWxnKGFsZ29yaXRobSk7XG4gICAgY29uc3QgaGFzaGVkID0gYXdhaXQgV2ViQ3J5cHRvLnN1YnRsZS5kaWdlc3Qoc3VidGxlQWxnb3JpdGhtLCBkYXRhKTtcbiAgICByZXR1cm4gbmV3IFVpbnQ4QXJyYXkoaGFzaGVkKTtcbn1cbiJdLCJuYW1lcyI6WyJtYXBDb3NlQWxnVG9XZWJDcnlwdG9BbGciLCJnZXRXZWJDcnlwdG8iLCJkaWdlc3QiLCJkYXRhIiwiYWxnb3JpdGhtIiwiV2ViQ3J5cHRvIiwic3VidGxlQWxnb3JpdGhtIiwiaGFzaGVkIiwic3VidGxlIiwiVWludDhBcnJheSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/isoCrypto/digest.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/isoCrypto/getRandomValues.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/@simplewebauthn/server/esm/helpers/iso/isoCrypto/getRandomValues.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getRandomValues: () => (/* binding */ getRandomValues)\n/* harmony export */ });\n/* harmony import */ var _getWebCrypto_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./getWebCrypto.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/isoCrypto/getWebCrypto.js\");\n\n/**\n * Fill up the provided bytes array with random bytes equal to its length.\n *\n * @returns the same bytes array passed into the method\n */ async function getRandomValues(array) {\n    const WebCrypto = await (0,_getWebCrypto_js__WEBPACK_IMPORTED_MODULE_0__.getWebCrypto)();\n    WebCrypto.getRandomValues(array);\n    return array;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNpbXBsZXdlYmF1dGhuL3NlcnZlci9lc20vaGVscGVycy9pc28vaXNvQ3J5cHRvL2dldFJhbmRvbVZhbHVlcy5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFpRDtBQUNqRDs7OztDQUlDLEdBQ00sZUFBZUMsZ0JBQWdCQyxLQUFLO0lBQ3ZDLE1BQU1DLFlBQVksTUFBTUgsOERBQVlBO0lBQ3BDRyxVQUFVRixlQUFlLENBQUNDO0lBQzFCLE9BQU9BO0FBQ1giLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jYW1wdXMtbWluZC8uL25vZGVfbW9kdWxlcy9Ac2ltcGxld2ViYXV0aG4vc2VydmVyL2VzbS9oZWxwZXJzL2lzby9pc29DcnlwdG8vZ2V0UmFuZG9tVmFsdWVzLmpzPzFiMjEiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZ2V0V2ViQ3J5cHRvIH0gZnJvbSAnLi9nZXRXZWJDcnlwdG8uanMnO1xuLyoqXG4gKiBGaWxsIHVwIHRoZSBwcm92aWRlZCBieXRlcyBhcnJheSB3aXRoIHJhbmRvbSBieXRlcyBlcXVhbCB0byBpdHMgbGVuZ3RoLlxuICpcbiAqIEByZXR1cm5zIHRoZSBzYW1lIGJ5dGVzIGFycmF5IHBhc3NlZCBpbnRvIHRoZSBtZXRob2RcbiAqL1xuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGdldFJhbmRvbVZhbHVlcyhhcnJheSkge1xuICAgIGNvbnN0IFdlYkNyeXB0byA9IGF3YWl0IGdldFdlYkNyeXB0bygpO1xuICAgIFdlYkNyeXB0by5nZXRSYW5kb21WYWx1ZXMoYXJyYXkpO1xuICAgIHJldHVybiBhcnJheTtcbn1cbiJdLCJuYW1lcyI6WyJnZXRXZWJDcnlwdG8iLCJnZXRSYW5kb21WYWx1ZXMiLCJhcnJheSIsIldlYkNyeXB0byJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/isoCrypto/getRandomValues.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/isoCrypto/getWebCrypto.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@simplewebauthn/server/esm/helpers/iso/isoCrypto/getWebCrypto.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MissingWebCrypto: () => (/* binding */ MissingWebCrypto),\n/* harmony export */   _getWebCryptoInternals: () => (/* binding */ _getWebCryptoInternals),\n/* harmony export */   getWebCrypto: () => (/* binding */ getWebCrypto)\n/* harmony export */ });\nlet webCrypto = undefined;\n/**\n * Try to get an instance of the Crypto API from the current runtime. Should support Node,\n * as well as others, like Deno, that implement Web APIs.\n */ async function getWebCrypto() {\n    if (webCrypto) {\n        return webCrypto;\n    }\n    /**\n     * Naively attempt to access Crypto as a global object, which popular alternative run-times\n     * support.\n     */ const _globalThisCrypto = _getWebCryptoInternals.stubThisGlobalThisCrypto();\n    if (_globalThisCrypto) {\n        webCrypto = _globalThisCrypto;\n        return webCrypto;\n    }\n    /**\n     * `globalThis.crypto` isn't available, so attempt a Node import...\n     */ const _nodeCrypto = await _getWebCryptoInternals.stubThisImportNodeCrypto();\n    if (_nodeCrypto?.webcrypto) {\n        webCrypto = _nodeCrypto.webcrypto;\n        return webCrypto;\n    }\n    // We tried to access it both in Node and globally, so bail out\n    throw new MissingWebCrypto();\n}\nclass MissingWebCrypto extends Error {\n    constructor(){\n        const message = \"An instance of the Crypto API could not be located\";\n        super(message);\n        this.name = \"MissingWebCrypto\";\n    }\n}\n// Make it possible to stub return values during testing\nconst _getWebCryptoInternals = {\n    stubThisImportNodeCrypto: async ()=>{\n        try {\n            // dnt-shim-ignore\n            /**\n             * The `webpackIgnore` here is to help support Next.js' Edge runtime.\n             * See https://github.com/MasterKale/SimpleWebAuthn/issues/517 for more info.\n             */ const _nodeCrypto = await import(/* webpackIgnore: true */ \"crypto\");\n            return _nodeCrypto;\n        } catch (_err) {\n            /**\n             * Intentionally declaring webcrypto as undefined because we're assuming the Node import\n             * failed due to either:\n             * - `import()` isn't supported\n             * - `node:crypto` is unavailable.\n             */ return {\n                webcrypto: undefined\n            };\n        }\n    },\n    stubThisGlobalThisCrypto: ()=>globalThis.crypto,\n    // Make it possible to reset the `webCrypto` at the top of the file\n    setCachedCrypto: (newCrypto)=>{\n        webCrypto = newCrypto;\n    }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNpbXBsZXdlYmF1dGhuL3NlcnZlci9lc20vaGVscGVycy9pc28vaXNvQ3J5cHRvL2dldFdlYkNyeXB0by5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQSxJQUFJQSxZQUFZQztBQUNoQjs7O0NBR0MsR0FDTSxlQUFlQztJQUNsQixJQUFJRixXQUFXO1FBQ1gsT0FBT0E7SUFDWDtJQUNBOzs7S0FHQyxHQUNELE1BQU1HLG9CQUFvQkMsdUJBQXVCQyx3QkFBd0I7SUFDekUsSUFBSUYsbUJBQW1CO1FBQ25CSCxZQUFZRztRQUNaLE9BQU9IO0lBQ1g7SUFDQTs7S0FFQyxHQUNELE1BQU1NLGNBQWMsTUFBTUYsdUJBQXVCRyx3QkFBd0I7SUFDekUsSUFBSUQsYUFBYUUsV0FBVztRQUN4QlIsWUFBWU0sWUFBWUUsU0FBUztRQUNqQyxPQUFPUjtJQUNYO0lBQ0EsK0RBQStEO0lBQy9ELE1BQU0sSUFBSVM7QUFDZDtBQUNPLE1BQU1BLHlCQUF5QkM7SUFDbENDLGFBQWM7UUFDVixNQUFNQyxVQUFVO1FBQ2hCLEtBQUssQ0FBQ0E7UUFDTixJQUFJLENBQUNDLElBQUksR0FBRztJQUNoQjtBQUNKO0FBQ0Esd0RBQXdEO0FBQ2pELE1BQU1ULHlCQUF5QjtJQUNsQ0csMEJBQTBCO1FBQ3RCLElBQUk7WUFDQSxrQkFBa0I7WUFDbEI7OzthQUdDLEdBQ0QsTUFBTUQsY0FBYyxNQUFNLE1BQU0sQ0FBQyx1QkFBdUIsR0FBRztZQUMzRCxPQUFPQTtRQUNYLEVBQ0EsT0FBT1EsTUFBTTtZQUNUOzs7OzthQUtDLEdBQ0QsT0FBTztnQkFBRU4sV0FBV1A7WUFBVTtRQUNsQztJQUNKO0lBQ0FJLDBCQUEwQixJQUFNVSxXQUFXQyxNQUFNO0lBQ2pELG1FQUFtRTtJQUNuRUMsaUJBQWlCLENBQUNDO1FBQ2RsQixZQUFZa0I7SUFDaEI7QUFDSixFQUFFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vY2FtcHVzLW1pbmQvLi9ub2RlX21vZHVsZXMvQHNpbXBsZXdlYmF1dGhuL3NlcnZlci9lc20vaGVscGVycy9pc28vaXNvQ3J5cHRvL2dldFdlYkNyeXB0by5qcz9mYTI1Il0sInNvdXJjZXNDb250ZW50IjpbImxldCB3ZWJDcnlwdG8gPSB1bmRlZmluZWQ7XG4vKipcbiAqIFRyeSB0byBnZXQgYW4gaW5zdGFuY2Ugb2YgdGhlIENyeXB0byBBUEkgZnJvbSB0aGUgY3VycmVudCBydW50aW1lLiBTaG91bGQgc3VwcG9ydCBOb2RlLFxuICogYXMgd2VsbCBhcyBvdGhlcnMsIGxpa2UgRGVubywgdGhhdCBpbXBsZW1lbnQgV2ViIEFQSXMuXG4gKi9cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBnZXRXZWJDcnlwdG8oKSB7XG4gICAgaWYgKHdlYkNyeXB0bykge1xuICAgICAgICByZXR1cm4gd2ViQ3J5cHRvO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBOYWl2ZWx5IGF0dGVtcHQgdG8gYWNjZXNzIENyeXB0byBhcyBhIGdsb2JhbCBvYmplY3QsIHdoaWNoIHBvcHVsYXIgYWx0ZXJuYXRpdmUgcnVuLXRpbWVzXG4gICAgICogc3VwcG9ydC5cbiAgICAgKi9cbiAgICBjb25zdCBfZ2xvYmFsVGhpc0NyeXB0byA9IF9nZXRXZWJDcnlwdG9JbnRlcm5hbHMuc3R1YlRoaXNHbG9iYWxUaGlzQ3J5cHRvKCk7XG4gICAgaWYgKF9nbG9iYWxUaGlzQ3J5cHRvKSB7XG4gICAgICAgIHdlYkNyeXB0byA9IF9nbG9iYWxUaGlzQ3J5cHRvO1xuICAgICAgICByZXR1cm4gd2ViQ3J5cHRvO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBgZ2xvYmFsVGhpcy5jcnlwdG9gIGlzbid0IGF2YWlsYWJsZSwgc28gYXR0ZW1wdCBhIE5vZGUgaW1wb3J0Li4uXG4gICAgICovXG4gICAgY29uc3QgX25vZGVDcnlwdG8gPSBhd2FpdCBfZ2V0V2ViQ3J5cHRvSW50ZXJuYWxzLnN0dWJUaGlzSW1wb3J0Tm9kZUNyeXB0bygpO1xuICAgIGlmIChfbm9kZUNyeXB0bz8ud2ViY3J5cHRvKSB7XG4gICAgICAgIHdlYkNyeXB0byA9IF9ub2RlQ3J5cHRvLndlYmNyeXB0bztcbiAgICAgICAgcmV0dXJuIHdlYkNyeXB0bztcbiAgICB9XG4gICAgLy8gV2UgdHJpZWQgdG8gYWNjZXNzIGl0IGJvdGggaW4gTm9kZSBhbmQgZ2xvYmFsbHksIHNvIGJhaWwgb3V0XG4gICAgdGhyb3cgbmV3IE1pc3NpbmdXZWJDcnlwdG8oKTtcbn1cbmV4cG9ydCBjbGFzcyBNaXNzaW5nV2ViQ3J5cHRvIGV4dGVuZHMgRXJyb3Ige1xuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICBjb25zdCBtZXNzYWdlID0gJ0FuIGluc3RhbmNlIG9mIHRoZSBDcnlwdG8gQVBJIGNvdWxkIG5vdCBiZSBsb2NhdGVkJztcbiAgICAgICAgc3VwZXIobWVzc2FnZSk7XG4gICAgICAgIHRoaXMubmFtZSA9ICdNaXNzaW5nV2ViQ3J5cHRvJztcbiAgICB9XG59XG4vLyBNYWtlIGl0IHBvc3NpYmxlIHRvIHN0dWIgcmV0dXJuIHZhbHVlcyBkdXJpbmcgdGVzdGluZ1xuZXhwb3J0IGNvbnN0IF9nZXRXZWJDcnlwdG9JbnRlcm5hbHMgPSB7XG4gICAgc3R1YlRoaXNJbXBvcnROb2RlQ3J5cHRvOiBhc3luYyAoKSA9PiB7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICAvLyBkbnQtc2hpbS1pZ25vcmVcbiAgICAgICAgICAgIC8qKlxuICAgICAgICAgICAgICogVGhlIGB3ZWJwYWNrSWdub3JlYCBoZXJlIGlzIHRvIGhlbHAgc3VwcG9ydCBOZXh0LmpzJyBFZGdlIHJ1bnRpbWUuXG4gICAgICAgICAgICAgKiBTZWUgaHR0cHM6Ly9naXRodWIuY29tL01hc3RlckthbGUvU2ltcGxlV2ViQXV0aG4vaXNzdWVzLzUxNyBmb3IgbW9yZSBpbmZvLlxuICAgICAgICAgICAgICovXG4gICAgICAgICAgICBjb25zdCBfbm9kZUNyeXB0byA9IGF3YWl0IGltcG9ydCgvKiB3ZWJwYWNrSWdub3JlOiB0cnVlICovICdjcnlwdG8nKTtcbiAgICAgICAgICAgIHJldHVybiBfbm9kZUNyeXB0bztcbiAgICAgICAgfVxuICAgICAgICBjYXRjaCAoX2Vycikge1xuICAgICAgICAgICAgLyoqXG4gICAgICAgICAgICAgKiBJbnRlbnRpb25hbGx5IGRlY2xhcmluZyB3ZWJjcnlwdG8gYXMgdW5kZWZpbmVkIGJlY2F1c2Ugd2UncmUgYXNzdW1pbmcgdGhlIE5vZGUgaW1wb3J0XG4gICAgICAgICAgICAgKiBmYWlsZWQgZHVlIHRvIGVpdGhlcjpcbiAgICAgICAgICAgICAqIC0gYGltcG9ydCgpYCBpc24ndCBzdXBwb3J0ZWRcbiAgICAgICAgICAgICAqIC0gYG5vZGU6Y3J5cHRvYCBpcyB1bmF2YWlsYWJsZS5cbiAgICAgICAgICAgICAqL1xuICAgICAgICAgICAgcmV0dXJuIHsgd2ViY3J5cHRvOiB1bmRlZmluZWQgfTtcbiAgICAgICAgfVxuICAgIH0sXG4gICAgc3R1YlRoaXNHbG9iYWxUaGlzQ3J5cHRvOiAoKSA9PiBnbG9iYWxUaGlzLmNyeXB0byxcbiAgICAvLyBNYWtlIGl0IHBvc3NpYmxlIHRvIHJlc2V0IHRoZSBgd2ViQ3J5cHRvYCBhdCB0aGUgdG9wIG9mIHRoZSBmaWxlXG4gICAgc2V0Q2FjaGVkQ3J5cHRvOiAobmV3Q3J5cHRvKSA9PiB7XG4gICAgICAgIHdlYkNyeXB0byA9IG5ld0NyeXB0bztcbiAgICB9LFxufTtcbiJdLCJuYW1lcyI6WyJ3ZWJDcnlwdG8iLCJ1bmRlZmluZWQiLCJnZXRXZWJDcnlwdG8iLCJfZ2xvYmFsVGhpc0NyeXB0byIsIl9nZXRXZWJDcnlwdG9JbnRlcm5hbHMiLCJzdHViVGhpc0dsb2JhbFRoaXNDcnlwdG8iLCJfbm9kZUNyeXB0byIsInN0dWJUaGlzSW1wb3J0Tm9kZUNyeXB0byIsIndlYmNyeXB0byIsIk1pc3NpbmdXZWJDcnlwdG8iLCJFcnJvciIsImNvbnN0cnVjdG9yIiwibWVzc2FnZSIsIm5hbWUiLCJfZXJyIiwiZ2xvYmFsVGhpcyIsImNyeXB0byIsInNldENhY2hlZENyeXB0byIsIm5ld0NyeXB0byJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/isoCrypto/getWebCrypto.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/isoCrypto/importKey.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@simplewebauthn/server/esm/helpers/iso/isoCrypto/importKey.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   importKey: () => (/* binding */ importKey)\n/* harmony export */ });\n/* harmony import */ var _getWebCrypto_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./getWebCrypto.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/isoCrypto/getWebCrypto.js\");\n\nasync function importKey(opts) {\n    const WebCrypto = await (0,_getWebCrypto_js__WEBPACK_IMPORTED_MODULE_0__.getWebCrypto)();\n    const { keyData, algorithm } = opts;\n    return WebCrypto.subtle.importKey(\"jwk\", keyData, algorithm, false, [\n        \"verify\"\n    ]);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNpbXBsZXdlYmF1dGhuL3NlcnZlci9lc20vaGVscGVycy9pc28vaXNvQ3J5cHRvL2ltcG9ydEtleS5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFpRDtBQUMxQyxlQUFlQyxVQUFVQyxJQUFJO0lBQ2hDLE1BQU1DLFlBQVksTUFBTUgsOERBQVlBO0lBQ3BDLE1BQU0sRUFBRUksT0FBTyxFQUFFQyxTQUFTLEVBQUUsR0FBR0g7SUFDL0IsT0FBT0MsVUFBVUcsTUFBTSxDQUFDTCxTQUFTLENBQUMsT0FBT0csU0FBU0MsV0FBVyxPQUFPO1FBQ2hFO0tBQ0g7QUFDTCIsInNvdXJjZXMiOlsid2VicGFjazovL2NhbXB1cy1taW5kLy4vbm9kZV9tb2R1bGVzL0BzaW1wbGV3ZWJhdXRobi9zZXJ2ZXIvZXNtL2hlbHBlcnMvaXNvL2lzb0NyeXB0by9pbXBvcnRLZXkuanM/YzA4MiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBnZXRXZWJDcnlwdG8gfSBmcm9tICcuL2dldFdlYkNyeXB0by5qcyc7XG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gaW1wb3J0S2V5KG9wdHMpIHtcbiAgICBjb25zdCBXZWJDcnlwdG8gPSBhd2FpdCBnZXRXZWJDcnlwdG8oKTtcbiAgICBjb25zdCB7IGtleURhdGEsIGFsZ29yaXRobSB9ID0gb3B0cztcbiAgICByZXR1cm4gV2ViQ3J5cHRvLnN1YnRsZS5pbXBvcnRLZXkoJ2p3aycsIGtleURhdGEsIGFsZ29yaXRobSwgZmFsc2UsIFtcbiAgICAgICAgJ3ZlcmlmeScsXG4gICAgXSk7XG59XG4iXSwibmFtZXMiOlsiZ2V0V2ViQ3J5cHRvIiwiaW1wb3J0S2V5Iiwib3B0cyIsIldlYkNyeXB0byIsImtleURhdGEiLCJhbGdvcml0aG0iLCJzdWJ0bGUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/isoCrypto/importKey.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/isoCrypto/index.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@simplewebauthn/server/esm/helpers/iso/isoCrypto/index.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   digest: () => (/* reexport safe */ _digest_js__WEBPACK_IMPORTED_MODULE_0__.digest),\n/* harmony export */   getRandomValues: () => (/* reexport safe */ _getRandomValues_js__WEBPACK_IMPORTED_MODULE_1__.getRandomValues),\n/* harmony export */   verify: () => (/* reexport safe */ _verify_js__WEBPACK_IMPORTED_MODULE_2__.verify)\n/* harmony export */ });\n/* harmony import */ var _digest_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./digest.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/isoCrypto/digest.js\");\n/* harmony import */ var _getRandomValues_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./getRandomValues.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/isoCrypto/getRandomValues.js\");\n/* harmony import */ var _verify_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./verify.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/isoCrypto/verify.js\");\n\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNpbXBsZXdlYmF1dGhuL3NlcnZlci9lc20vaGVscGVycy9pc28vaXNvQ3J5cHRvL2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFxQztBQUNrQjtBQUNsQiIsInNvdXJjZXMiOlsid2VicGFjazovL2NhbXB1cy1taW5kLy4vbm9kZV9tb2R1bGVzL0BzaW1wbGV3ZWJhdXRobi9zZXJ2ZXIvZXNtL2hlbHBlcnMvaXNvL2lzb0NyeXB0by9pbmRleC5qcz8yYTRlIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCB7IGRpZ2VzdCB9IGZyb20gJy4vZGlnZXN0LmpzJztcbmV4cG9ydCB7IGdldFJhbmRvbVZhbHVlcyB9IGZyb20gJy4vZ2V0UmFuZG9tVmFsdWVzLmpzJztcbmV4cG9ydCB7IHZlcmlmeSB9IGZyb20gJy4vdmVyaWZ5LmpzJztcbiJdLCJuYW1lcyI6WyJkaWdlc3QiLCJnZXRSYW5kb21WYWx1ZXMiLCJ2ZXJpZnkiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/isoCrypto/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/isoCrypto/mapCoseAlgToWebCryptoAlg.js":
/*!***************************************************************************************************!*\
  !*** ./node_modules/@simplewebauthn/server/esm/helpers/iso/isoCrypto/mapCoseAlgToWebCryptoAlg.js ***!
  \***************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   mapCoseAlgToWebCryptoAlg: () => (/* binding */ mapCoseAlgToWebCryptoAlg)\n/* harmony export */ });\n/* harmony import */ var _cose_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../cose.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/cose.js\");\n\n/**\n * Convert a COSE alg ID into a corresponding string value that WebCrypto APIs expect\n */ function mapCoseAlgToWebCryptoAlg(alg) {\n    if ([\n        _cose_js__WEBPACK_IMPORTED_MODULE_0__.COSEALG.RS1\n    ].indexOf(alg) >= 0) {\n        return \"SHA-1\";\n    } else if ([\n        _cose_js__WEBPACK_IMPORTED_MODULE_0__.COSEALG.ES256,\n        _cose_js__WEBPACK_IMPORTED_MODULE_0__.COSEALG.PS256,\n        _cose_js__WEBPACK_IMPORTED_MODULE_0__.COSEALG.RS256\n    ].indexOf(alg) >= 0) {\n        return \"SHA-256\";\n    } else if ([\n        _cose_js__WEBPACK_IMPORTED_MODULE_0__.COSEALG.ES384,\n        _cose_js__WEBPACK_IMPORTED_MODULE_0__.COSEALG.PS384,\n        _cose_js__WEBPACK_IMPORTED_MODULE_0__.COSEALG.RS384\n    ].indexOf(alg) >= 0) {\n        return \"SHA-384\";\n    } else if ([\n        _cose_js__WEBPACK_IMPORTED_MODULE_0__.COSEALG.ES512,\n        _cose_js__WEBPACK_IMPORTED_MODULE_0__.COSEALG.PS512,\n        _cose_js__WEBPACK_IMPORTED_MODULE_0__.COSEALG.RS512,\n        _cose_js__WEBPACK_IMPORTED_MODULE_0__.COSEALG.EdDSA\n    ].indexOf(alg) >= 0) {\n        return \"SHA-512\";\n    }\n    throw new Error(`Could not map COSE alg value of ${alg} to a WebCrypto alg`);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNpbXBsZXdlYmF1dGhuL3NlcnZlci9lc20vaGVscGVycy9pc28vaXNvQ3J5cHRvL21hcENvc2VBbGdUb1dlYkNyeXB0b0FsZy5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUF3QztBQUN4Qzs7Q0FFQyxHQUNNLFNBQVNDLHlCQUF5QkMsR0FBRztJQUN4QyxJQUFJO1FBQUNGLDZDQUFPQSxDQUFDRyxHQUFHO0tBQUMsQ0FBQ0MsT0FBTyxDQUFDRixRQUFRLEdBQUc7UUFDakMsT0FBTztJQUNYLE9BQ0ssSUFBSTtRQUFDRiw2Q0FBT0EsQ0FBQ0ssS0FBSztRQUFFTCw2Q0FBT0EsQ0FBQ00sS0FBSztRQUFFTiw2Q0FBT0EsQ0FBQ08sS0FBSztLQUFDLENBQUNILE9BQU8sQ0FBQ0YsUUFBUSxHQUFHO1FBQ3RFLE9BQU87SUFDWCxPQUNLLElBQUk7UUFBQ0YsNkNBQU9BLENBQUNRLEtBQUs7UUFBRVIsNkNBQU9BLENBQUNTLEtBQUs7UUFBRVQsNkNBQU9BLENBQUNVLEtBQUs7S0FBQyxDQUFDTixPQUFPLENBQUNGLFFBQVEsR0FBRztRQUN0RSxPQUFPO0lBQ1gsT0FDSyxJQUFJO1FBQUNGLDZDQUFPQSxDQUFDVyxLQUFLO1FBQUVYLDZDQUFPQSxDQUFDWSxLQUFLO1FBQUVaLDZDQUFPQSxDQUFDYSxLQUFLO1FBQUViLDZDQUFPQSxDQUFDYyxLQUFLO0tBQUMsQ0FBQ1YsT0FBTyxDQUFDRixRQUMxRSxHQUFHO1FBQ0gsT0FBTztJQUNYO0lBQ0EsTUFBTSxJQUFJYSxNQUFNLENBQUMsZ0NBQWdDLEVBQUViLElBQUksbUJBQW1CLENBQUM7QUFDL0UiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jYW1wdXMtbWluZC8uL25vZGVfbW9kdWxlcy9Ac2ltcGxld2ViYXV0aG4vc2VydmVyL2VzbS9oZWxwZXJzL2lzby9pc29DcnlwdG8vbWFwQ29zZUFsZ1RvV2ViQ3J5cHRvQWxnLmpzPzA1NTIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ09TRUFMRyB9IGZyb20gJy4uLy4uL2Nvc2UuanMnO1xuLyoqXG4gKiBDb252ZXJ0IGEgQ09TRSBhbGcgSUQgaW50byBhIGNvcnJlc3BvbmRpbmcgc3RyaW5nIHZhbHVlIHRoYXQgV2ViQ3J5cHRvIEFQSXMgZXhwZWN0XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBtYXBDb3NlQWxnVG9XZWJDcnlwdG9BbGcoYWxnKSB7XG4gICAgaWYgKFtDT1NFQUxHLlJTMV0uaW5kZXhPZihhbGcpID49IDApIHtcbiAgICAgICAgcmV0dXJuICdTSEEtMSc7XG4gICAgfVxuICAgIGVsc2UgaWYgKFtDT1NFQUxHLkVTMjU2LCBDT1NFQUxHLlBTMjU2LCBDT1NFQUxHLlJTMjU2XS5pbmRleE9mKGFsZykgPj0gMCkge1xuICAgICAgICByZXR1cm4gJ1NIQS0yNTYnO1xuICAgIH1cbiAgICBlbHNlIGlmIChbQ09TRUFMRy5FUzM4NCwgQ09TRUFMRy5QUzM4NCwgQ09TRUFMRy5SUzM4NF0uaW5kZXhPZihhbGcpID49IDApIHtcbiAgICAgICAgcmV0dXJuICdTSEEtMzg0JztcbiAgICB9XG4gICAgZWxzZSBpZiAoW0NPU0VBTEcuRVM1MTIsIENPU0VBTEcuUFM1MTIsIENPU0VBTEcuUlM1MTIsIENPU0VBTEcuRWREU0FdLmluZGV4T2YoYWxnKSA+PVxuICAgICAgICAwKSB7XG4gICAgICAgIHJldHVybiAnU0hBLTUxMic7XG4gICAgfVxuICAgIHRocm93IG5ldyBFcnJvcihgQ291bGQgbm90IG1hcCBDT1NFIGFsZyB2YWx1ZSBvZiAke2FsZ30gdG8gYSBXZWJDcnlwdG8gYWxnYCk7XG59XG4iXSwibmFtZXMiOlsiQ09TRUFMRyIsIm1hcENvc2VBbGdUb1dlYkNyeXB0b0FsZyIsImFsZyIsIlJTMSIsImluZGV4T2YiLCJFUzI1NiIsIlBTMjU2IiwiUlMyNTYiLCJFUzM4NCIsIlBTMzg0IiwiUlMzODQiLCJFUzUxMiIsIlBTNTEyIiwiUlM1MTIiLCJFZERTQSIsIkVycm9yIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/isoCrypto/mapCoseAlgToWebCryptoAlg.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/isoCrypto/mapCoseAlgToWebCryptoKeyAlgName.js":
/*!**********************************************************************************************************!*\
  !*** ./node_modules/@simplewebauthn/server/esm/helpers/iso/isoCrypto/mapCoseAlgToWebCryptoKeyAlgName.js ***!
  \**********************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   mapCoseAlgToWebCryptoKeyAlgName: () => (/* binding */ mapCoseAlgToWebCryptoKeyAlgName)\n/* harmony export */ });\n/* harmony import */ var _cose_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../cose.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/cose.js\");\n\n/**\n * Convert a COSE alg ID into a corresponding key algorithm string value that WebCrypto APIs expect\n */ function mapCoseAlgToWebCryptoKeyAlgName(alg) {\n    if ([\n        _cose_js__WEBPACK_IMPORTED_MODULE_0__.COSEALG.EdDSA\n    ].indexOf(alg) >= 0) {\n        return \"Ed25519\";\n    } else if ([\n        _cose_js__WEBPACK_IMPORTED_MODULE_0__.COSEALG.ES256,\n        _cose_js__WEBPACK_IMPORTED_MODULE_0__.COSEALG.ES384,\n        _cose_js__WEBPACK_IMPORTED_MODULE_0__.COSEALG.ES512,\n        _cose_js__WEBPACK_IMPORTED_MODULE_0__.COSEALG.ES256K\n    ].indexOf(alg) >= 0) {\n        return \"ECDSA\";\n    } else if ([\n        _cose_js__WEBPACK_IMPORTED_MODULE_0__.COSEALG.RS256,\n        _cose_js__WEBPACK_IMPORTED_MODULE_0__.COSEALG.RS384,\n        _cose_js__WEBPACK_IMPORTED_MODULE_0__.COSEALG.RS512,\n        _cose_js__WEBPACK_IMPORTED_MODULE_0__.COSEALG.RS1\n    ].indexOf(alg) >= 0) {\n        return \"RSASSA-PKCS1-v1_5\";\n    } else if ([\n        _cose_js__WEBPACK_IMPORTED_MODULE_0__.COSEALG.PS256,\n        _cose_js__WEBPACK_IMPORTED_MODULE_0__.COSEALG.PS384,\n        _cose_js__WEBPACK_IMPORTED_MODULE_0__.COSEALG.PS512\n    ].indexOf(alg) >= 0) {\n        return \"RSA-PSS\";\n    }\n    throw new Error(`Could not map COSE alg value of ${alg} to a WebCrypto key alg name`);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNpbXBsZXdlYmF1dGhuL3NlcnZlci9lc20vaGVscGVycy9pc28vaXNvQ3J5cHRvL21hcENvc2VBbGdUb1dlYkNyeXB0b0tleUFsZ05hbWUuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBd0M7QUFDeEM7O0NBRUMsR0FDTSxTQUFTQyxnQ0FBZ0NDLEdBQUc7SUFDL0MsSUFBSTtRQUFDRiw2Q0FBT0EsQ0FBQ0csS0FBSztLQUFDLENBQUNDLE9BQU8sQ0FBQ0YsUUFBUSxHQUFHO1FBQ25DLE9BQU87SUFDWCxPQUNLLElBQUk7UUFBQ0YsNkNBQU9BLENBQUNLLEtBQUs7UUFBRUwsNkNBQU9BLENBQUNNLEtBQUs7UUFBRU4sNkNBQU9BLENBQUNPLEtBQUs7UUFBRVAsNkNBQU9BLENBQUNRLE1BQU07S0FBQyxDQUFDSixPQUFPLENBQUNGLFFBQVEsR0FBRztRQUN0RixPQUFPO0lBQ1gsT0FDSyxJQUFJO1FBQUNGLDZDQUFPQSxDQUFDUyxLQUFLO1FBQUVULDZDQUFPQSxDQUFDVSxLQUFLO1FBQUVWLDZDQUFPQSxDQUFDVyxLQUFLO1FBQUVYLDZDQUFPQSxDQUFDWSxHQUFHO0tBQUMsQ0FBQ1IsT0FBTyxDQUFDRixRQUFRLEdBQUc7UUFDbkYsT0FBTztJQUNYLE9BQ0ssSUFBSTtRQUFDRiw2Q0FBT0EsQ0FBQ2EsS0FBSztRQUFFYiw2Q0FBT0EsQ0FBQ2MsS0FBSztRQUFFZCw2Q0FBT0EsQ0FBQ2UsS0FBSztLQUFDLENBQUNYLE9BQU8sQ0FBQ0YsUUFBUSxHQUFHO1FBQ3RFLE9BQU87SUFDWDtJQUNBLE1BQU0sSUFBSWMsTUFBTSxDQUFDLGdDQUFnQyxFQUFFZCxJQUFJLDRCQUE0QixDQUFDO0FBQ3hGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vY2FtcHVzLW1pbmQvLi9ub2RlX21vZHVsZXMvQHNpbXBsZXdlYmF1dGhuL3NlcnZlci9lc20vaGVscGVycy9pc28vaXNvQ3J5cHRvL21hcENvc2VBbGdUb1dlYkNyeXB0b0tleUFsZ05hbWUuanM/MDY4YSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDT1NFQUxHIH0gZnJvbSAnLi4vLi4vY29zZS5qcyc7XG4vKipcbiAqIENvbnZlcnQgYSBDT1NFIGFsZyBJRCBpbnRvIGEgY29ycmVzcG9uZGluZyBrZXkgYWxnb3JpdGhtIHN0cmluZyB2YWx1ZSB0aGF0IFdlYkNyeXB0byBBUElzIGV4cGVjdFxuICovXG5leHBvcnQgZnVuY3Rpb24gbWFwQ29zZUFsZ1RvV2ViQ3J5cHRvS2V5QWxnTmFtZShhbGcpIHtcbiAgICBpZiAoW0NPU0VBTEcuRWREU0FdLmluZGV4T2YoYWxnKSA+PSAwKSB7XG4gICAgICAgIHJldHVybiAnRWQyNTUxOSc7XG4gICAgfVxuICAgIGVsc2UgaWYgKFtDT1NFQUxHLkVTMjU2LCBDT1NFQUxHLkVTMzg0LCBDT1NFQUxHLkVTNTEyLCBDT1NFQUxHLkVTMjU2S10uaW5kZXhPZihhbGcpID49IDApIHtcbiAgICAgICAgcmV0dXJuICdFQ0RTQSc7XG4gICAgfVxuICAgIGVsc2UgaWYgKFtDT1NFQUxHLlJTMjU2LCBDT1NFQUxHLlJTMzg0LCBDT1NFQUxHLlJTNTEyLCBDT1NFQUxHLlJTMV0uaW5kZXhPZihhbGcpID49IDApIHtcbiAgICAgICAgcmV0dXJuICdSU0FTU0EtUEtDUzEtdjFfNSc7XG4gICAgfVxuICAgIGVsc2UgaWYgKFtDT1NFQUxHLlBTMjU2LCBDT1NFQUxHLlBTMzg0LCBDT1NFQUxHLlBTNTEyXS5pbmRleE9mKGFsZykgPj0gMCkge1xuICAgICAgICByZXR1cm4gJ1JTQS1QU1MnO1xuICAgIH1cbiAgICB0aHJvdyBuZXcgRXJyb3IoYENvdWxkIG5vdCBtYXAgQ09TRSBhbGcgdmFsdWUgb2YgJHthbGd9IHRvIGEgV2ViQ3J5cHRvIGtleSBhbGcgbmFtZWApO1xufVxuIl0sIm5hbWVzIjpbIkNPU0VBTEciLCJtYXBDb3NlQWxnVG9XZWJDcnlwdG9LZXlBbGdOYW1lIiwiYWxnIiwiRWREU0EiLCJpbmRleE9mIiwiRVMyNTYiLCJFUzM4NCIsIkVTNTEyIiwiRVMyNTZLIiwiUlMyNTYiLCJSUzM4NCIsIlJTNTEyIiwiUlMxIiwiUFMyNTYiLCJQUzM4NCIsIlBTNTEyIiwiRXJyb3IiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/isoCrypto/mapCoseAlgToWebCryptoKeyAlgName.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/isoCrypto/unwrapEC2Signature.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/@simplewebauthn/server/esm/helpers/iso/isoCrypto/unwrapEC2Signature.js ***!
  \*********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   unwrapEC2Signature: () => (/* binding */ unwrapEC2Signature)\n/* harmony export */ });\n/* harmony import */ var _deps_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../deps.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/deps.js\");\n/* harmony import */ var _index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../index.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/index.js\");\n\n\n/**\n * In WebAuthn, EC2 signatures are wrapped in ASN.1 structure so we need to peel r and s apart.\n *\n * See https://www.w3.org/TR/webauthn-2/#sctn-signature-attestation-types\n */ function unwrapEC2Signature(signature) {\n    const parsedSignature = _deps_js__WEBPACK_IMPORTED_MODULE_0__.AsnParser.parse(signature, _deps_js__WEBPACK_IMPORTED_MODULE_0__.ECDSASigValue);\n    let rBytes = new Uint8Array(parsedSignature.r);\n    let sBytes = new Uint8Array(parsedSignature.s);\n    if (shouldRemoveLeadingZero(rBytes)) {\n        rBytes = rBytes.slice(1);\n    }\n    if (shouldRemoveLeadingZero(sBytes)) {\n        sBytes = sBytes.slice(1);\n    }\n    const finalSignature = _index_js__WEBPACK_IMPORTED_MODULE_1__.isoUint8Array.concat([\n        rBytes,\n        sBytes\n    ]);\n    return finalSignature;\n}\n/**\n * Determine if the DER-specific `00` byte at the start of an ECDSA signature byte sequence\n * should be removed based on the following logic:\n *\n * \"If the leading byte is 0x0, and the the high order bit on the second byte is not set to 0,\n * then remove the leading 0x0 byte\"\n */ function shouldRemoveLeadingZero(bytes) {\n    return bytes[0] === 0x0 && (bytes[1] & 1 << 7) !== 0;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNpbXBsZXdlYmF1dGhuL3NlcnZlci9lc20vaGVscGVycy9pc28vaXNvQ3J5cHRvL3Vud3JhcEVDMlNpZ25hdHVyZS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBNEQ7QUFDaEI7QUFDNUM7Ozs7Q0FJQyxHQUNNLFNBQVNHLG1CQUFtQkMsU0FBUztJQUN4QyxNQUFNQyxrQkFBa0JMLCtDQUFTQSxDQUFDTSxLQUFLLENBQUNGLFdBQVdILG1EQUFhQTtJQUNoRSxJQUFJTSxTQUFTLElBQUlDLFdBQVdILGdCQUFnQkksQ0FBQztJQUM3QyxJQUFJQyxTQUFTLElBQUlGLFdBQVdILGdCQUFnQk0sQ0FBQztJQUM3QyxJQUFJQyx3QkFBd0JMLFNBQVM7UUFDakNBLFNBQVNBLE9BQU9NLEtBQUssQ0FBQztJQUMxQjtJQUNBLElBQUlELHdCQUF3QkYsU0FBUztRQUNqQ0EsU0FBU0EsT0FBT0csS0FBSyxDQUFDO0lBQzFCO0lBQ0EsTUFBTUMsaUJBQWlCWiwyREFBb0IsQ0FBQztRQUFDSztRQUFRRztLQUFPO0lBQzVELE9BQU9JO0FBQ1g7QUFDQTs7Ozs7O0NBTUMsR0FDRCxTQUFTRix3QkFBd0JJLEtBQUs7SUFDbEMsT0FBT0EsS0FBSyxDQUFDLEVBQUUsS0FBSyxPQUFPLENBQUNBLEtBQUssQ0FBQyxFQUFFLEdBQUksS0FBSyxDQUFDLE1BQU87QUFDekQiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jYW1wdXMtbWluZC8uL25vZGVfbW9kdWxlcy9Ac2ltcGxld2ViYXV0aG4vc2VydmVyL2VzbS9oZWxwZXJzL2lzby9pc29DcnlwdG8vdW53cmFwRUMyU2lnbmF0dXJlLmpzPzgyM2QiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQXNuUGFyc2VyLCBFQ0RTQVNpZ1ZhbHVlIH0gZnJvbSAnLi4vLi4vLi4vZGVwcy5qcyc7XG5pbXBvcnQgeyBpc29VaW50OEFycmF5IH0gZnJvbSAnLi4vaW5kZXguanMnO1xuLyoqXG4gKiBJbiBXZWJBdXRobiwgRUMyIHNpZ25hdHVyZXMgYXJlIHdyYXBwZWQgaW4gQVNOLjEgc3RydWN0dXJlIHNvIHdlIG5lZWQgdG8gcGVlbCByIGFuZCBzIGFwYXJ0LlxuICpcbiAqIFNlZSBodHRwczovL3d3dy53My5vcmcvVFIvd2ViYXV0aG4tMi8jc2N0bi1zaWduYXR1cmUtYXR0ZXN0YXRpb24tdHlwZXNcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHVud3JhcEVDMlNpZ25hdHVyZShzaWduYXR1cmUpIHtcbiAgICBjb25zdCBwYXJzZWRTaWduYXR1cmUgPSBBc25QYXJzZXIucGFyc2Uoc2lnbmF0dXJlLCBFQ0RTQVNpZ1ZhbHVlKTtcbiAgICBsZXQgckJ5dGVzID0gbmV3IFVpbnQ4QXJyYXkocGFyc2VkU2lnbmF0dXJlLnIpO1xuICAgIGxldCBzQnl0ZXMgPSBuZXcgVWludDhBcnJheShwYXJzZWRTaWduYXR1cmUucyk7XG4gICAgaWYgKHNob3VsZFJlbW92ZUxlYWRpbmdaZXJvKHJCeXRlcykpIHtcbiAgICAgICAgckJ5dGVzID0gckJ5dGVzLnNsaWNlKDEpO1xuICAgIH1cbiAgICBpZiAoc2hvdWxkUmVtb3ZlTGVhZGluZ1plcm8oc0J5dGVzKSkge1xuICAgICAgICBzQnl0ZXMgPSBzQnl0ZXMuc2xpY2UoMSk7XG4gICAgfVxuICAgIGNvbnN0IGZpbmFsU2lnbmF0dXJlID0gaXNvVWludDhBcnJheS5jb25jYXQoW3JCeXRlcywgc0J5dGVzXSk7XG4gICAgcmV0dXJuIGZpbmFsU2lnbmF0dXJlO1xufVxuLyoqXG4gKiBEZXRlcm1pbmUgaWYgdGhlIERFUi1zcGVjaWZpYyBgMDBgIGJ5dGUgYXQgdGhlIHN0YXJ0IG9mIGFuIEVDRFNBIHNpZ25hdHVyZSBieXRlIHNlcXVlbmNlXG4gKiBzaG91bGQgYmUgcmVtb3ZlZCBiYXNlZCBvbiB0aGUgZm9sbG93aW5nIGxvZ2ljOlxuICpcbiAqIFwiSWYgdGhlIGxlYWRpbmcgYnl0ZSBpcyAweDAsIGFuZCB0aGUgdGhlIGhpZ2ggb3JkZXIgYml0IG9uIHRoZSBzZWNvbmQgYnl0ZSBpcyBub3Qgc2V0IHRvIDAsXG4gKiB0aGVuIHJlbW92ZSB0aGUgbGVhZGluZyAweDAgYnl0ZVwiXG4gKi9cbmZ1bmN0aW9uIHNob3VsZFJlbW92ZUxlYWRpbmdaZXJvKGJ5dGVzKSB7XG4gICAgcmV0dXJuIGJ5dGVzWzBdID09PSAweDAgJiYgKGJ5dGVzWzFdICYgKDEgPDwgNykpICE9PSAwO1xufVxuIl0sIm5hbWVzIjpbIkFzblBhcnNlciIsIkVDRFNBU2lnVmFsdWUiLCJpc29VaW50OEFycmF5IiwidW53cmFwRUMyU2lnbmF0dXJlIiwic2lnbmF0dXJlIiwicGFyc2VkU2lnbmF0dXJlIiwicGFyc2UiLCJyQnl0ZXMiLCJVaW50OEFycmF5IiwiciIsInNCeXRlcyIsInMiLCJzaG91bGRSZW1vdmVMZWFkaW5nWmVybyIsInNsaWNlIiwiZmluYWxTaWduYXR1cmUiLCJjb25jYXQiLCJieXRlcyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/isoCrypto/unwrapEC2Signature.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/isoCrypto/verify.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@simplewebauthn/server/esm/helpers/iso/isoCrypto/verify.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   verify: () => (/* binding */ verify)\n/* harmony export */ });\n/* harmony import */ var _cose_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../cose.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/cose.js\");\n/* harmony import */ var _verifyEC2_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./verifyEC2.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/isoCrypto/verifyEC2.js\");\n/* harmony import */ var _verifyRSA_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./verifyRSA.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/isoCrypto/verifyRSA.js\");\n/* harmony import */ var _verifyOKP_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./verifyOKP.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/isoCrypto/verifyOKP.js\");\n/* harmony import */ var _unwrapEC2Signature_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./unwrapEC2Signature.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/isoCrypto/unwrapEC2Signature.js\");\n\n\n\n\n\n/**\n * Verify signatures with their public key. Supports EC2 and RSA public keys.\n */ function verify(opts) {\n    const { cosePublicKey, signature, data, shaHashOverride } = opts;\n    if ((0,_cose_js__WEBPACK_IMPORTED_MODULE_0__.isCOSEPublicKeyEC2)(cosePublicKey)) {\n        const unwrappedSignature = (0,_unwrapEC2Signature_js__WEBPACK_IMPORTED_MODULE_4__.unwrapEC2Signature)(signature);\n        return (0,_verifyEC2_js__WEBPACK_IMPORTED_MODULE_1__.verifyEC2)({\n            cosePublicKey,\n            signature: unwrappedSignature,\n            data,\n            shaHashOverride\n        });\n    } else if ((0,_cose_js__WEBPACK_IMPORTED_MODULE_0__.isCOSEPublicKeyRSA)(cosePublicKey)) {\n        return (0,_verifyRSA_js__WEBPACK_IMPORTED_MODULE_2__.verifyRSA)({\n            cosePublicKey,\n            signature,\n            data,\n            shaHashOverride\n        });\n    } else if ((0,_cose_js__WEBPACK_IMPORTED_MODULE_0__.isCOSEPublicKeyOKP)(cosePublicKey)) {\n        return (0,_verifyOKP_js__WEBPACK_IMPORTED_MODULE_3__.verifyOKP)({\n            cosePublicKey,\n            signature,\n            data\n        });\n    }\n    const kty = cosePublicKey.get(_cose_js__WEBPACK_IMPORTED_MODULE_0__.COSEKEYS.kty);\n    throw new Error(`Signature verification with public key of kty ${kty} is not supported by this method`);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNpbXBsZXdlYmF1dGhuL3NlcnZlci9lc20vaGVscGVycy9pc28vaXNvQ3J5cHRvL3ZlcmlmeS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBc0c7QUFDM0Q7QUFDQTtBQUNBO0FBQ2tCO0FBQzdEOztDQUVDLEdBQ00sU0FBU1EsT0FBT0MsSUFBSTtJQUN2QixNQUFNLEVBQUVDLGFBQWEsRUFBRUMsU0FBUyxFQUFFQyxJQUFJLEVBQUVDLGVBQWUsRUFBRSxHQUFHSjtJQUM1RCxJQUFJUiw0REFBa0JBLENBQUNTLGdCQUFnQjtRQUNuQyxNQUFNSSxxQkFBcUJQLDBFQUFrQkEsQ0FBQ0k7UUFDOUMsT0FBT1Asd0RBQVNBLENBQUM7WUFDYk07WUFDQUMsV0FBV0c7WUFDWEY7WUFDQUM7UUFDSjtJQUNKLE9BQ0ssSUFBSVYsNERBQWtCQSxDQUFDTyxnQkFBZ0I7UUFDeEMsT0FBT0wsd0RBQVNBLENBQUM7WUFBRUs7WUFBZUM7WUFBV0M7WUFBTUM7UUFBZ0I7SUFDdkUsT0FDSyxJQUFJWCw0REFBa0JBLENBQUNRLGdCQUFnQjtRQUN4QyxPQUFPSix3REFBU0EsQ0FBQztZQUFFSTtZQUFlQztZQUFXQztRQUFLO0lBQ3REO0lBQ0EsTUFBTUcsTUFBTUwsY0FBY00sR0FBRyxDQUFDaEIsOENBQVFBLENBQUNlLEdBQUc7SUFDMUMsTUFBTSxJQUFJRSxNQUFNLENBQUMsOENBQThDLEVBQUVGLElBQUksZ0NBQWdDLENBQUM7QUFDMUciLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jYW1wdXMtbWluZC8uL25vZGVfbW9kdWxlcy9Ac2ltcGxld2ViYXV0aG4vc2VydmVyL2VzbS9oZWxwZXJzL2lzby9pc29DcnlwdG8vdmVyaWZ5LmpzPzk2OTYiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ09TRUtFWVMsIGlzQ09TRVB1YmxpY0tleUVDMiwgaXNDT1NFUHVibGljS2V5T0tQLCBpc0NPU0VQdWJsaWNLZXlSU0EsIH0gZnJvbSAnLi4vLi4vY29zZS5qcyc7XG5pbXBvcnQgeyB2ZXJpZnlFQzIgfSBmcm9tICcuL3ZlcmlmeUVDMi5qcyc7XG5pbXBvcnQgeyB2ZXJpZnlSU0EgfSBmcm9tICcuL3ZlcmlmeVJTQS5qcyc7XG5pbXBvcnQgeyB2ZXJpZnlPS1AgfSBmcm9tICcuL3ZlcmlmeU9LUC5qcyc7XG5pbXBvcnQgeyB1bndyYXBFQzJTaWduYXR1cmUgfSBmcm9tICcuL3Vud3JhcEVDMlNpZ25hdHVyZS5qcyc7XG4vKipcbiAqIFZlcmlmeSBzaWduYXR1cmVzIHdpdGggdGhlaXIgcHVibGljIGtleS4gU3VwcG9ydHMgRUMyIGFuZCBSU0EgcHVibGljIGtleXMuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiB2ZXJpZnkob3B0cykge1xuICAgIGNvbnN0IHsgY29zZVB1YmxpY0tleSwgc2lnbmF0dXJlLCBkYXRhLCBzaGFIYXNoT3ZlcnJpZGUgfSA9IG9wdHM7XG4gICAgaWYgKGlzQ09TRVB1YmxpY0tleUVDMihjb3NlUHVibGljS2V5KSkge1xuICAgICAgICBjb25zdCB1bndyYXBwZWRTaWduYXR1cmUgPSB1bndyYXBFQzJTaWduYXR1cmUoc2lnbmF0dXJlKTtcbiAgICAgICAgcmV0dXJuIHZlcmlmeUVDMih7XG4gICAgICAgICAgICBjb3NlUHVibGljS2V5LFxuICAgICAgICAgICAgc2lnbmF0dXJlOiB1bndyYXBwZWRTaWduYXR1cmUsXG4gICAgICAgICAgICBkYXRhLFxuICAgICAgICAgICAgc2hhSGFzaE92ZXJyaWRlLFxuICAgICAgICB9KTtcbiAgICB9XG4gICAgZWxzZSBpZiAoaXNDT1NFUHVibGljS2V5UlNBKGNvc2VQdWJsaWNLZXkpKSB7XG4gICAgICAgIHJldHVybiB2ZXJpZnlSU0EoeyBjb3NlUHVibGljS2V5LCBzaWduYXR1cmUsIGRhdGEsIHNoYUhhc2hPdmVycmlkZSB9KTtcbiAgICB9XG4gICAgZWxzZSBpZiAoaXNDT1NFUHVibGljS2V5T0tQKGNvc2VQdWJsaWNLZXkpKSB7XG4gICAgICAgIHJldHVybiB2ZXJpZnlPS1AoeyBjb3NlUHVibGljS2V5LCBzaWduYXR1cmUsIGRhdGEgfSk7XG4gICAgfVxuICAgIGNvbnN0IGt0eSA9IGNvc2VQdWJsaWNLZXkuZ2V0KENPU0VLRVlTLmt0eSk7XG4gICAgdGhyb3cgbmV3IEVycm9yKGBTaWduYXR1cmUgdmVyaWZpY2F0aW9uIHdpdGggcHVibGljIGtleSBvZiBrdHkgJHtrdHl9IGlzIG5vdCBzdXBwb3J0ZWQgYnkgdGhpcyBtZXRob2RgKTtcbn1cbiJdLCJuYW1lcyI6WyJDT1NFS0VZUyIsImlzQ09TRVB1YmxpY0tleUVDMiIsImlzQ09TRVB1YmxpY0tleU9LUCIsImlzQ09TRVB1YmxpY0tleVJTQSIsInZlcmlmeUVDMiIsInZlcmlmeVJTQSIsInZlcmlmeU9LUCIsInVud3JhcEVDMlNpZ25hdHVyZSIsInZlcmlmeSIsIm9wdHMiLCJjb3NlUHVibGljS2V5Iiwic2lnbmF0dXJlIiwiZGF0YSIsInNoYUhhc2hPdmVycmlkZSIsInVud3JhcHBlZFNpZ25hdHVyZSIsImt0eSIsImdldCIsIkVycm9yIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/isoCrypto/verify.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/isoCrypto/verifyEC2.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@simplewebauthn/server/esm/helpers/iso/isoCrypto/verifyEC2.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   verifyEC2: () => (/* binding */ verifyEC2)\n/* harmony export */ });\n/* harmony import */ var _cose_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../cose.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/cose.js\");\n/* harmony import */ var _mapCoseAlgToWebCryptoAlg_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./mapCoseAlgToWebCryptoAlg.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/isoCrypto/mapCoseAlgToWebCryptoAlg.js\");\n/* harmony import */ var _importKey_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./importKey.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/isoCrypto/importKey.js\");\n/* harmony import */ var _index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../index.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/index.js\");\n/* harmony import */ var _getWebCrypto_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./getWebCrypto.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/isoCrypto/getWebCrypto.js\");\n\n\n\n\n\n/**\n * Verify a signature using an EC2 public key\n */ async function verifyEC2(opts) {\n    const { cosePublicKey, signature, data, shaHashOverride } = opts;\n    const WebCrypto = await (0,_getWebCrypto_js__WEBPACK_IMPORTED_MODULE_4__.getWebCrypto)();\n    // Import the public key\n    const alg = cosePublicKey.get(_cose_js__WEBPACK_IMPORTED_MODULE_0__.COSEKEYS.alg);\n    const crv = cosePublicKey.get(_cose_js__WEBPACK_IMPORTED_MODULE_0__.COSEKEYS.crv);\n    const x = cosePublicKey.get(_cose_js__WEBPACK_IMPORTED_MODULE_0__.COSEKEYS.x);\n    const y = cosePublicKey.get(_cose_js__WEBPACK_IMPORTED_MODULE_0__.COSEKEYS.y);\n    if (!alg) {\n        throw new Error(\"Public key was missing alg (EC2)\");\n    }\n    if (!crv) {\n        throw new Error(\"Public key was missing crv (EC2)\");\n    }\n    if (!x) {\n        throw new Error(\"Public key was missing x (EC2)\");\n    }\n    if (!y) {\n        throw new Error(\"Public key was missing y (EC2)\");\n    }\n    let _crv;\n    if (crv === _cose_js__WEBPACK_IMPORTED_MODULE_0__.COSECRV.P256) {\n        _crv = \"P-256\";\n    } else if (crv === _cose_js__WEBPACK_IMPORTED_MODULE_0__.COSECRV.P384) {\n        _crv = \"P-384\";\n    } else if (crv === _cose_js__WEBPACK_IMPORTED_MODULE_0__.COSECRV.P521) {\n        _crv = \"P-521\";\n    } else {\n        throw new Error(`Unexpected COSE crv value of ${crv} (EC2)`);\n    }\n    const keyData = {\n        kty: \"EC\",\n        crv: _crv,\n        x: _index_js__WEBPACK_IMPORTED_MODULE_3__.isoBase64URL.fromBuffer(x),\n        y: _index_js__WEBPACK_IMPORTED_MODULE_3__.isoBase64URL.fromBuffer(y),\n        ext: false\n    };\n    const keyAlgorithm = {\n        /**\n         * Note to future self: you can't use `mapCoseAlgToWebCryptoKeyAlgName()` here because some\n         * leaf certs from actual devices specified an RSA SHA value for `alg` (e.g. `-257`) which\n         * would then map here to `'RSASSA-PKCS1-v1_5'`. We always want `'ECDSA'` here so we'll\n         * hard-code this.\n         */ name: \"ECDSA\",\n        namedCurve: _crv\n    };\n    const key = await (0,_importKey_js__WEBPACK_IMPORTED_MODULE_2__.importKey)({\n        keyData,\n        algorithm: keyAlgorithm\n    });\n    // Determine which SHA algorithm to use for signature verification\n    let subtleAlg = (0,_mapCoseAlgToWebCryptoAlg_js__WEBPACK_IMPORTED_MODULE_1__.mapCoseAlgToWebCryptoAlg)(alg);\n    if (shaHashOverride) {\n        subtleAlg = (0,_mapCoseAlgToWebCryptoAlg_js__WEBPACK_IMPORTED_MODULE_1__.mapCoseAlgToWebCryptoAlg)(shaHashOverride);\n    }\n    const verifyAlgorithm = {\n        name: \"ECDSA\",\n        hash: {\n            name: subtleAlg\n        }\n    };\n    return WebCrypto.subtle.verify(verifyAlgorithm, key, signature, data);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNpbXBsZXdlYmF1dGhuL3NlcnZlci9lc20vaGVscGVycy9pc28vaXNvQ3J5cHRvL3ZlcmlmeUVDMi5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBa0Q7QUFDdUI7QUFDOUI7QUFDQTtBQUNNO0FBQ2pEOztDQUVDLEdBQ00sZUFBZU0sVUFBVUMsSUFBSTtJQUNoQyxNQUFNLEVBQUVDLGFBQWEsRUFBRUMsU0FBUyxFQUFFQyxJQUFJLEVBQUVDLGVBQWUsRUFBRSxHQUFHSjtJQUM1RCxNQUFNSyxZQUFZLE1BQU1QLDhEQUFZQTtJQUNwQyx3QkFBd0I7SUFDeEIsTUFBTVEsTUFBTUwsY0FBY00sR0FBRyxDQUFDYiw4Q0FBUUEsQ0FBQ1ksR0FBRztJQUMxQyxNQUFNRSxNQUFNUCxjQUFjTSxHQUFHLENBQUNiLDhDQUFRQSxDQUFDYyxHQUFHO0lBQzFDLE1BQU1DLElBQUlSLGNBQWNNLEdBQUcsQ0FBQ2IsOENBQVFBLENBQUNlLENBQUM7SUFDdEMsTUFBTUMsSUFBSVQsY0FBY00sR0FBRyxDQUFDYiw4Q0FBUUEsQ0FBQ2dCLENBQUM7SUFDdEMsSUFBSSxDQUFDSixLQUFLO1FBQ04sTUFBTSxJQUFJSyxNQUFNO0lBQ3BCO0lBQ0EsSUFBSSxDQUFDSCxLQUFLO1FBQ04sTUFBTSxJQUFJRyxNQUFNO0lBQ3BCO0lBQ0EsSUFBSSxDQUFDRixHQUFHO1FBQ0osTUFBTSxJQUFJRSxNQUFNO0lBQ3BCO0lBQ0EsSUFBSSxDQUFDRCxHQUFHO1FBQ0osTUFBTSxJQUFJQyxNQUFNO0lBQ3BCO0lBQ0EsSUFBSUM7SUFDSixJQUFJSixRQUFRZiw2Q0FBT0EsQ0FBQ29CLElBQUksRUFBRTtRQUN0QkQsT0FBTztJQUNYLE9BQ0ssSUFBSUosUUFBUWYsNkNBQU9BLENBQUNxQixJQUFJLEVBQUU7UUFDM0JGLE9BQU87SUFDWCxPQUNLLElBQUlKLFFBQVFmLDZDQUFPQSxDQUFDc0IsSUFBSSxFQUFFO1FBQzNCSCxPQUFPO0lBQ1gsT0FDSztRQUNELE1BQU0sSUFBSUQsTUFBTSxDQUFDLDZCQUE2QixFQUFFSCxJQUFJLE1BQU0sQ0FBQztJQUMvRDtJQUNBLE1BQU1RLFVBQVU7UUFDWkMsS0FBSztRQUNMVCxLQUFLSTtRQUNMSCxHQUFHWiw4REFBdUIsQ0FBQ1k7UUFDM0JDLEdBQUdiLDhEQUF1QixDQUFDYTtRQUMzQlMsS0FBSztJQUNUO0lBQ0EsTUFBTUMsZUFBZTtRQUNqQjs7Ozs7U0FLQyxHQUNEQyxNQUFNO1FBQ05DLFlBQVlWO0lBQ2hCO0lBQ0EsTUFBTVcsTUFBTSxNQUFNM0Isd0RBQVNBLENBQUM7UUFDeEJvQjtRQUNBUSxXQUFXSjtJQUNmO0lBQ0Esa0VBQWtFO0lBQ2xFLElBQUlLLFlBQVk5QixzRkFBd0JBLENBQUNXO0lBQ3pDLElBQUlGLGlCQUFpQjtRQUNqQnFCLFlBQVk5QixzRkFBd0JBLENBQUNTO0lBQ3pDO0lBQ0EsTUFBTXNCLGtCQUFrQjtRQUNwQkwsTUFBTTtRQUNOTSxNQUFNO1lBQUVOLE1BQU1JO1FBQVU7SUFDNUI7SUFDQSxPQUFPcEIsVUFBVXVCLE1BQU0sQ0FBQ0MsTUFBTSxDQUFDSCxpQkFBaUJILEtBQUtyQixXQUFXQztBQUNwRSIsInNvdXJjZXMiOlsid2VicGFjazovL2NhbXB1cy1taW5kLy4vbm9kZV9tb2R1bGVzL0BzaW1wbGV3ZWJhdXRobi9zZXJ2ZXIvZXNtL2hlbHBlcnMvaXNvL2lzb0NyeXB0by92ZXJpZnlFQzIuanM/OGVjZSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDT1NFQ1JWLCBDT1NFS0VZUyB9IGZyb20gJy4uLy4uL2Nvc2UuanMnO1xuaW1wb3J0IHsgbWFwQ29zZUFsZ1RvV2ViQ3J5cHRvQWxnIH0gZnJvbSAnLi9tYXBDb3NlQWxnVG9XZWJDcnlwdG9BbGcuanMnO1xuaW1wb3J0IHsgaW1wb3J0S2V5IH0gZnJvbSAnLi9pbXBvcnRLZXkuanMnO1xuaW1wb3J0IHsgaXNvQmFzZTY0VVJMIH0gZnJvbSAnLi4vaW5kZXguanMnO1xuaW1wb3J0IHsgZ2V0V2ViQ3J5cHRvIH0gZnJvbSAnLi9nZXRXZWJDcnlwdG8uanMnO1xuLyoqXG4gKiBWZXJpZnkgYSBzaWduYXR1cmUgdXNpbmcgYW4gRUMyIHB1YmxpYyBrZXlcbiAqL1xuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIHZlcmlmeUVDMihvcHRzKSB7XG4gICAgY29uc3QgeyBjb3NlUHVibGljS2V5LCBzaWduYXR1cmUsIGRhdGEsIHNoYUhhc2hPdmVycmlkZSB9ID0gb3B0cztcbiAgICBjb25zdCBXZWJDcnlwdG8gPSBhd2FpdCBnZXRXZWJDcnlwdG8oKTtcbiAgICAvLyBJbXBvcnQgdGhlIHB1YmxpYyBrZXlcbiAgICBjb25zdCBhbGcgPSBjb3NlUHVibGljS2V5LmdldChDT1NFS0VZUy5hbGcpO1xuICAgIGNvbnN0IGNydiA9IGNvc2VQdWJsaWNLZXkuZ2V0KENPU0VLRVlTLmNydik7XG4gICAgY29uc3QgeCA9IGNvc2VQdWJsaWNLZXkuZ2V0KENPU0VLRVlTLngpO1xuICAgIGNvbnN0IHkgPSBjb3NlUHVibGljS2V5LmdldChDT1NFS0VZUy55KTtcbiAgICBpZiAoIWFsZykge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ1B1YmxpYyBrZXkgd2FzIG1pc3NpbmcgYWxnIChFQzIpJyk7XG4gICAgfVxuICAgIGlmICghY3J2KSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcignUHVibGljIGtleSB3YXMgbWlzc2luZyBjcnYgKEVDMiknKTtcbiAgICB9XG4gICAgaWYgKCF4KSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcignUHVibGljIGtleSB3YXMgbWlzc2luZyB4IChFQzIpJyk7XG4gICAgfVxuICAgIGlmICgheSkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ1B1YmxpYyBrZXkgd2FzIG1pc3NpbmcgeSAoRUMyKScpO1xuICAgIH1cbiAgICBsZXQgX2NydjtcbiAgICBpZiAoY3J2ID09PSBDT1NFQ1JWLlAyNTYpIHtcbiAgICAgICAgX2NydiA9ICdQLTI1Nic7XG4gICAgfVxuICAgIGVsc2UgaWYgKGNydiA9PT0gQ09TRUNSVi5QMzg0KSB7XG4gICAgICAgIF9jcnYgPSAnUC0zODQnO1xuICAgIH1cbiAgICBlbHNlIGlmIChjcnYgPT09IENPU0VDUlYuUDUyMSkge1xuICAgICAgICBfY3J2ID0gJ1AtNTIxJztcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihgVW5leHBlY3RlZCBDT1NFIGNydiB2YWx1ZSBvZiAke2Nydn0gKEVDMilgKTtcbiAgICB9XG4gICAgY29uc3Qga2V5RGF0YSA9IHtcbiAgICAgICAga3R5OiAnRUMnLFxuICAgICAgICBjcnY6IF9jcnYsXG4gICAgICAgIHg6IGlzb0Jhc2U2NFVSTC5mcm9tQnVmZmVyKHgpLFxuICAgICAgICB5OiBpc29CYXNlNjRVUkwuZnJvbUJ1ZmZlcih5KSxcbiAgICAgICAgZXh0OiBmYWxzZSxcbiAgICB9O1xuICAgIGNvbnN0IGtleUFsZ29yaXRobSA9IHtcbiAgICAgICAgLyoqXG4gICAgICAgICAqIE5vdGUgdG8gZnV0dXJlIHNlbGY6IHlvdSBjYW4ndCB1c2UgYG1hcENvc2VBbGdUb1dlYkNyeXB0b0tleUFsZ05hbWUoKWAgaGVyZSBiZWNhdXNlIHNvbWVcbiAgICAgICAgICogbGVhZiBjZXJ0cyBmcm9tIGFjdHVhbCBkZXZpY2VzIHNwZWNpZmllZCBhbiBSU0EgU0hBIHZhbHVlIGZvciBgYWxnYCAoZS5nLiBgLTI1N2ApIHdoaWNoXG4gICAgICAgICAqIHdvdWxkIHRoZW4gbWFwIGhlcmUgdG8gYCdSU0FTU0EtUEtDUzEtdjFfNSdgLiBXZSBhbHdheXMgd2FudCBgJ0VDRFNBJ2AgaGVyZSBzbyB3ZSdsbFxuICAgICAgICAgKiBoYXJkLWNvZGUgdGhpcy5cbiAgICAgICAgICovXG4gICAgICAgIG5hbWU6ICdFQ0RTQScsXG4gICAgICAgIG5hbWVkQ3VydmU6IF9jcnYsXG4gICAgfTtcbiAgICBjb25zdCBrZXkgPSBhd2FpdCBpbXBvcnRLZXkoe1xuICAgICAgICBrZXlEYXRhLFxuICAgICAgICBhbGdvcml0aG06IGtleUFsZ29yaXRobSxcbiAgICB9KTtcbiAgICAvLyBEZXRlcm1pbmUgd2hpY2ggU0hBIGFsZ29yaXRobSB0byB1c2UgZm9yIHNpZ25hdHVyZSB2ZXJpZmljYXRpb25cbiAgICBsZXQgc3VidGxlQWxnID0gbWFwQ29zZUFsZ1RvV2ViQ3J5cHRvQWxnKGFsZyk7XG4gICAgaWYgKHNoYUhhc2hPdmVycmlkZSkge1xuICAgICAgICBzdWJ0bGVBbGcgPSBtYXBDb3NlQWxnVG9XZWJDcnlwdG9BbGcoc2hhSGFzaE92ZXJyaWRlKTtcbiAgICB9XG4gICAgY29uc3QgdmVyaWZ5QWxnb3JpdGhtID0ge1xuICAgICAgICBuYW1lOiAnRUNEU0EnLFxuICAgICAgICBoYXNoOiB7IG5hbWU6IHN1YnRsZUFsZyB9LFxuICAgIH07XG4gICAgcmV0dXJuIFdlYkNyeXB0by5zdWJ0bGUudmVyaWZ5KHZlcmlmeUFsZ29yaXRobSwga2V5LCBzaWduYXR1cmUsIGRhdGEpO1xufVxuIl0sIm5hbWVzIjpbIkNPU0VDUlYiLCJDT1NFS0VZUyIsIm1hcENvc2VBbGdUb1dlYkNyeXB0b0FsZyIsImltcG9ydEtleSIsImlzb0Jhc2U2NFVSTCIsImdldFdlYkNyeXB0byIsInZlcmlmeUVDMiIsIm9wdHMiLCJjb3NlUHVibGljS2V5Iiwic2lnbmF0dXJlIiwiZGF0YSIsInNoYUhhc2hPdmVycmlkZSIsIldlYkNyeXB0byIsImFsZyIsImdldCIsImNydiIsIngiLCJ5IiwiRXJyb3IiLCJfY3J2IiwiUDI1NiIsIlAzODQiLCJQNTIxIiwia2V5RGF0YSIsImt0eSIsImZyb21CdWZmZXIiLCJleHQiLCJrZXlBbGdvcml0aG0iLCJuYW1lIiwibmFtZWRDdXJ2ZSIsImtleSIsImFsZ29yaXRobSIsInN1YnRsZUFsZyIsInZlcmlmeUFsZ29yaXRobSIsImhhc2giLCJzdWJ0bGUiLCJ2ZXJpZnkiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/isoCrypto/verifyEC2.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/isoCrypto/verifyOKP.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@simplewebauthn/server/esm/helpers/iso/isoCrypto/verifyOKP.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   verifyOKP: () => (/* binding */ verifyOKP)\n/* harmony export */ });\n/* harmony import */ var _cose_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../cose.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/cose.js\");\n/* harmony import */ var _index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../index.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/index.js\");\n/* harmony import */ var _importKey_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./importKey.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/isoCrypto/importKey.js\");\n/* harmony import */ var _getWebCrypto_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./getWebCrypto.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/isoCrypto/getWebCrypto.js\");\n\n\n\n\nasync function verifyOKP(opts) {\n    const { cosePublicKey, signature, data } = opts;\n    const WebCrypto = await (0,_getWebCrypto_js__WEBPACK_IMPORTED_MODULE_3__.getWebCrypto)();\n    const alg = cosePublicKey.get(_cose_js__WEBPACK_IMPORTED_MODULE_0__.COSEKEYS.alg);\n    const crv = cosePublicKey.get(_cose_js__WEBPACK_IMPORTED_MODULE_0__.COSEKEYS.crv);\n    const x = cosePublicKey.get(_cose_js__WEBPACK_IMPORTED_MODULE_0__.COSEKEYS.x);\n    if (!alg) {\n        throw new Error(\"Public key was missing alg (OKP)\");\n    }\n    if (!(0,_cose_js__WEBPACK_IMPORTED_MODULE_0__.isCOSEAlg)(alg)) {\n        throw new Error(`Public key had invalid alg ${alg} (OKP)`);\n    }\n    if (!crv) {\n        throw new Error(\"Public key was missing crv (OKP)\");\n    }\n    if (!x) {\n        throw new Error(\"Public key was missing x (OKP)\");\n    }\n    // Pulled key import steps from here:\n    // https://wicg.github.io/webcrypto-secure-curves/#ed25519-operations\n    let _crv;\n    if (crv === _cose_js__WEBPACK_IMPORTED_MODULE_0__.COSECRV.ED25519) {\n        _crv = \"Ed25519\";\n    } else {\n        throw new Error(`Unexpected COSE crv value of ${crv} (OKP)`);\n    }\n    const keyData = {\n        kty: \"OKP\",\n        crv: _crv,\n        alg: \"EdDSA\",\n        x: _index_js__WEBPACK_IMPORTED_MODULE_1__.isoBase64URL.fromBuffer(x),\n        ext: false\n    };\n    const keyAlgorithm = {\n        name: _crv,\n        namedCurve: _crv\n    };\n    const key = await (0,_importKey_js__WEBPACK_IMPORTED_MODULE_2__.importKey)({\n        keyData,\n        algorithm: keyAlgorithm\n    });\n    const verifyAlgorithm = {\n        name: _crv\n    };\n    return WebCrypto.subtle.verify(verifyAlgorithm, key, signature, data);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNpbXBsZXdlYmF1dGhuL3NlcnZlci9lc20vaGVscGVycy9pc28vaXNvQ3J5cHRvL3ZlcmlmeU9LUC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUE2RDtBQUNmO0FBQ0g7QUFDTTtBQUMxQyxlQUFlTSxVQUFVQyxJQUFJO0lBQ2hDLE1BQU0sRUFBRUMsYUFBYSxFQUFFQyxTQUFTLEVBQUVDLElBQUksRUFBRSxHQUFHSDtJQUMzQyxNQUFNSSxZQUFZLE1BQU1OLDhEQUFZQTtJQUNwQyxNQUFNTyxNQUFNSixjQUFjSyxHQUFHLENBQUNaLDhDQUFRQSxDQUFDVyxHQUFHO0lBQzFDLE1BQU1FLE1BQU1OLGNBQWNLLEdBQUcsQ0FBQ1osOENBQVFBLENBQUNhLEdBQUc7SUFDMUMsTUFBTUMsSUFBSVAsY0FBY0ssR0FBRyxDQUFDWiw4Q0FBUUEsQ0FBQ2MsQ0FBQztJQUN0QyxJQUFJLENBQUNILEtBQUs7UUFDTixNQUFNLElBQUlJLE1BQU07SUFDcEI7SUFDQSxJQUFJLENBQUNkLG1EQUFTQSxDQUFDVSxNQUFNO1FBQ2pCLE1BQU0sSUFBSUksTUFBTSxDQUFDLDJCQUEyQixFQUFFSixJQUFJLE1BQU0sQ0FBQztJQUM3RDtJQUNBLElBQUksQ0FBQ0UsS0FBSztRQUNOLE1BQU0sSUFBSUUsTUFBTTtJQUNwQjtJQUNBLElBQUksQ0FBQ0QsR0FBRztRQUNKLE1BQU0sSUFBSUMsTUFBTTtJQUNwQjtJQUNBLHFDQUFxQztJQUNyQyxxRUFBcUU7SUFDckUsSUFBSUM7SUFDSixJQUFJSCxRQUFRZCw2Q0FBT0EsQ0FBQ2tCLE9BQU8sRUFBRTtRQUN6QkQsT0FBTztJQUNYLE9BQ0s7UUFDRCxNQUFNLElBQUlELE1BQU0sQ0FBQyw2QkFBNkIsRUFBRUYsSUFBSSxNQUFNLENBQUM7SUFDL0Q7SUFDQSxNQUFNSyxVQUFVO1FBQ1pDLEtBQUs7UUFDTE4sS0FBS0c7UUFDTEwsS0FBSztRQUNMRyxHQUFHWiw4REFBdUIsQ0FBQ1k7UUFDM0JPLEtBQUs7SUFDVDtJQUNBLE1BQU1DLGVBQWU7UUFDakJDLE1BQU1QO1FBQ05RLFlBQVlSO0lBQ2hCO0lBQ0EsTUFBTVMsTUFBTSxNQUFNdEIsd0RBQVNBLENBQUM7UUFDeEJlO1FBQ0FRLFdBQVdKO0lBQ2Y7SUFDQSxNQUFNSyxrQkFBa0I7UUFDcEJKLE1BQU1QO0lBQ1Y7SUFDQSxPQUFPTixVQUFVa0IsTUFBTSxDQUFDQyxNQUFNLENBQUNGLGlCQUFpQkYsS0FBS2pCLFdBQVdDO0FBQ3BFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vY2FtcHVzLW1pbmQvLi9ub2RlX21vZHVsZXMvQHNpbXBsZXdlYmF1dGhuL3NlcnZlci9lc20vaGVscGVycy9pc28vaXNvQ3J5cHRvL3ZlcmlmeU9LUC5qcz9lNTAwIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENPU0VDUlYsIENPU0VLRVlTLCBpc0NPU0VBbGcgfSBmcm9tICcuLi8uLi9jb3NlLmpzJztcbmltcG9ydCB7IGlzb0Jhc2U2NFVSTCB9IGZyb20gJy4uLy4uL2luZGV4LmpzJztcbmltcG9ydCB7IGltcG9ydEtleSB9IGZyb20gJy4vaW1wb3J0S2V5LmpzJztcbmltcG9ydCB7IGdldFdlYkNyeXB0byB9IGZyb20gJy4vZ2V0V2ViQ3J5cHRvLmpzJztcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiB2ZXJpZnlPS1Aob3B0cykge1xuICAgIGNvbnN0IHsgY29zZVB1YmxpY0tleSwgc2lnbmF0dXJlLCBkYXRhIH0gPSBvcHRzO1xuICAgIGNvbnN0IFdlYkNyeXB0byA9IGF3YWl0IGdldFdlYkNyeXB0bygpO1xuICAgIGNvbnN0IGFsZyA9IGNvc2VQdWJsaWNLZXkuZ2V0KENPU0VLRVlTLmFsZyk7XG4gICAgY29uc3QgY3J2ID0gY29zZVB1YmxpY0tleS5nZXQoQ09TRUtFWVMuY3J2KTtcbiAgICBjb25zdCB4ID0gY29zZVB1YmxpY0tleS5nZXQoQ09TRUtFWVMueCk7XG4gICAgaWYgKCFhbGcpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdQdWJsaWMga2V5IHdhcyBtaXNzaW5nIGFsZyAoT0tQKScpO1xuICAgIH1cbiAgICBpZiAoIWlzQ09TRUFsZyhhbGcpKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihgUHVibGljIGtleSBoYWQgaW52YWxpZCBhbGcgJHthbGd9IChPS1ApYCk7XG4gICAgfVxuICAgIGlmICghY3J2KSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcignUHVibGljIGtleSB3YXMgbWlzc2luZyBjcnYgKE9LUCknKTtcbiAgICB9XG4gICAgaWYgKCF4KSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcignUHVibGljIGtleSB3YXMgbWlzc2luZyB4IChPS1ApJyk7XG4gICAgfVxuICAgIC8vIFB1bGxlZCBrZXkgaW1wb3J0IHN0ZXBzIGZyb20gaGVyZTpcbiAgICAvLyBodHRwczovL3dpY2cuZ2l0aHViLmlvL3dlYmNyeXB0by1zZWN1cmUtY3VydmVzLyNlZDI1NTE5LW9wZXJhdGlvbnNcbiAgICBsZXQgX2NydjtcbiAgICBpZiAoY3J2ID09PSBDT1NFQ1JWLkVEMjU1MTkpIHtcbiAgICAgICAgX2NydiA9ICdFZDI1NTE5JztcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihgVW5leHBlY3RlZCBDT1NFIGNydiB2YWx1ZSBvZiAke2Nydn0gKE9LUClgKTtcbiAgICB9XG4gICAgY29uc3Qga2V5RGF0YSA9IHtcbiAgICAgICAga3R5OiAnT0tQJyxcbiAgICAgICAgY3J2OiBfY3J2LFxuICAgICAgICBhbGc6ICdFZERTQScsXG4gICAgICAgIHg6IGlzb0Jhc2U2NFVSTC5mcm9tQnVmZmVyKHgpLFxuICAgICAgICBleHQ6IGZhbHNlLFxuICAgIH07XG4gICAgY29uc3Qga2V5QWxnb3JpdGhtID0ge1xuICAgICAgICBuYW1lOiBfY3J2LFxuICAgICAgICBuYW1lZEN1cnZlOiBfY3J2LFxuICAgIH07XG4gICAgY29uc3Qga2V5ID0gYXdhaXQgaW1wb3J0S2V5KHtcbiAgICAgICAga2V5RGF0YSxcbiAgICAgICAgYWxnb3JpdGhtOiBrZXlBbGdvcml0aG0sXG4gICAgfSk7XG4gICAgY29uc3QgdmVyaWZ5QWxnb3JpdGhtID0ge1xuICAgICAgICBuYW1lOiBfY3J2LFxuICAgIH07XG4gICAgcmV0dXJuIFdlYkNyeXB0by5zdWJ0bGUudmVyaWZ5KHZlcmlmeUFsZ29yaXRobSwga2V5LCBzaWduYXR1cmUsIGRhdGEpO1xufVxuIl0sIm5hbWVzIjpbIkNPU0VDUlYiLCJDT1NFS0VZUyIsImlzQ09TRUFsZyIsImlzb0Jhc2U2NFVSTCIsImltcG9ydEtleSIsImdldFdlYkNyeXB0byIsInZlcmlmeU9LUCIsIm9wdHMiLCJjb3NlUHVibGljS2V5Iiwic2lnbmF0dXJlIiwiZGF0YSIsIldlYkNyeXB0byIsImFsZyIsImdldCIsImNydiIsIngiLCJFcnJvciIsIl9jcnYiLCJFRDI1NTE5Iiwia2V5RGF0YSIsImt0eSIsImZyb21CdWZmZXIiLCJleHQiLCJrZXlBbGdvcml0aG0iLCJuYW1lIiwibmFtZWRDdXJ2ZSIsImtleSIsImFsZ29yaXRobSIsInZlcmlmeUFsZ29yaXRobSIsInN1YnRsZSIsInZlcmlmeSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/isoCrypto/verifyOKP.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/isoCrypto/verifyRSA.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@simplewebauthn/server/esm/helpers/iso/isoCrypto/verifyRSA.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   verifyRSA: () => (/* binding */ verifyRSA)\n/* harmony export */ });\n/* harmony import */ var _cose_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../cose.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/cose.js\");\n/* harmony import */ var _mapCoseAlgToWebCryptoAlg_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./mapCoseAlgToWebCryptoAlg.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/isoCrypto/mapCoseAlgToWebCryptoAlg.js\");\n/* harmony import */ var _importKey_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./importKey.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/isoCrypto/importKey.js\");\n/* harmony import */ var _index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../index.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/index.js\");\n/* harmony import */ var _mapCoseAlgToWebCryptoKeyAlgName_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./mapCoseAlgToWebCryptoKeyAlgName.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/isoCrypto/mapCoseAlgToWebCryptoKeyAlgName.js\");\n/* harmony import */ var _getWebCrypto_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./getWebCrypto.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/isoCrypto/getWebCrypto.js\");\n\n\n\n\n\n\n/**\n * Verify a signature using an RSA public key\n */ async function verifyRSA(opts) {\n    const { cosePublicKey, signature, data, shaHashOverride } = opts;\n    const WebCrypto = await (0,_getWebCrypto_js__WEBPACK_IMPORTED_MODULE_5__.getWebCrypto)();\n    const alg = cosePublicKey.get(_cose_js__WEBPACK_IMPORTED_MODULE_0__.COSEKEYS.alg);\n    const n = cosePublicKey.get(_cose_js__WEBPACK_IMPORTED_MODULE_0__.COSEKEYS.n);\n    const e = cosePublicKey.get(_cose_js__WEBPACK_IMPORTED_MODULE_0__.COSEKEYS.e);\n    if (!alg) {\n        throw new Error(\"Public key was missing alg (RSA)\");\n    }\n    if (!(0,_cose_js__WEBPACK_IMPORTED_MODULE_0__.isCOSEAlg)(alg)) {\n        throw new Error(`Public key had invalid alg ${alg} (RSA)`);\n    }\n    if (!n) {\n        throw new Error(\"Public key was missing n (RSA)\");\n    }\n    if (!e) {\n        throw new Error(\"Public key was missing e (RSA)\");\n    }\n    const keyData = {\n        kty: \"RSA\",\n        alg: \"\",\n        n: _index_js__WEBPACK_IMPORTED_MODULE_3__.isoBase64URL.fromBuffer(n),\n        e: _index_js__WEBPACK_IMPORTED_MODULE_3__.isoBase64URL.fromBuffer(e),\n        ext: false\n    };\n    const keyAlgorithm = {\n        name: (0,_mapCoseAlgToWebCryptoKeyAlgName_js__WEBPACK_IMPORTED_MODULE_4__.mapCoseAlgToWebCryptoKeyAlgName)(alg),\n        hash: {\n            name: (0,_mapCoseAlgToWebCryptoAlg_js__WEBPACK_IMPORTED_MODULE_1__.mapCoseAlgToWebCryptoAlg)(alg)\n        }\n    };\n    const verifyAlgorithm = {\n        name: (0,_mapCoseAlgToWebCryptoKeyAlgName_js__WEBPACK_IMPORTED_MODULE_4__.mapCoseAlgToWebCryptoKeyAlgName)(alg)\n    };\n    if (shaHashOverride) {\n        keyAlgorithm.hash.name = (0,_mapCoseAlgToWebCryptoAlg_js__WEBPACK_IMPORTED_MODULE_1__.mapCoseAlgToWebCryptoAlg)(shaHashOverride);\n    }\n    if (keyAlgorithm.name === \"RSASSA-PKCS1-v1_5\") {\n        if (keyAlgorithm.hash.name === \"SHA-256\") {\n            keyData.alg = \"RS256\";\n        } else if (keyAlgorithm.hash.name === \"SHA-384\") {\n            keyData.alg = \"RS384\";\n        } else if (keyAlgorithm.hash.name === \"SHA-512\") {\n            keyData.alg = \"RS512\";\n        } else if (keyAlgorithm.hash.name === \"SHA-1\") {\n            keyData.alg = \"RS1\";\n        }\n    } else if (keyAlgorithm.name === \"RSA-PSS\") {\n        /**\n         * salt length. The default value is 20 but the convention is to use hLen, the length of the\n         * output of the hash function in bytes. A salt length of zero is permitted and will result in\n         * a deterministic signature value. The actual salt length used can be determined from the\n         * signature value.\n         *\n         * From https://www.cryptosys.net/pki/manpki/pki_rsaschemes.html\n         */ let saltLength = 0;\n        if (keyAlgorithm.hash.name === \"SHA-256\") {\n            keyData.alg = \"PS256\";\n            saltLength = 32; // 256 bits => 32 bytes\n        } else if (keyAlgorithm.hash.name === \"SHA-384\") {\n            keyData.alg = \"PS384\";\n            saltLength = 48; // 384 bits => 48 bytes\n        } else if (keyAlgorithm.hash.name === \"SHA-512\") {\n            keyData.alg = \"PS512\";\n            saltLength = 64; // 512 bits => 64 bytes\n        }\n        verifyAlgorithm.saltLength = saltLength;\n    } else {\n        throw new Error(`Unexpected RSA key algorithm ${alg} (${keyAlgorithm.name})`);\n    }\n    const key = await (0,_importKey_js__WEBPACK_IMPORTED_MODULE_2__.importKey)({\n        keyData,\n        algorithm: keyAlgorithm\n    });\n    return WebCrypto.subtle.verify(verifyAlgorithm, key, signature, data);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNpbXBsZXdlYmF1dGhuL3NlcnZlci9lc20vaGVscGVycy9pc28vaXNvQ3J5cHRvL3ZlcmlmeVJTQS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQW9EO0FBQ3FCO0FBQzlCO0FBQ0E7QUFDNEM7QUFDdEM7QUFDakQ7O0NBRUMsR0FDTSxlQUFlTyxVQUFVQyxJQUFJO0lBQ2hDLE1BQU0sRUFBRUMsYUFBYSxFQUFFQyxTQUFTLEVBQUVDLElBQUksRUFBRUMsZUFBZSxFQUFFLEdBQUdKO0lBQzVELE1BQU1LLFlBQVksTUFBTVAsOERBQVlBO0lBQ3BDLE1BQU1RLE1BQU1MLGNBQWNNLEdBQUcsQ0FBQ2YsOENBQVFBLENBQUNjLEdBQUc7SUFDMUMsTUFBTUUsSUFBSVAsY0FBY00sR0FBRyxDQUFDZiw4Q0FBUUEsQ0FBQ2dCLENBQUM7SUFDdEMsTUFBTUMsSUFBSVIsY0FBY00sR0FBRyxDQUFDZiw4Q0FBUUEsQ0FBQ2lCLENBQUM7SUFDdEMsSUFBSSxDQUFDSCxLQUFLO1FBQ04sTUFBTSxJQUFJSSxNQUFNO0lBQ3BCO0lBQ0EsSUFBSSxDQUFDakIsbURBQVNBLENBQUNhLE1BQU07UUFDakIsTUFBTSxJQUFJSSxNQUFNLENBQUMsMkJBQTJCLEVBQUVKLElBQUksTUFBTSxDQUFDO0lBQzdEO0lBQ0EsSUFBSSxDQUFDRSxHQUFHO1FBQ0osTUFBTSxJQUFJRSxNQUFNO0lBQ3BCO0lBQ0EsSUFBSSxDQUFDRCxHQUFHO1FBQ0osTUFBTSxJQUFJQyxNQUFNO0lBQ3BCO0lBQ0EsTUFBTUMsVUFBVTtRQUNaQyxLQUFLO1FBQ0xOLEtBQUs7UUFDTEUsR0FBR1osOERBQXVCLENBQUNZO1FBQzNCQyxHQUFHYiw4REFBdUIsQ0FBQ2E7UUFDM0JLLEtBQUs7SUFDVDtJQUNBLE1BQU1DLGVBQWU7UUFDakJDLE1BQU1uQixvR0FBK0JBLENBQUNTO1FBQ3RDVyxNQUFNO1lBQUVELE1BQU10QixzRkFBd0JBLENBQUNZO1FBQUs7SUFDaEQ7SUFDQSxNQUFNWSxrQkFBa0I7UUFDcEJGLE1BQU1uQixvR0FBK0JBLENBQUNTO0lBQzFDO0lBQ0EsSUFBSUYsaUJBQWlCO1FBQ2pCVyxhQUFhRSxJQUFJLENBQUNELElBQUksR0FBR3RCLHNGQUF3QkEsQ0FBQ1U7SUFDdEQ7SUFDQSxJQUFJVyxhQUFhQyxJQUFJLEtBQUsscUJBQXFCO1FBQzNDLElBQUlELGFBQWFFLElBQUksQ0FBQ0QsSUFBSSxLQUFLLFdBQVc7WUFDdENMLFFBQVFMLEdBQUcsR0FBRztRQUNsQixPQUNLLElBQUlTLGFBQWFFLElBQUksQ0FBQ0QsSUFBSSxLQUFLLFdBQVc7WUFDM0NMLFFBQVFMLEdBQUcsR0FBRztRQUNsQixPQUNLLElBQUlTLGFBQWFFLElBQUksQ0FBQ0QsSUFBSSxLQUFLLFdBQVc7WUFDM0NMLFFBQVFMLEdBQUcsR0FBRztRQUNsQixPQUNLLElBQUlTLGFBQWFFLElBQUksQ0FBQ0QsSUFBSSxLQUFLLFNBQVM7WUFDekNMLFFBQVFMLEdBQUcsR0FBRztRQUNsQjtJQUNKLE9BQ0ssSUFBSVMsYUFBYUMsSUFBSSxLQUFLLFdBQVc7UUFDdEM7Ozs7Ozs7U0FPQyxHQUNELElBQUlHLGFBQWE7UUFDakIsSUFBSUosYUFBYUUsSUFBSSxDQUFDRCxJQUFJLEtBQUssV0FBVztZQUN0Q0wsUUFBUUwsR0FBRyxHQUFHO1lBQ2RhLGFBQWEsSUFBSSx1QkFBdUI7UUFDNUMsT0FDSyxJQUFJSixhQUFhRSxJQUFJLENBQUNELElBQUksS0FBSyxXQUFXO1lBQzNDTCxRQUFRTCxHQUFHLEdBQUc7WUFDZGEsYUFBYSxJQUFJLHVCQUF1QjtRQUM1QyxPQUNLLElBQUlKLGFBQWFFLElBQUksQ0FBQ0QsSUFBSSxLQUFLLFdBQVc7WUFDM0NMLFFBQVFMLEdBQUcsR0FBRztZQUNkYSxhQUFhLElBQUksdUJBQXVCO1FBQzVDO1FBQ0FELGdCQUFnQkMsVUFBVSxHQUFHQTtJQUNqQyxPQUNLO1FBQ0QsTUFBTSxJQUFJVCxNQUFNLENBQUMsNkJBQTZCLEVBQUVKLElBQUksRUFBRSxFQUFFUyxhQUFhQyxJQUFJLENBQUMsQ0FBQyxDQUFDO0lBQ2hGO0lBQ0EsTUFBTUksTUFBTSxNQUFNekIsd0RBQVNBLENBQUM7UUFDeEJnQjtRQUNBVSxXQUFXTjtJQUNmO0lBQ0EsT0FBT1YsVUFBVWlCLE1BQU0sQ0FBQ0MsTUFBTSxDQUFDTCxpQkFBaUJFLEtBQUtsQixXQUFXQztBQUNwRSIsInNvdXJjZXMiOlsid2VicGFjazovL2NhbXB1cy1taW5kLy4vbm9kZV9tb2R1bGVzL0BzaW1wbGV3ZWJhdXRobi9zZXJ2ZXIvZXNtL2hlbHBlcnMvaXNvL2lzb0NyeXB0by92ZXJpZnlSU0EuanM/NWJkZSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDT1NFS0VZUywgaXNDT1NFQWxnIH0gZnJvbSAnLi4vLi4vY29zZS5qcyc7XG5pbXBvcnQgeyBtYXBDb3NlQWxnVG9XZWJDcnlwdG9BbGcgfSBmcm9tICcuL21hcENvc2VBbGdUb1dlYkNyeXB0b0FsZy5qcyc7XG5pbXBvcnQgeyBpbXBvcnRLZXkgfSBmcm9tICcuL2ltcG9ydEtleS5qcyc7XG5pbXBvcnQgeyBpc29CYXNlNjRVUkwgfSBmcm9tICcuLi9pbmRleC5qcyc7XG5pbXBvcnQgeyBtYXBDb3NlQWxnVG9XZWJDcnlwdG9LZXlBbGdOYW1lIH0gZnJvbSAnLi9tYXBDb3NlQWxnVG9XZWJDcnlwdG9LZXlBbGdOYW1lLmpzJztcbmltcG9ydCB7IGdldFdlYkNyeXB0byB9IGZyb20gJy4vZ2V0V2ViQ3J5cHRvLmpzJztcbi8qKlxuICogVmVyaWZ5IGEgc2lnbmF0dXJlIHVzaW5nIGFuIFJTQSBwdWJsaWMga2V5XG4gKi9cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiB2ZXJpZnlSU0Eob3B0cykge1xuICAgIGNvbnN0IHsgY29zZVB1YmxpY0tleSwgc2lnbmF0dXJlLCBkYXRhLCBzaGFIYXNoT3ZlcnJpZGUgfSA9IG9wdHM7XG4gICAgY29uc3QgV2ViQ3J5cHRvID0gYXdhaXQgZ2V0V2ViQ3J5cHRvKCk7XG4gICAgY29uc3QgYWxnID0gY29zZVB1YmxpY0tleS5nZXQoQ09TRUtFWVMuYWxnKTtcbiAgICBjb25zdCBuID0gY29zZVB1YmxpY0tleS5nZXQoQ09TRUtFWVMubik7XG4gICAgY29uc3QgZSA9IGNvc2VQdWJsaWNLZXkuZ2V0KENPU0VLRVlTLmUpO1xuICAgIGlmICghYWxnKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcignUHVibGljIGtleSB3YXMgbWlzc2luZyBhbGcgKFJTQSknKTtcbiAgICB9XG4gICAgaWYgKCFpc0NPU0VBbGcoYWxnKSkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYFB1YmxpYyBrZXkgaGFkIGludmFsaWQgYWxnICR7YWxnfSAoUlNBKWApO1xuICAgIH1cbiAgICBpZiAoIW4pIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdQdWJsaWMga2V5IHdhcyBtaXNzaW5nIG4gKFJTQSknKTtcbiAgICB9XG4gICAgaWYgKCFlKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcignUHVibGljIGtleSB3YXMgbWlzc2luZyBlIChSU0EpJyk7XG4gICAgfVxuICAgIGNvbnN0IGtleURhdGEgPSB7XG4gICAgICAgIGt0eTogJ1JTQScsXG4gICAgICAgIGFsZzogJycsXG4gICAgICAgIG46IGlzb0Jhc2U2NFVSTC5mcm9tQnVmZmVyKG4pLFxuICAgICAgICBlOiBpc29CYXNlNjRVUkwuZnJvbUJ1ZmZlcihlKSxcbiAgICAgICAgZXh0OiBmYWxzZSxcbiAgICB9O1xuICAgIGNvbnN0IGtleUFsZ29yaXRobSA9IHtcbiAgICAgICAgbmFtZTogbWFwQ29zZUFsZ1RvV2ViQ3J5cHRvS2V5QWxnTmFtZShhbGcpLFxuICAgICAgICBoYXNoOiB7IG5hbWU6IG1hcENvc2VBbGdUb1dlYkNyeXB0b0FsZyhhbGcpIH0sXG4gICAgfTtcbiAgICBjb25zdCB2ZXJpZnlBbGdvcml0aG0gPSB7XG4gICAgICAgIG5hbWU6IG1hcENvc2VBbGdUb1dlYkNyeXB0b0tleUFsZ05hbWUoYWxnKSxcbiAgICB9O1xuICAgIGlmIChzaGFIYXNoT3ZlcnJpZGUpIHtcbiAgICAgICAga2V5QWxnb3JpdGhtLmhhc2gubmFtZSA9IG1hcENvc2VBbGdUb1dlYkNyeXB0b0FsZyhzaGFIYXNoT3ZlcnJpZGUpO1xuICAgIH1cbiAgICBpZiAoa2V5QWxnb3JpdGhtLm5hbWUgPT09ICdSU0FTU0EtUEtDUzEtdjFfNScpIHtcbiAgICAgICAgaWYgKGtleUFsZ29yaXRobS5oYXNoLm5hbWUgPT09ICdTSEEtMjU2Jykge1xuICAgICAgICAgICAga2V5RGF0YS5hbGcgPSAnUlMyNTYnO1xuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYgKGtleUFsZ29yaXRobS5oYXNoLm5hbWUgPT09ICdTSEEtMzg0Jykge1xuICAgICAgICAgICAga2V5RGF0YS5hbGcgPSAnUlMzODQnO1xuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYgKGtleUFsZ29yaXRobS5oYXNoLm5hbWUgPT09ICdTSEEtNTEyJykge1xuICAgICAgICAgICAga2V5RGF0YS5hbGcgPSAnUlM1MTInO1xuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYgKGtleUFsZ29yaXRobS5oYXNoLm5hbWUgPT09ICdTSEEtMScpIHtcbiAgICAgICAgICAgIGtleURhdGEuYWxnID0gJ1JTMSc7XG4gICAgICAgIH1cbiAgICB9XG4gICAgZWxzZSBpZiAoa2V5QWxnb3JpdGhtLm5hbWUgPT09ICdSU0EtUFNTJykge1xuICAgICAgICAvKipcbiAgICAgICAgICogc2FsdCBsZW5ndGguIFRoZSBkZWZhdWx0IHZhbHVlIGlzIDIwIGJ1dCB0aGUgY29udmVudGlvbiBpcyB0byB1c2UgaExlbiwgdGhlIGxlbmd0aCBvZiB0aGVcbiAgICAgICAgICogb3V0cHV0IG9mIHRoZSBoYXNoIGZ1bmN0aW9uIGluIGJ5dGVzLiBBIHNhbHQgbGVuZ3RoIG9mIHplcm8gaXMgcGVybWl0dGVkIGFuZCB3aWxsIHJlc3VsdCBpblxuICAgICAgICAgKiBhIGRldGVybWluaXN0aWMgc2lnbmF0dXJlIHZhbHVlLiBUaGUgYWN0dWFsIHNhbHQgbGVuZ3RoIHVzZWQgY2FuIGJlIGRldGVybWluZWQgZnJvbSB0aGVcbiAgICAgICAgICogc2lnbmF0dXJlIHZhbHVlLlxuICAgICAgICAgKlxuICAgICAgICAgKiBGcm9tIGh0dHBzOi8vd3d3LmNyeXB0b3N5cy5uZXQvcGtpL21hbnBraS9wa2lfcnNhc2NoZW1lcy5odG1sXG4gICAgICAgICAqL1xuICAgICAgICBsZXQgc2FsdExlbmd0aCA9IDA7XG4gICAgICAgIGlmIChrZXlBbGdvcml0aG0uaGFzaC5uYW1lID09PSAnU0hBLTI1NicpIHtcbiAgICAgICAgICAgIGtleURhdGEuYWxnID0gJ1BTMjU2JztcbiAgICAgICAgICAgIHNhbHRMZW5ndGggPSAzMjsgLy8gMjU2IGJpdHMgPT4gMzIgYnl0ZXNcbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmIChrZXlBbGdvcml0aG0uaGFzaC5uYW1lID09PSAnU0hBLTM4NCcpIHtcbiAgICAgICAgICAgIGtleURhdGEuYWxnID0gJ1BTMzg0JztcbiAgICAgICAgICAgIHNhbHRMZW5ndGggPSA0ODsgLy8gMzg0IGJpdHMgPT4gNDggYnl0ZXNcbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmIChrZXlBbGdvcml0aG0uaGFzaC5uYW1lID09PSAnU0hBLTUxMicpIHtcbiAgICAgICAgICAgIGtleURhdGEuYWxnID0gJ1BTNTEyJztcbiAgICAgICAgICAgIHNhbHRMZW5ndGggPSA2NDsgLy8gNTEyIGJpdHMgPT4gNjQgYnl0ZXNcbiAgICAgICAgfVxuICAgICAgICB2ZXJpZnlBbGdvcml0aG0uc2FsdExlbmd0aCA9IHNhbHRMZW5ndGg7XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYFVuZXhwZWN0ZWQgUlNBIGtleSBhbGdvcml0aG0gJHthbGd9ICgke2tleUFsZ29yaXRobS5uYW1lfSlgKTtcbiAgICB9XG4gICAgY29uc3Qga2V5ID0gYXdhaXQgaW1wb3J0S2V5KHtcbiAgICAgICAga2V5RGF0YSxcbiAgICAgICAgYWxnb3JpdGhtOiBrZXlBbGdvcml0aG0sXG4gICAgfSk7XG4gICAgcmV0dXJuIFdlYkNyeXB0by5zdWJ0bGUudmVyaWZ5KHZlcmlmeUFsZ29yaXRobSwga2V5LCBzaWduYXR1cmUsIGRhdGEpO1xufVxuIl0sIm5hbWVzIjpbIkNPU0VLRVlTIiwiaXNDT1NFQWxnIiwibWFwQ29zZUFsZ1RvV2ViQ3J5cHRvQWxnIiwiaW1wb3J0S2V5IiwiaXNvQmFzZTY0VVJMIiwibWFwQ29zZUFsZ1RvV2ViQ3J5cHRvS2V5QWxnTmFtZSIsImdldFdlYkNyeXB0byIsInZlcmlmeVJTQSIsIm9wdHMiLCJjb3NlUHVibGljS2V5Iiwic2lnbmF0dXJlIiwiZGF0YSIsInNoYUhhc2hPdmVycmlkZSIsIldlYkNyeXB0byIsImFsZyIsImdldCIsIm4iLCJlIiwiRXJyb3IiLCJrZXlEYXRhIiwia3R5IiwiZnJvbUJ1ZmZlciIsImV4dCIsImtleUFsZ29yaXRobSIsIm5hbWUiLCJoYXNoIiwidmVyaWZ5QWxnb3JpdGhtIiwic2FsdExlbmd0aCIsImtleSIsImFsZ29yaXRobSIsInN1YnRsZSIsInZlcmlmeSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/isoCrypto/verifyRSA.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/isoUint8Array.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@simplewebauthn/server/esm/helpers/iso/isoUint8Array.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   areEqual: () => (/* binding */ areEqual),\n/* harmony export */   concat: () => (/* binding */ concat),\n/* harmony export */   fromASCIIString: () => (/* binding */ fromASCIIString),\n/* harmony export */   fromHex: () => (/* binding */ fromHex),\n/* harmony export */   fromUTF8String: () => (/* binding */ fromUTF8String),\n/* harmony export */   toDataView: () => (/* binding */ toDataView),\n/* harmony export */   toHex: () => (/* binding */ toHex),\n/* harmony export */   toUTF8String: () => (/* binding */ toUTF8String)\n/* harmony export */ });\n/**\n * Make sure two Uint8Arrays are deeply equivalent\n */ function areEqual(array1, array2) {\n    if (array1.length != array2.length) {\n        return false;\n    }\n    return array1.every((val, i)=>val === array2[i]);\n}\n/**\n * Convert a Uint8Array to Hexadecimal.\n *\n * A replacement for `Buffer.toString('hex')`\n */ function toHex(array) {\n    const hexParts = Array.from(array, (i)=>i.toString(16).padStart(2, \"0\"));\n    // adce000235bcc60a648b0b25f1f05503\n    return hexParts.join(\"\");\n}\n/**\n * Convert a hexadecimal string to isoUint8Array.\n *\n * A replacement for `Buffer.from('...', 'hex')`\n */ function fromHex(hex) {\n    if (!hex) {\n        return Uint8Array.from([]);\n    }\n    const isValid = hex.length !== 0 && hex.length % 2 === 0 && !/[^a-fA-F0-9]/u.test(hex);\n    if (!isValid) {\n        throw new Error(\"Invalid hex string\");\n    }\n    const byteStrings = hex.match(/.{1,2}/g) ?? [];\n    return Uint8Array.from(byteStrings.map((byte)=>parseInt(byte, 16)));\n}\n/**\n * Combine multiple Uint8Arrays into a single Uint8Array\n */ function concat(arrays) {\n    let pointer = 0;\n    const totalLength = arrays.reduce((prev, curr)=>prev + curr.length, 0);\n    const toReturn = new Uint8Array(totalLength);\n    arrays.forEach((arr)=>{\n        toReturn.set(arr, pointer);\n        pointer += arr.length;\n    });\n    return toReturn;\n}\n/**\n * Convert bytes into a UTF-8 string\n */ function toUTF8String(array) {\n    const decoder = new globalThis.TextDecoder(\"utf-8\");\n    return decoder.decode(array);\n}\n/**\n * Convert a UTF-8 string back into bytes\n */ function fromUTF8String(utf8String) {\n    const encoder = new globalThis.TextEncoder();\n    return encoder.encode(utf8String);\n}\n/**\n * Convert an ASCII string to Uint8Array\n */ function fromASCIIString(value) {\n    return Uint8Array.from(value.split(\"\").map((x)=>x.charCodeAt(0)));\n}\n/**\n * Prepare a DataView we can slice our way around in as we parse the bytes in a Uint8Array\n */ function toDataView(array) {\n    return new DataView(array.buffer, array.byteOffset, array.length);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNpbXBsZXdlYmF1dGhuL3NlcnZlci9lc20vaGVscGVycy9pc28vaXNvVWludDhBcnJheS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQUFBOztDQUVDLEdBQ00sU0FBU0EsU0FBU0MsTUFBTSxFQUFFQyxNQUFNO0lBQ25DLElBQUlELE9BQU9FLE1BQU0sSUFBSUQsT0FBT0MsTUFBTSxFQUFFO1FBQ2hDLE9BQU87SUFDWDtJQUNBLE9BQU9GLE9BQU9HLEtBQUssQ0FBQyxDQUFDQyxLQUFLQyxJQUFNRCxRQUFRSCxNQUFNLENBQUNJLEVBQUU7QUFDckQ7QUFDQTs7OztDQUlDLEdBQ00sU0FBU0MsTUFBTUMsS0FBSztJQUN2QixNQUFNQyxXQUFXQyxNQUFNQyxJQUFJLENBQUNILE9BQU8sQ0FBQ0YsSUFBTUEsRUFBRU0sUUFBUSxDQUFDLElBQUlDLFFBQVEsQ0FBQyxHQUFHO0lBQ3JFLG1DQUFtQztJQUNuQyxPQUFPSixTQUFTSyxJQUFJLENBQUM7QUFDekI7QUFDQTs7OztDQUlDLEdBQ00sU0FBU0MsUUFBUUMsR0FBRztJQUN2QixJQUFJLENBQUNBLEtBQUs7UUFDTixPQUFPQyxXQUFXTixJQUFJLENBQUMsRUFBRTtJQUM3QjtJQUNBLE1BQU1PLFVBQVVGLElBQUliLE1BQU0sS0FBSyxLQUFLYSxJQUFJYixNQUFNLEdBQUcsTUFBTSxLQUNuRCxDQUFDLGdCQUFnQmdCLElBQUksQ0FBQ0g7SUFDMUIsSUFBSSxDQUFDRSxTQUFTO1FBQ1YsTUFBTSxJQUFJRSxNQUFNO0lBQ3BCO0lBQ0EsTUFBTUMsY0FBY0wsSUFBSU0sS0FBSyxDQUFDLGNBQWMsRUFBRTtJQUM5QyxPQUFPTCxXQUFXTixJQUFJLENBQUNVLFlBQVlFLEdBQUcsQ0FBQyxDQUFDQyxPQUFTQyxTQUFTRCxNQUFNO0FBQ3BFO0FBQ0E7O0NBRUMsR0FDTSxTQUFTRSxPQUFPQyxNQUFNO0lBQ3pCLElBQUlDLFVBQVU7SUFDZCxNQUFNQyxjQUFjRixPQUFPRyxNQUFNLENBQUMsQ0FBQ0MsTUFBTUMsT0FBU0QsT0FBT0MsS0FBSzdCLE1BQU0sRUFBRTtJQUN0RSxNQUFNOEIsV0FBVyxJQUFJaEIsV0FBV1k7SUFDaENGLE9BQU9PLE9BQU8sQ0FBQyxDQUFDQztRQUNaRixTQUFTRyxHQUFHLENBQUNELEtBQUtQO1FBQ2xCQSxXQUFXTyxJQUFJaEMsTUFBTTtJQUN6QjtJQUNBLE9BQU84QjtBQUNYO0FBQ0E7O0NBRUMsR0FDTSxTQUFTSSxhQUFhN0IsS0FBSztJQUM5QixNQUFNOEIsVUFBVSxJQUFJQyxXQUFXQyxXQUFXLENBQUM7SUFDM0MsT0FBT0YsUUFBUUcsTUFBTSxDQUFDakM7QUFDMUI7QUFDQTs7Q0FFQyxHQUNNLFNBQVNrQyxlQUFlQyxVQUFVO0lBQ3JDLE1BQU1DLFVBQVUsSUFBSUwsV0FBV00sV0FBVztJQUMxQyxPQUFPRCxRQUFRRSxNQUFNLENBQUNIO0FBQzFCO0FBQ0E7O0NBRUMsR0FDTSxTQUFTSSxnQkFBZ0JDLEtBQUs7SUFDakMsT0FBTy9CLFdBQVdOLElBQUksQ0FBQ3FDLE1BQU1DLEtBQUssQ0FBQyxJQUFJMUIsR0FBRyxDQUFDLENBQUMyQixJQUFNQSxFQUFFQyxVQUFVLENBQUM7QUFDbkU7QUFDQTs7Q0FFQyxHQUNNLFNBQVNDLFdBQVc1QyxLQUFLO0lBQzVCLE9BQU8sSUFBSTZDLFNBQVM3QyxNQUFNOEMsTUFBTSxFQUFFOUMsTUFBTStDLFVBQVUsRUFBRS9DLE1BQU1MLE1BQU07QUFDcEUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jYW1wdXMtbWluZC8uL25vZGVfbW9kdWxlcy9Ac2ltcGxld2ViYXV0aG4vc2VydmVyL2VzbS9oZWxwZXJzL2lzby9pc29VaW50OEFycmF5LmpzP2ZjZTQiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBNYWtlIHN1cmUgdHdvIFVpbnQ4QXJyYXlzIGFyZSBkZWVwbHkgZXF1aXZhbGVudFxuICovXG5leHBvcnQgZnVuY3Rpb24gYXJlRXF1YWwoYXJyYXkxLCBhcnJheTIpIHtcbiAgICBpZiAoYXJyYXkxLmxlbmd0aCAhPSBhcnJheTIubGVuZ3RoKSB7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gICAgcmV0dXJuIGFycmF5MS5ldmVyeSgodmFsLCBpKSA9PiB2YWwgPT09IGFycmF5MltpXSk7XG59XG4vKipcbiAqIENvbnZlcnQgYSBVaW50OEFycmF5IHRvIEhleGFkZWNpbWFsLlxuICpcbiAqIEEgcmVwbGFjZW1lbnQgZm9yIGBCdWZmZXIudG9TdHJpbmcoJ2hleCcpYFxuICovXG5leHBvcnQgZnVuY3Rpb24gdG9IZXgoYXJyYXkpIHtcbiAgICBjb25zdCBoZXhQYXJ0cyA9IEFycmF5LmZyb20oYXJyYXksIChpKSA9PiBpLnRvU3RyaW5nKDE2KS5wYWRTdGFydCgyLCAnMCcpKTtcbiAgICAvLyBhZGNlMDAwMjM1YmNjNjBhNjQ4YjBiMjVmMWYwNTUwM1xuICAgIHJldHVybiBoZXhQYXJ0cy5qb2luKCcnKTtcbn1cbi8qKlxuICogQ29udmVydCBhIGhleGFkZWNpbWFsIHN0cmluZyB0byBpc29VaW50OEFycmF5LlxuICpcbiAqIEEgcmVwbGFjZW1lbnQgZm9yIGBCdWZmZXIuZnJvbSgnLi4uJywgJ2hleCcpYFxuICovXG5leHBvcnQgZnVuY3Rpb24gZnJvbUhleChoZXgpIHtcbiAgICBpZiAoIWhleCkge1xuICAgICAgICByZXR1cm4gVWludDhBcnJheS5mcm9tKFtdKTtcbiAgICB9XG4gICAgY29uc3QgaXNWYWxpZCA9IGhleC5sZW5ndGggIT09IDAgJiYgaGV4Lmxlbmd0aCAlIDIgPT09IDAgJiZcbiAgICAgICAgIS9bXmEtZkEtRjAtOV0vdS50ZXN0KGhleCk7XG4gICAgaWYgKCFpc1ZhbGlkKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcignSW52YWxpZCBoZXggc3RyaW5nJyk7XG4gICAgfVxuICAgIGNvbnN0IGJ5dGVTdHJpbmdzID0gaGV4Lm1hdGNoKC8uezEsMn0vZykgPz8gW107XG4gICAgcmV0dXJuIFVpbnQ4QXJyYXkuZnJvbShieXRlU3RyaW5ncy5tYXAoKGJ5dGUpID0+IHBhcnNlSW50KGJ5dGUsIDE2KSkpO1xufVxuLyoqXG4gKiBDb21iaW5lIG11bHRpcGxlIFVpbnQ4QXJyYXlzIGludG8gYSBzaW5nbGUgVWludDhBcnJheVxuICovXG5leHBvcnQgZnVuY3Rpb24gY29uY2F0KGFycmF5cykge1xuICAgIGxldCBwb2ludGVyID0gMDtcbiAgICBjb25zdCB0b3RhbExlbmd0aCA9IGFycmF5cy5yZWR1Y2UoKHByZXYsIGN1cnIpID0+IHByZXYgKyBjdXJyLmxlbmd0aCwgMCk7XG4gICAgY29uc3QgdG9SZXR1cm4gPSBuZXcgVWludDhBcnJheSh0b3RhbExlbmd0aCk7XG4gICAgYXJyYXlzLmZvckVhY2goKGFycikgPT4ge1xuICAgICAgICB0b1JldHVybi5zZXQoYXJyLCBwb2ludGVyKTtcbiAgICAgICAgcG9pbnRlciArPSBhcnIubGVuZ3RoO1xuICAgIH0pO1xuICAgIHJldHVybiB0b1JldHVybjtcbn1cbi8qKlxuICogQ29udmVydCBieXRlcyBpbnRvIGEgVVRGLTggc3RyaW5nXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiB0b1VURjhTdHJpbmcoYXJyYXkpIHtcbiAgICBjb25zdCBkZWNvZGVyID0gbmV3IGdsb2JhbFRoaXMuVGV4dERlY29kZXIoJ3V0Zi04Jyk7XG4gICAgcmV0dXJuIGRlY29kZXIuZGVjb2RlKGFycmF5KTtcbn1cbi8qKlxuICogQ29udmVydCBhIFVURi04IHN0cmluZyBiYWNrIGludG8gYnl0ZXNcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGZyb21VVEY4U3RyaW5nKHV0ZjhTdHJpbmcpIHtcbiAgICBjb25zdCBlbmNvZGVyID0gbmV3IGdsb2JhbFRoaXMuVGV4dEVuY29kZXIoKTtcbiAgICByZXR1cm4gZW5jb2Rlci5lbmNvZGUodXRmOFN0cmluZyk7XG59XG4vKipcbiAqIENvbnZlcnQgYW4gQVNDSUkgc3RyaW5nIHRvIFVpbnQ4QXJyYXlcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGZyb21BU0NJSVN0cmluZyh2YWx1ZSkge1xuICAgIHJldHVybiBVaW50OEFycmF5LmZyb20odmFsdWUuc3BsaXQoJycpLm1hcCgoeCkgPT4geC5jaGFyQ29kZUF0KDApKSk7XG59XG4vKipcbiAqIFByZXBhcmUgYSBEYXRhVmlldyB3ZSBjYW4gc2xpY2Ugb3VyIHdheSBhcm91bmQgaW4gYXMgd2UgcGFyc2UgdGhlIGJ5dGVzIGluIGEgVWludDhBcnJheVxuICovXG5leHBvcnQgZnVuY3Rpb24gdG9EYXRhVmlldyhhcnJheSkge1xuICAgIHJldHVybiBuZXcgRGF0YVZpZXcoYXJyYXkuYnVmZmVyLCBhcnJheS5ieXRlT2Zmc2V0LCBhcnJheS5sZW5ndGgpO1xufVxuIl0sIm5hbWVzIjpbImFyZUVxdWFsIiwiYXJyYXkxIiwiYXJyYXkyIiwibGVuZ3RoIiwiZXZlcnkiLCJ2YWwiLCJpIiwidG9IZXgiLCJhcnJheSIsImhleFBhcnRzIiwiQXJyYXkiLCJmcm9tIiwidG9TdHJpbmciLCJwYWRTdGFydCIsImpvaW4iLCJmcm9tSGV4IiwiaGV4IiwiVWludDhBcnJheSIsImlzVmFsaWQiLCJ0ZXN0IiwiRXJyb3IiLCJieXRlU3RyaW5ncyIsIm1hdGNoIiwibWFwIiwiYnl0ZSIsInBhcnNlSW50IiwiY29uY2F0IiwiYXJyYXlzIiwicG9pbnRlciIsInRvdGFsTGVuZ3RoIiwicmVkdWNlIiwicHJldiIsImN1cnIiLCJ0b1JldHVybiIsImZvckVhY2giLCJhcnIiLCJzZXQiLCJ0b1VURjhTdHJpbmciLCJkZWNvZGVyIiwiZ2xvYmFsVGhpcyIsIlRleHREZWNvZGVyIiwiZGVjb2RlIiwiZnJvbVVURjhTdHJpbmciLCJ1dGY4U3RyaW5nIiwiZW5jb2RlciIsIlRleHRFbmNvZGVyIiwiZW5jb2RlIiwiZnJvbUFTQ0lJU3RyaW5nIiwidmFsdWUiLCJzcGxpdCIsIngiLCJjaGFyQ29kZUF0IiwidG9EYXRhVmlldyIsIkRhdGFWaWV3IiwiYnVmZmVyIiwiYnl0ZU9mZnNldCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/isoUint8Array.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/logging.js":
/*!********************************************************************!*\
  !*** ./node_modules/@simplewebauthn/server/esm/helpers/logging.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getLogger: () => (/* binding */ getLogger)\n/* harmony export */ });\n// import { debug, Debugger } from '../deps.ts';\n// const defaultLogger = debug('SimpleWebAuthn');\n/**\n * Generate an instance of a `debug` logger that extends off of the \"simplewebauthn\" namespace for\n * consistent naming.\n *\n * See https://www.npmjs.com/package/debug for information on how to control logging output when\n * using @simplewebauthn/server\n *\n * Example:\n *\n * ```\n * const log = getLogger('mds');\n * log('hello'); // simplewebauthn:mds hello +0ms\n * ```\n */ function getLogger(_name) {\n    // This is a noop for now while I search for a better debug logger technique\n    return (_message, ..._rest)=>{};\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNpbXBsZXdlYmF1dGhuL3NlcnZlci9lc20vaGVscGVycy9sb2dnaW5nLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSxnREFBZ0Q7QUFDaEQsaURBQWlEO0FBQ2pEOzs7Ozs7Ozs7Ozs7O0NBYUMsR0FDTSxTQUFTQSxVQUFVQyxLQUFLO0lBQzNCLDRFQUE0RTtJQUM1RSxPQUFPLENBQUNDLFVBQVUsR0FBR0MsU0FBWTtBQUNyQyIsInNvdXJjZXMiOlsid2VicGFjazovL2NhbXB1cy1taW5kLy4vbm9kZV9tb2R1bGVzL0BzaW1wbGV3ZWJhdXRobi9zZXJ2ZXIvZXNtL2hlbHBlcnMvbG9nZ2luZy5qcz8yNThmIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIGltcG9ydCB7IGRlYnVnLCBEZWJ1Z2dlciB9IGZyb20gJy4uL2RlcHMudHMnO1xuLy8gY29uc3QgZGVmYXVsdExvZ2dlciA9IGRlYnVnKCdTaW1wbGVXZWJBdXRobicpO1xuLyoqXG4gKiBHZW5lcmF0ZSBhbiBpbnN0YW5jZSBvZiBhIGBkZWJ1Z2AgbG9nZ2VyIHRoYXQgZXh0ZW5kcyBvZmYgb2YgdGhlIFwic2ltcGxld2ViYXV0aG5cIiBuYW1lc3BhY2UgZm9yXG4gKiBjb25zaXN0ZW50IG5hbWluZy5cbiAqXG4gKiBTZWUgaHR0cHM6Ly93d3cubnBtanMuY29tL3BhY2thZ2UvZGVidWcgZm9yIGluZm9ybWF0aW9uIG9uIGhvdyB0byBjb250cm9sIGxvZ2dpbmcgb3V0cHV0IHdoZW5cbiAqIHVzaW5nIEBzaW1wbGV3ZWJhdXRobi9zZXJ2ZXJcbiAqXG4gKiBFeGFtcGxlOlxuICpcbiAqIGBgYFxuICogY29uc3QgbG9nID0gZ2V0TG9nZ2VyKCdtZHMnKTtcbiAqIGxvZygnaGVsbG8nKTsgLy8gc2ltcGxld2ViYXV0aG46bWRzIGhlbGxvICswbXNcbiAqIGBgYFxuICovXG5leHBvcnQgZnVuY3Rpb24gZ2V0TG9nZ2VyKF9uYW1lKSB7XG4gICAgLy8gVGhpcyBpcyBhIG5vb3AgZm9yIG5vdyB3aGlsZSBJIHNlYXJjaCBmb3IgYSBiZXR0ZXIgZGVidWcgbG9nZ2VyIHRlY2huaXF1ZVxuICAgIHJldHVybiAoX21lc3NhZ2UsIC4uLl9yZXN0KSA9PiB7IH07XG59XG4iXSwibmFtZXMiOlsiZ2V0TG9nZ2VyIiwiX25hbWUiLCJfbWVzc2FnZSIsIl9yZXN0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/logging.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/mapX509SignatureAlgToCOSEAlg.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@simplewebauthn/server/esm/helpers/mapX509SignatureAlgToCOSEAlg.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   mapX509SignatureAlgToCOSEAlg: () => (/* binding */ mapX509SignatureAlgToCOSEAlg)\n/* harmony export */ });\n/* harmony import */ var _cose_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./cose.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/cose.js\");\n\n/**\n * Map X.509 signature algorithm OIDs to COSE algorithm IDs\n *\n * - EC2 OIDs: https://oidref.com/1.2.840.10045.4.3\n * - RSA OIDs: https://oidref.com/1.2.840.113549.1.1\n */ function mapX509SignatureAlgToCOSEAlg(signatureAlgorithm) {\n    let alg;\n    if (signatureAlgorithm === \"1.2.840.10045.4.3.2\") {\n        alg = _cose_js__WEBPACK_IMPORTED_MODULE_0__.COSEALG.ES256;\n    } else if (signatureAlgorithm === \"1.2.840.10045.4.3.3\") {\n        alg = _cose_js__WEBPACK_IMPORTED_MODULE_0__.COSEALG.ES384;\n    } else if (signatureAlgorithm === \"1.2.840.10045.4.3.4\") {\n        alg = _cose_js__WEBPACK_IMPORTED_MODULE_0__.COSEALG.ES512;\n    } else if (signatureAlgorithm === \"1.2.840.113549.1.1.11\") {\n        alg = _cose_js__WEBPACK_IMPORTED_MODULE_0__.COSEALG.RS256;\n    } else if (signatureAlgorithm === \"1.2.840.113549.1.1.12\") {\n        alg = _cose_js__WEBPACK_IMPORTED_MODULE_0__.COSEALG.RS384;\n    } else if (signatureAlgorithm === \"1.2.840.113549.1.1.13\") {\n        alg = _cose_js__WEBPACK_IMPORTED_MODULE_0__.COSEALG.RS512;\n    } else if (signatureAlgorithm === \"1.2.840.113549.1.1.5\") {\n        alg = _cose_js__WEBPACK_IMPORTED_MODULE_0__.COSEALG.RS1;\n    } else {\n        throw new Error(`Unable to map X.509 signature algorithm ${signatureAlgorithm} to a COSE algorithm`);\n    }\n    return alg;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNpbXBsZXdlYmF1dGhuL3NlcnZlci9lc20vaGVscGVycy9tYXBYNTA5U2lnbmF0dXJlQWxnVG9DT1NFQWxnLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQW9DO0FBQ3BDOzs7OztDQUtDLEdBQ00sU0FBU0MsNkJBQTZCQyxrQkFBa0I7SUFDM0QsSUFBSUM7SUFDSixJQUFJRCx1QkFBdUIsdUJBQXVCO1FBQzlDQyxNQUFNSCw2Q0FBT0EsQ0FBQ0ksS0FBSztJQUN2QixPQUNLLElBQUlGLHVCQUF1Qix1QkFBdUI7UUFDbkRDLE1BQU1ILDZDQUFPQSxDQUFDSyxLQUFLO0lBQ3ZCLE9BQ0ssSUFBSUgsdUJBQXVCLHVCQUF1QjtRQUNuREMsTUFBTUgsNkNBQU9BLENBQUNNLEtBQUs7SUFDdkIsT0FDSyxJQUFJSix1QkFBdUIseUJBQXlCO1FBQ3JEQyxNQUFNSCw2Q0FBT0EsQ0FBQ08sS0FBSztJQUN2QixPQUNLLElBQUlMLHVCQUF1Qix5QkFBeUI7UUFDckRDLE1BQU1ILDZDQUFPQSxDQUFDUSxLQUFLO0lBQ3ZCLE9BQ0ssSUFBSU4sdUJBQXVCLHlCQUF5QjtRQUNyREMsTUFBTUgsNkNBQU9BLENBQUNTLEtBQUs7SUFDdkIsT0FDSyxJQUFJUCx1QkFBdUIsd0JBQXdCO1FBQ3BEQyxNQUFNSCw2Q0FBT0EsQ0FBQ1UsR0FBRztJQUNyQixPQUNLO1FBQ0QsTUFBTSxJQUFJQyxNQUFNLENBQUMsd0NBQXdDLEVBQUVULG1CQUFtQixvQkFBb0IsQ0FBQztJQUN2RztJQUNBLE9BQU9DO0FBQ1giLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jYW1wdXMtbWluZC8uL25vZGVfbW9kdWxlcy9Ac2ltcGxld2ViYXV0aG4vc2VydmVyL2VzbS9oZWxwZXJzL21hcFg1MDlTaWduYXR1cmVBbGdUb0NPU0VBbGcuanM/MjRjOCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDT1NFQUxHIH0gZnJvbSAnLi9jb3NlLmpzJztcbi8qKlxuICogTWFwIFguNTA5IHNpZ25hdHVyZSBhbGdvcml0aG0gT0lEcyB0byBDT1NFIGFsZ29yaXRobSBJRHNcbiAqXG4gKiAtIEVDMiBPSURzOiBodHRwczovL29pZHJlZi5jb20vMS4yLjg0MC4xMDA0NS40LjNcbiAqIC0gUlNBIE9JRHM6IGh0dHBzOi8vb2lkcmVmLmNvbS8xLjIuODQwLjExMzU0OS4xLjFcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIG1hcFg1MDlTaWduYXR1cmVBbGdUb0NPU0VBbGcoc2lnbmF0dXJlQWxnb3JpdGhtKSB7XG4gICAgbGV0IGFsZztcbiAgICBpZiAoc2lnbmF0dXJlQWxnb3JpdGhtID09PSAnMS4yLjg0MC4xMDA0NS40LjMuMicpIHtcbiAgICAgICAgYWxnID0gQ09TRUFMRy5FUzI1NjtcbiAgICB9XG4gICAgZWxzZSBpZiAoc2lnbmF0dXJlQWxnb3JpdGhtID09PSAnMS4yLjg0MC4xMDA0NS40LjMuMycpIHtcbiAgICAgICAgYWxnID0gQ09TRUFMRy5FUzM4NDtcbiAgICB9XG4gICAgZWxzZSBpZiAoc2lnbmF0dXJlQWxnb3JpdGhtID09PSAnMS4yLjg0MC4xMDA0NS40LjMuNCcpIHtcbiAgICAgICAgYWxnID0gQ09TRUFMRy5FUzUxMjtcbiAgICB9XG4gICAgZWxzZSBpZiAoc2lnbmF0dXJlQWxnb3JpdGhtID09PSAnMS4yLjg0MC4xMTM1NDkuMS4xLjExJykge1xuICAgICAgICBhbGcgPSBDT1NFQUxHLlJTMjU2O1xuICAgIH1cbiAgICBlbHNlIGlmIChzaWduYXR1cmVBbGdvcml0aG0gPT09ICcxLjIuODQwLjExMzU0OS4xLjEuMTInKSB7XG4gICAgICAgIGFsZyA9IENPU0VBTEcuUlMzODQ7XG4gICAgfVxuICAgIGVsc2UgaWYgKHNpZ25hdHVyZUFsZ29yaXRobSA9PT0gJzEuMi44NDAuMTEzNTQ5LjEuMS4xMycpIHtcbiAgICAgICAgYWxnID0gQ09TRUFMRy5SUzUxMjtcbiAgICB9XG4gICAgZWxzZSBpZiAoc2lnbmF0dXJlQWxnb3JpdGhtID09PSAnMS4yLjg0MC4xMTM1NDkuMS4xLjUnKSB7XG4gICAgICAgIGFsZyA9IENPU0VBTEcuUlMxO1xuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBVbmFibGUgdG8gbWFwIFguNTA5IHNpZ25hdHVyZSBhbGdvcml0aG0gJHtzaWduYXR1cmVBbGdvcml0aG19IHRvIGEgQ09TRSBhbGdvcml0aG1gKTtcbiAgICB9XG4gICAgcmV0dXJuIGFsZztcbn1cbiJdLCJuYW1lcyI6WyJDT1NFQUxHIiwibWFwWDUwOVNpZ25hdHVyZUFsZ1RvQ09TRUFsZyIsInNpZ25hdHVyZUFsZ29yaXRobSIsImFsZyIsIkVTMjU2IiwiRVMzODQiLCJFUzUxMiIsIlJTMjU2IiwiUlMzODQiLCJSUzUxMiIsIlJTMSIsIkVycm9yIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/mapX509SignatureAlgToCOSEAlg.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/matchExpectedRPID.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@simplewebauthn/server/esm/helpers/matchExpectedRPID.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   matchExpectedRPID: () => (/* binding */ matchExpectedRPID)\n/* harmony export */ });\n/* harmony import */ var _toHash_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./toHash.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/toHash.js\");\n/* harmony import */ var _iso_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./iso/index.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/index.js\");\n\n\n/**\n * Go through each expected RP ID and try to find one that matches. Returns the unhashed RP ID\n * that matched the hash in the response.\n *\n * Raises an `UnexpectedRPIDHash` error if no match is found\n */ async function matchExpectedRPID(rpIDHash, expectedRPIDs) {\n    try {\n        const matchedRPID = await Promise.any(expectedRPIDs.map((expected)=>{\n            return new Promise((resolve, reject)=>{\n                (0,_toHash_js__WEBPACK_IMPORTED_MODULE_0__.toHash)(_iso_index_js__WEBPACK_IMPORTED_MODULE_1__.isoUint8Array.fromASCIIString(expected)).then((expectedRPIDHash)=>{\n                    if (_iso_index_js__WEBPACK_IMPORTED_MODULE_1__.isoUint8Array.areEqual(rpIDHash, expectedRPIDHash)) {\n                        resolve(expected);\n                    } else {\n                        reject();\n                    }\n                });\n            });\n        }));\n        return matchedRPID;\n    } catch (err) {\n        const _err = err;\n        // This means no matches were found\n        if (_err.name === \"AggregateError\") {\n            throw new UnexpectedRPIDHash();\n        }\n        // An unexpected error occurred\n        throw err;\n    }\n}\nclass UnexpectedRPIDHash extends Error {\n    constructor(){\n        const message = \"Unexpected RP ID hash\";\n        super(message);\n        this.name = \"UnexpectedRPIDHash\";\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNpbXBsZXdlYmF1dGhuL3NlcnZlci9lc20vaGVscGVycy9tYXRjaEV4cGVjdGVkUlBJRC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBcUM7QUFDVTtBQUMvQzs7Ozs7Q0FLQyxHQUNNLGVBQWVFLGtCQUFrQkMsUUFBUSxFQUFFQyxhQUFhO0lBQzNELElBQUk7UUFDQSxNQUFNQyxjQUFjLE1BQU1DLFFBQVFDLEdBQUcsQ0FBQ0gsY0FBY0ksR0FBRyxDQUFDLENBQUNDO1lBQ3JELE9BQU8sSUFBSUgsUUFBUSxDQUFDSSxTQUFTQztnQkFDekJYLGtEQUFNQSxDQUFDQyx3RUFBNkIsQ0FBQ1EsV0FBV0ksSUFBSSxDQUFDLENBQUNDO29CQUNsRCxJQUFJYixpRUFBc0IsQ0FBQ0UsVUFBVVcsbUJBQW1CO3dCQUNwREosUUFBUUQ7b0JBQ1osT0FDSzt3QkFDREU7b0JBQ0o7Z0JBQ0o7WUFDSjtRQUNKO1FBQ0EsT0FBT047SUFDWCxFQUNBLE9BQU9XLEtBQUs7UUFDUixNQUFNQyxPQUFPRDtRQUNiLG1DQUFtQztRQUNuQyxJQUFJQyxLQUFLQyxJQUFJLEtBQUssa0JBQWtCO1lBQ2hDLE1BQU0sSUFBSUM7UUFDZDtRQUNBLCtCQUErQjtRQUMvQixNQUFNSDtJQUNWO0FBQ0o7QUFDQSxNQUFNRywyQkFBMkJDO0lBQzdCQyxhQUFjO1FBQ1YsTUFBTUMsVUFBVTtRQUNoQixLQUFLLENBQUNBO1FBQ04sSUFBSSxDQUFDSixJQUFJLEdBQUc7SUFDaEI7QUFDSiIsInNvdXJjZXMiOlsid2VicGFjazovL2NhbXB1cy1taW5kLy4vbm9kZV9tb2R1bGVzL0BzaW1wbGV3ZWJhdXRobi9zZXJ2ZXIvZXNtL2hlbHBlcnMvbWF0Y2hFeHBlY3RlZFJQSUQuanM/OTc3NSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB0b0hhc2ggfSBmcm9tICcuL3RvSGFzaC5qcyc7XG5pbXBvcnQgeyBpc29VaW50OEFycmF5IH0gZnJvbSAnLi9pc28vaW5kZXguanMnO1xuLyoqXG4gKiBHbyB0aHJvdWdoIGVhY2ggZXhwZWN0ZWQgUlAgSUQgYW5kIHRyeSB0byBmaW5kIG9uZSB0aGF0IG1hdGNoZXMuIFJldHVybnMgdGhlIHVuaGFzaGVkIFJQIElEXG4gKiB0aGF0IG1hdGNoZWQgdGhlIGhhc2ggaW4gdGhlIHJlc3BvbnNlLlxuICpcbiAqIFJhaXNlcyBhbiBgVW5leHBlY3RlZFJQSURIYXNoYCBlcnJvciBpZiBubyBtYXRjaCBpcyBmb3VuZFxuICovXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWF0Y2hFeHBlY3RlZFJQSUQocnBJREhhc2gsIGV4cGVjdGVkUlBJRHMpIHtcbiAgICB0cnkge1xuICAgICAgICBjb25zdCBtYXRjaGVkUlBJRCA9IGF3YWl0IFByb21pc2UuYW55KGV4cGVjdGVkUlBJRHMubWFwKChleHBlY3RlZCkgPT4ge1xuICAgICAgICAgICAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcbiAgICAgICAgICAgICAgICB0b0hhc2goaXNvVWludDhBcnJheS5mcm9tQVNDSUlTdHJpbmcoZXhwZWN0ZWQpKS50aGVuKChleHBlY3RlZFJQSURIYXNoKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIGlmIChpc29VaW50OEFycmF5LmFyZUVxdWFsKHJwSURIYXNoLCBleHBlY3RlZFJQSURIYXNoKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgcmVzb2x2ZShleHBlY3RlZCk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICByZWplY3QoKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH0pKTtcbiAgICAgICAgcmV0dXJuIG1hdGNoZWRSUElEO1xuICAgIH1cbiAgICBjYXRjaCAoZXJyKSB7XG4gICAgICAgIGNvbnN0IF9lcnIgPSBlcnI7XG4gICAgICAgIC8vIFRoaXMgbWVhbnMgbm8gbWF0Y2hlcyB3ZXJlIGZvdW5kXG4gICAgICAgIGlmIChfZXJyLm5hbWUgPT09ICdBZ2dyZWdhdGVFcnJvcicpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBVbmV4cGVjdGVkUlBJREhhc2goKTtcbiAgICAgICAgfVxuICAgICAgICAvLyBBbiB1bmV4cGVjdGVkIGVycm9yIG9jY3VycmVkXG4gICAgICAgIHRocm93IGVycjtcbiAgICB9XG59XG5jbGFzcyBVbmV4cGVjdGVkUlBJREhhc2ggZXh0ZW5kcyBFcnJvciB7XG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIGNvbnN0IG1lc3NhZ2UgPSAnVW5leHBlY3RlZCBSUCBJRCBoYXNoJztcbiAgICAgICAgc3VwZXIobWVzc2FnZSk7XG4gICAgICAgIHRoaXMubmFtZSA9ICdVbmV4cGVjdGVkUlBJREhhc2gnO1xuICAgIH1cbn1cbiJdLCJuYW1lcyI6WyJ0b0hhc2giLCJpc29VaW50OEFycmF5IiwibWF0Y2hFeHBlY3RlZFJQSUQiLCJycElESGFzaCIsImV4cGVjdGVkUlBJRHMiLCJtYXRjaGVkUlBJRCIsIlByb21pc2UiLCJhbnkiLCJtYXAiLCJleHBlY3RlZCIsInJlc29sdmUiLCJyZWplY3QiLCJmcm9tQVNDSUlTdHJpbmciLCJ0aGVuIiwiZXhwZWN0ZWRSUElESGFzaCIsImFyZUVxdWFsIiwiZXJyIiwiX2VyciIsIm5hbWUiLCJVbmV4cGVjdGVkUlBJREhhc2giLCJFcnJvciIsImNvbnN0cnVjdG9yIiwibWVzc2FnZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/matchExpectedRPID.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/parseAuthenticatorData.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@simplewebauthn/server/esm/helpers/parseAuthenticatorData.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   _parseAuthenticatorDataInternals: () => (/* binding */ _parseAuthenticatorDataInternals),\n/* harmony export */   parseAuthenticatorData: () => (/* binding */ parseAuthenticatorData)\n/* harmony export */ });\n/* harmony import */ var _decodeAuthenticatorExtensions_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./decodeAuthenticatorExtensions.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/decodeAuthenticatorExtensions.js\");\n/* harmony import */ var _iso_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./iso/index.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/index.js\");\n\n\n/**\n * Make sense of the authData buffer contained in an Attestation\n */ function parseAuthenticatorData(authData) {\n    if (authData.byteLength < 37) {\n        throw new Error(`Authenticator data was ${authData.byteLength} bytes, expected at least 37 bytes`);\n    }\n    let pointer = 0;\n    const dataView = _iso_index_js__WEBPACK_IMPORTED_MODULE_1__.isoUint8Array.toDataView(authData);\n    const rpIdHash = authData.slice(pointer, pointer += 32);\n    const flagsBuf = authData.slice(pointer, pointer += 1);\n    const flagsInt = flagsBuf[0];\n    // Bit positions can be referenced here:\n    // https://www.w3.org/TR/webauthn-2/#flags\n    const flags = {\n        up: !!(flagsInt & 1 << 0),\n        uv: !!(flagsInt & 1 << 2),\n        be: !!(flagsInt & 1 << 3),\n        bs: !!(flagsInt & 1 << 4),\n        at: !!(flagsInt & 1 << 6),\n        ed: !!(flagsInt & 1 << 7),\n        flagsInt\n    };\n    const counterBuf = authData.slice(pointer, pointer + 4);\n    const counter = dataView.getUint32(pointer, false);\n    pointer += 4;\n    let aaguid = undefined;\n    let credentialID = undefined;\n    let credentialPublicKey = undefined;\n    if (flags.at) {\n        aaguid = authData.slice(pointer, pointer += 16);\n        const credIDLen = dataView.getUint16(pointer);\n        pointer += 2;\n        credentialID = authData.slice(pointer, pointer += credIDLen);\n        /**\n         * Firefox 117 incorrectly CBOR-encodes authData when EdDSA (-8) is used for the public key.\n         * A CBOR \"Map of 3 items\" (0xa3) should be \"Map of 4 items\" (0xa4), and if we manually adjust\n         * the single byte there's a good chance the authData can be correctly parsed.\n         *\n         * This browser release also incorrectly uses the string labels \"OKP\" and \"Ed25519\" instead of\n         * their integer representations for kty and crv respectively. That's why the COSE public key\n         * in the hex below looks so odd.\n         */ // Bytes decode to `{ 1: \"OKP\", 3: -8, -1: \"Ed25519\" }` (it's missing key -2 a.k.a. COSEKEYS.x)\n        const badEdDSACBOR = _iso_index_js__WEBPACK_IMPORTED_MODULE_1__.isoUint8Array.fromHex(\"a301634f4b500327206745643235353139\");\n        const bytesAtCurrentPosition = authData.slice(pointer, pointer + badEdDSACBOR.byteLength);\n        let foundBadCBOR = false;\n        if (_iso_index_js__WEBPACK_IMPORTED_MODULE_1__.isoUint8Array.areEqual(badEdDSACBOR, bytesAtCurrentPosition)) {\n            // Change the bad CBOR 0xa3 to 0xa4 so that the credential public key can be recognized\n            foundBadCBOR = true;\n            authData[pointer] = 0xa4;\n        }\n        // Decode the next CBOR item in the buffer, then re-encode it back to a Buffer\n        const firstDecoded = _iso_index_js__WEBPACK_IMPORTED_MODULE_1__.isoCBOR.decodeFirst(authData.slice(pointer));\n        const firstEncoded = Uint8Array.from(/**\n         * Casting to `Map` via `as unknown` here because TS doesn't make it possible to define Maps\n         * with discrete keys and properties with known types per pair, and CBOR libs typically parse\n         * CBOR Major Type 5 to `Map` because you can have numbers for keys. A `COSEPublicKey` can be\n         * generalized as \"a Map with numbers for keys and either numbers or bytes for values\" though.\n         * If this presumption falls apart then other parts of verification later on will fail so we\n         * should be safe doing this here.\n         */ _iso_index_js__WEBPACK_IMPORTED_MODULE_1__.isoCBOR.encode(firstDecoded));\n        if (foundBadCBOR) {\n            // Restore the bit we changed so that `authData` is the same as it came in and won't break\n            // signature verification.\n            authData[pointer] = 0xa3;\n        }\n        credentialPublicKey = firstEncoded;\n        pointer += firstEncoded.byteLength;\n    }\n    let extensionsData = undefined;\n    let extensionsDataBuffer = undefined;\n    if (flags.ed) {\n        const firstDecoded = _iso_index_js__WEBPACK_IMPORTED_MODULE_1__.isoCBOR.decodeFirst(authData.slice(pointer));\n        extensionsDataBuffer = Uint8Array.from(_iso_index_js__WEBPACK_IMPORTED_MODULE_1__.isoCBOR.encode(firstDecoded));\n        extensionsData = (0,_decodeAuthenticatorExtensions_js__WEBPACK_IMPORTED_MODULE_0__.decodeAuthenticatorExtensions)(extensionsDataBuffer);\n        pointer += extensionsDataBuffer.byteLength;\n    }\n    // Pointer should be at the end of the authenticator data, otherwise too much data was sent\n    if (authData.byteLength > pointer) {\n        throw new Error(\"Leftover bytes detected while parsing authenticator data\");\n    }\n    return _parseAuthenticatorDataInternals.stubThis({\n        rpIdHash,\n        flagsBuf,\n        flags,\n        counter,\n        counterBuf,\n        aaguid,\n        credentialID,\n        credentialPublicKey,\n        extensionsData,\n        extensionsDataBuffer\n    });\n}\n// Make it possible to stub the return value during testing\nconst _parseAuthenticatorDataInternals = {\n    stubThis: (value)=>value\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/parseAuthenticatorData.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/parseBackupFlags.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@simplewebauthn/server/esm/helpers/parseBackupFlags.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   InvalidBackupFlags: () => (/* binding */ InvalidBackupFlags),\n/* harmony export */   parseBackupFlags: () => (/* binding */ parseBackupFlags)\n/* harmony export */ });\n/**\n * Make sense of Bits 3 and 4 in authenticator indicating:\n *\n * - Whether the credential can be used on multiple devices\n * - Whether the credential is backed up or not\n *\n * Invalid configurations will raise an `Error`\n */ function parseBackupFlags({ be, bs }) {\n    const credentialBackedUp = bs;\n    let credentialDeviceType = \"singleDevice\";\n    if (be) {\n        credentialDeviceType = \"multiDevice\";\n    }\n    if (credentialDeviceType === \"singleDevice\" && credentialBackedUp) {\n        throw new InvalidBackupFlags(\"Single-device credential indicated that it was backed up, which should be impossible.\");\n    }\n    return {\n        credentialDeviceType,\n        credentialBackedUp\n    };\n}\nclass InvalidBackupFlags extends Error {\n    constructor(message){\n        super(message);\n        this.name = \"InvalidBackupFlags\";\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNpbXBsZXdlYmF1dGhuL3NlcnZlci9lc20vaGVscGVycy9wYXJzZUJhY2t1cEZsYWdzLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUE7Ozs7Ozs7Q0FPQyxHQUNNLFNBQVNBLGlCQUFpQixFQUFFQyxFQUFFLEVBQUVDLEVBQUUsRUFBRTtJQUN2QyxNQUFNQyxxQkFBcUJEO0lBQzNCLElBQUlFLHVCQUF1QjtJQUMzQixJQUFJSCxJQUFJO1FBQ0pHLHVCQUF1QjtJQUMzQjtJQUNBLElBQUlBLHlCQUF5QixrQkFBa0JELG9CQUFvQjtRQUMvRCxNQUFNLElBQUlFLG1CQUFtQjtJQUNqQztJQUNBLE9BQU87UUFBRUQ7UUFBc0JEO0lBQW1CO0FBQ3REO0FBQ08sTUFBTUUsMkJBQTJCQztJQUNwQ0MsWUFBWUMsT0FBTyxDQUFFO1FBQ2pCLEtBQUssQ0FBQ0E7UUFDTixJQUFJLENBQUNDLElBQUksR0FBRztJQUNoQjtBQUNKIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vY2FtcHVzLW1pbmQvLi9ub2RlX21vZHVsZXMvQHNpbXBsZXdlYmF1dGhuL3NlcnZlci9lc20vaGVscGVycy9wYXJzZUJhY2t1cEZsYWdzLmpzP2NmZjciXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBNYWtlIHNlbnNlIG9mIEJpdHMgMyBhbmQgNCBpbiBhdXRoZW50aWNhdG9yIGluZGljYXRpbmc6XG4gKlxuICogLSBXaGV0aGVyIHRoZSBjcmVkZW50aWFsIGNhbiBiZSB1c2VkIG9uIG11bHRpcGxlIGRldmljZXNcbiAqIC0gV2hldGhlciB0aGUgY3JlZGVudGlhbCBpcyBiYWNrZWQgdXAgb3Igbm90XG4gKlxuICogSW52YWxpZCBjb25maWd1cmF0aW9ucyB3aWxsIHJhaXNlIGFuIGBFcnJvcmBcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHBhcnNlQmFja3VwRmxhZ3MoeyBiZSwgYnMgfSkge1xuICAgIGNvbnN0IGNyZWRlbnRpYWxCYWNrZWRVcCA9IGJzO1xuICAgIGxldCBjcmVkZW50aWFsRGV2aWNlVHlwZSA9ICdzaW5nbGVEZXZpY2UnO1xuICAgIGlmIChiZSkge1xuICAgICAgICBjcmVkZW50aWFsRGV2aWNlVHlwZSA9ICdtdWx0aURldmljZSc7XG4gICAgfVxuICAgIGlmIChjcmVkZW50aWFsRGV2aWNlVHlwZSA9PT0gJ3NpbmdsZURldmljZScgJiYgY3JlZGVudGlhbEJhY2tlZFVwKSB7XG4gICAgICAgIHRocm93IG5ldyBJbnZhbGlkQmFja3VwRmxhZ3MoJ1NpbmdsZS1kZXZpY2UgY3JlZGVudGlhbCBpbmRpY2F0ZWQgdGhhdCBpdCB3YXMgYmFja2VkIHVwLCB3aGljaCBzaG91bGQgYmUgaW1wb3NzaWJsZS4nKTtcbiAgICB9XG4gICAgcmV0dXJuIHsgY3JlZGVudGlhbERldmljZVR5cGUsIGNyZWRlbnRpYWxCYWNrZWRVcCB9O1xufVxuZXhwb3J0IGNsYXNzIEludmFsaWRCYWNrdXBGbGFncyBleHRlbmRzIEVycm9yIHtcbiAgICBjb25zdHJ1Y3RvcihtZXNzYWdlKSB7XG4gICAgICAgIHN1cGVyKG1lc3NhZ2UpO1xuICAgICAgICB0aGlzLm5hbWUgPSAnSW52YWxpZEJhY2t1cEZsYWdzJztcbiAgICB9XG59XG4iXSwibmFtZXMiOlsicGFyc2VCYWNrdXBGbGFncyIsImJlIiwiYnMiLCJjcmVkZW50aWFsQmFja2VkVXAiLCJjcmVkZW50aWFsRGV2aWNlVHlwZSIsIkludmFsaWRCYWNrdXBGbGFncyIsIkVycm9yIiwiY29uc3RydWN0b3IiLCJtZXNzYWdlIiwibmFtZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/parseBackupFlags.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/toHash.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@simplewebauthn/server/esm/helpers/toHash.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   toHash: () => (/* binding */ toHash)\n/* harmony export */ });\n/* harmony import */ var _iso_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./iso/index.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/index.js\");\n\n/**\n * Returns hash digest of the given data, using the given algorithm when provided. Defaults to using\n * SHA-256.\n */ function toHash(data, algorithm = -7) {\n    if (typeof data === \"string\") {\n        data = _iso_index_js__WEBPACK_IMPORTED_MODULE_0__.isoUint8Array.fromUTF8String(data);\n    }\n    const digest = _iso_index_js__WEBPACK_IMPORTED_MODULE_0__.isoCrypto.digest(data, algorithm);\n    return digest;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNpbXBsZXdlYmF1dGhuL3NlcnZlci9lc20vaGVscGVycy90b0hhc2guanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBMEQ7QUFDMUQ7OztDQUdDLEdBQ00sU0FBU0UsT0FBT0MsSUFBSSxFQUFFQyxZQUFZLENBQUMsQ0FBQztJQUN2QyxJQUFJLE9BQU9ELFNBQVMsVUFBVTtRQUMxQkEsT0FBT0YsdUVBQTRCLENBQUNFO0lBQ3hDO0lBQ0EsTUFBTUcsU0FBU04sMkRBQWdCLENBQUNHLE1BQU1DO0lBQ3RDLE9BQU9FO0FBQ1giLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jYW1wdXMtbWluZC8uL25vZGVfbW9kdWxlcy9Ac2ltcGxld2ViYXV0aG4vc2VydmVyL2VzbS9oZWxwZXJzL3RvSGFzaC5qcz9hNzA3Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGlzb0NyeXB0bywgaXNvVWludDhBcnJheSB9IGZyb20gJy4vaXNvL2luZGV4LmpzJztcbi8qKlxuICogUmV0dXJucyBoYXNoIGRpZ2VzdCBvZiB0aGUgZ2l2ZW4gZGF0YSwgdXNpbmcgdGhlIGdpdmVuIGFsZ29yaXRobSB3aGVuIHByb3ZpZGVkLiBEZWZhdWx0cyB0byB1c2luZ1xuICogU0hBLTI1Ni5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHRvSGFzaChkYXRhLCBhbGdvcml0aG0gPSAtNykge1xuICAgIGlmICh0eXBlb2YgZGF0YSA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgZGF0YSA9IGlzb1VpbnQ4QXJyYXkuZnJvbVVURjhTdHJpbmcoZGF0YSk7XG4gICAgfVxuICAgIGNvbnN0IGRpZ2VzdCA9IGlzb0NyeXB0by5kaWdlc3QoZGF0YSwgYWxnb3JpdGhtKTtcbiAgICByZXR1cm4gZGlnZXN0O1xufVxuIl0sIm5hbWVzIjpbImlzb0NyeXB0byIsImlzb1VpbnQ4QXJyYXkiLCJ0b0hhc2giLCJkYXRhIiwiYWxnb3JpdGhtIiwiZnJvbVVURjhTdHJpbmciLCJkaWdlc3QiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/toHash.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/validateCertificatePath.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@simplewebauthn/server/esm/helpers/validateCertificatePath.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   validateCertificatePath: () => (/* binding */ validateCertificatePath)\n/* harmony export */ });\n/* harmony import */ var _deps_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../deps.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/deps.js\");\n/* harmony import */ var _isCertRevoked_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./isCertRevoked.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/isCertRevoked.js\");\n/* harmony import */ var _verifySignature_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./verifySignature.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/verifySignature.js\");\n/* harmony import */ var _mapX509SignatureAlgToCOSEAlg_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./mapX509SignatureAlgToCOSEAlg.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/mapX509SignatureAlgToCOSEAlg.js\");\n/* harmony import */ var _getCertificateInfo_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./getCertificateInfo.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/getCertificateInfo.js\");\n/* harmony import */ var _convertPEMToBytes_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./convertPEMToBytes.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/convertPEMToBytes.js\");\n\n\n\n\n\n\n/**\n * Traverse an array of PEM certificates and ensure they form a proper chain\n * @param certificates Typically the result of `x5c.map(convertASN1toPEM)`\n * @param rootCertificates Possible root certificates to complete the path\n */ async function validateCertificatePath(certificates, rootCertificates = []) {\n    if (rootCertificates.length === 0) {\n        // We have no root certs with which to create a full path, so skip path validation\n        // TODO: Is this going to be acceptable default behavior??\n        return true;\n    }\n    let invalidSubjectAndIssuerError = false;\n    let certificateNotYetValidOrExpiredErrorMessage = undefined;\n    for (const rootCert of rootCertificates){\n        try {\n            const certsWithRoot = certificates.concat([\n                rootCert\n            ]);\n            await _validatePath(certsWithRoot);\n            // If we successfully validated a path then there's no need to continue. Reset any existing\n            // errors that were thrown by earlier root certificates\n            invalidSubjectAndIssuerError = false;\n            certificateNotYetValidOrExpiredErrorMessage = undefined;\n            break;\n        } catch (err) {\n            if (err instanceof InvalidSubjectAndIssuer) {\n                invalidSubjectAndIssuerError = true;\n            } else if (err instanceof CertificateNotYetValidOrExpired) {\n                certificateNotYetValidOrExpiredErrorMessage = err.message;\n            } else {\n                throw err;\n            }\n        }\n    }\n    // We tried multiple root certs and none of them worked\n    if (invalidSubjectAndIssuerError) {\n        throw new InvalidSubjectAndIssuer();\n    } else if (certificateNotYetValidOrExpiredErrorMessage) {\n        throw new CertificateNotYetValidOrExpired(certificateNotYetValidOrExpiredErrorMessage);\n    }\n    return true;\n}\nasync function _validatePath(certificates) {\n    if (new Set(certificates).size !== certificates.length) {\n        throw new Error(\"Invalid certificate path: found duplicate certificates\");\n    }\n    // From leaf to root, make sure each cert is issued by the next certificate in the chain\n    for(let i = 0; i < certificates.length; i += 1){\n        const subjectPem = certificates[i];\n        const isLeafCert = i === 0;\n        const isRootCert = i + 1 >= certificates.length;\n        let issuerPem = \"\";\n        if (isRootCert) {\n            issuerPem = subjectPem;\n        } else {\n            issuerPem = certificates[i + 1];\n        }\n        const subjectInfo = (0,_getCertificateInfo_js__WEBPACK_IMPORTED_MODULE_4__.getCertificateInfo)((0,_convertPEMToBytes_js__WEBPACK_IMPORTED_MODULE_5__.convertPEMToBytes)(subjectPem));\n        const issuerInfo = (0,_getCertificateInfo_js__WEBPACK_IMPORTED_MODULE_4__.getCertificateInfo)((0,_convertPEMToBytes_js__WEBPACK_IMPORTED_MODULE_5__.convertPEMToBytes)(issuerPem));\n        const x509Subject = subjectInfo.parsedCertificate;\n        // Check for certificate revocation\n        const subjectCertRevoked = await (0,_isCertRevoked_js__WEBPACK_IMPORTED_MODULE_1__.isCertRevoked)(x509Subject);\n        if (subjectCertRevoked) {\n            throw new Error(`Found revoked certificate in certificate path`);\n        }\n        // Check that intermediate certificate is within its valid time window\n        const { notBefore, notAfter } = issuerInfo;\n        const now = new Date(Date.now());\n        if (notBefore > now || notAfter < now) {\n            if (isLeafCert) {\n                throw new CertificateNotYetValidOrExpired(`Leaf certificate is not yet valid or expired: ${issuerPem}`);\n            } else if (isRootCert) {\n                throw new CertificateNotYetValidOrExpired(`Root certificate is not yet valid or expired: ${issuerPem}`);\n            } else {\n                throw new CertificateNotYetValidOrExpired(`Intermediate certificate is not yet valid or expired: ${issuerPem}`);\n            }\n        }\n        if (subjectInfo.issuer.combined !== issuerInfo.subject.combined) {\n            throw new InvalidSubjectAndIssuer();\n        }\n        // Verify the subject certificate's signature with the issuer cert's public key\n        const data = _deps_js__WEBPACK_IMPORTED_MODULE_0__.AsnSerializer.serialize(x509Subject.tbsCertificate);\n        const signature = x509Subject.signatureValue;\n        const signatureAlgorithm = (0,_mapX509SignatureAlgToCOSEAlg_js__WEBPACK_IMPORTED_MODULE_3__.mapX509SignatureAlgToCOSEAlg)(x509Subject.signatureAlgorithm.algorithm);\n        const issuerCertBytes = (0,_convertPEMToBytes_js__WEBPACK_IMPORTED_MODULE_5__.convertPEMToBytes)(issuerPem);\n        const verified = await (0,_verifySignature_js__WEBPACK_IMPORTED_MODULE_2__.verifySignature)({\n            data: new Uint8Array(data),\n            signature: new Uint8Array(signature),\n            x509Certificate: issuerCertBytes,\n            hashAlgorithm: signatureAlgorithm\n        });\n        if (!verified) {\n            throw new Error(\"Invalid certificate path: invalid signature\");\n        }\n    }\n    return true;\n}\n// Custom errors to help pass on certain errors\nclass InvalidSubjectAndIssuer extends Error {\n    constructor(){\n        const message = \"Subject issuer did not match issuer subject\";\n        super(message);\n        this.name = \"InvalidSubjectAndIssuer\";\n    }\n}\nclass CertificateNotYetValidOrExpired extends Error {\n    constructor(message){\n        super(message);\n        this.name = \"CertificateNotYetValidOrExpired\";\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNpbXBsZXdlYmF1dGhuL3NlcnZlci9lc20vaGVscGVycy92YWxpZGF0ZUNlcnRpZmljYXRlUGF0aC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQTJDO0FBQ1E7QUFDSTtBQUMwQjtBQUNwQjtBQUNGO0FBQzNEOzs7O0NBSUMsR0FDTSxlQUFlTSx3QkFBd0JDLFlBQVksRUFBRUMsbUJBQW1CLEVBQUU7SUFDN0UsSUFBSUEsaUJBQWlCQyxNQUFNLEtBQUssR0FBRztRQUMvQixrRkFBa0Y7UUFDbEYsMERBQTBEO1FBQzFELE9BQU87SUFDWDtJQUNBLElBQUlDLCtCQUErQjtJQUNuQyxJQUFJQyw4Q0FBOENDO0lBQ2xELEtBQUssTUFBTUMsWUFBWUwsaUJBQWtCO1FBQ3JDLElBQUk7WUFDQSxNQUFNTSxnQkFBZ0JQLGFBQWFRLE1BQU0sQ0FBQztnQkFBQ0Y7YUFBUztZQUNwRCxNQUFNRyxjQUFjRjtZQUNwQiwyRkFBMkY7WUFDM0YsdURBQXVEO1lBQ3ZESiwrQkFBK0I7WUFDL0JDLDhDQUE4Q0M7WUFDOUM7UUFDSixFQUNBLE9BQU9LLEtBQUs7WUFDUixJQUFJQSxlQUFlQyx5QkFBeUI7Z0JBQ3hDUiwrQkFBK0I7WUFDbkMsT0FDSyxJQUFJTyxlQUFlRSxpQ0FBaUM7Z0JBQ3JEUiw4Q0FBOENNLElBQUlHLE9BQU87WUFDN0QsT0FDSztnQkFDRCxNQUFNSDtZQUNWO1FBQ0o7SUFDSjtJQUNBLHVEQUF1RDtJQUN2RCxJQUFJUCw4QkFBOEI7UUFDOUIsTUFBTSxJQUFJUTtJQUNkLE9BQ0ssSUFBSVAsNkNBQTZDO1FBQ2xELE1BQU0sSUFBSVEsZ0NBQWdDUjtJQUM5QztJQUNBLE9BQU87QUFDWDtBQUNBLGVBQWVLLGNBQWNULFlBQVk7SUFDckMsSUFBSSxJQUFJYyxJQUFJZCxjQUFjZSxJQUFJLEtBQUtmLGFBQWFFLE1BQU0sRUFBRTtRQUNwRCxNQUFNLElBQUljLE1BQU07SUFDcEI7SUFDQSx3RkFBd0Y7SUFDeEYsSUFBSyxJQUFJQyxJQUFJLEdBQUdBLElBQUlqQixhQUFhRSxNQUFNLEVBQUVlLEtBQUssRUFBRztRQUM3QyxNQUFNQyxhQUFhbEIsWUFBWSxDQUFDaUIsRUFBRTtRQUNsQyxNQUFNRSxhQUFhRixNQUFNO1FBQ3pCLE1BQU1HLGFBQWFILElBQUksS0FBS2pCLGFBQWFFLE1BQU07UUFDL0MsSUFBSW1CLFlBQVk7UUFDaEIsSUFBSUQsWUFBWTtZQUNaQyxZQUFZSDtRQUNoQixPQUNLO1lBQ0RHLFlBQVlyQixZQUFZLENBQUNpQixJQUFJLEVBQUU7UUFDbkM7UUFDQSxNQUFNSyxjQUFjekIsMEVBQWtCQSxDQUFDQyx3RUFBaUJBLENBQUNvQjtRQUN6RCxNQUFNSyxhQUFhMUIsMEVBQWtCQSxDQUFDQyx3RUFBaUJBLENBQUN1QjtRQUN4RCxNQUFNRyxjQUFjRixZQUFZRyxpQkFBaUI7UUFDakQsbUNBQW1DO1FBQ25DLE1BQU1DLHFCQUFxQixNQUFNaEMsZ0VBQWFBLENBQUM4QjtRQUMvQyxJQUFJRSxvQkFBb0I7WUFDcEIsTUFBTSxJQUFJVixNQUFNLENBQUMsNkNBQTZDLENBQUM7UUFDbkU7UUFDQSxzRUFBc0U7UUFDdEUsTUFBTSxFQUFFVyxTQUFTLEVBQUVDLFFBQVEsRUFBRSxHQUFHTDtRQUNoQyxNQUFNTSxNQUFNLElBQUlDLEtBQUtBLEtBQUtELEdBQUc7UUFDN0IsSUFBSUYsWUFBWUUsT0FBT0QsV0FBV0MsS0FBSztZQUNuQyxJQUFJVixZQUFZO2dCQUNaLE1BQU0sSUFBSVAsZ0NBQWdDLENBQUMsOENBQThDLEVBQUVTLFVBQVUsQ0FBQztZQUMxRyxPQUNLLElBQUlELFlBQVk7Z0JBQ2pCLE1BQU0sSUFBSVIsZ0NBQWdDLENBQUMsOENBQThDLEVBQUVTLFVBQVUsQ0FBQztZQUMxRyxPQUNLO2dCQUNELE1BQU0sSUFBSVQsZ0NBQWdDLENBQUMsc0RBQXNELEVBQUVTLFVBQVUsQ0FBQztZQUNsSDtRQUNKO1FBQ0EsSUFBSUMsWUFBWVMsTUFBTSxDQUFDQyxRQUFRLEtBQUtULFdBQVdVLE9BQU8sQ0FBQ0QsUUFBUSxFQUFFO1lBQzdELE1BQU0sSUFBSXJCO1FBQ2Q7UUFDQSwrRUFBK0U7UUFDL0UsTUFBTXVCLE9BQU96QyxtREFBYUEsQ0FBQzBDLFNBQVMsQ0FBQ1gsWUFBWVksY0FBYztRQUMvRCxNQUFNQyxZQUFZYixZQUFZYyxjQUFjO1FBQzVDLE1BQU1DLHFCQUFxQjNDLDhGQUE0QkEsQ0FBQzRCLFlBQVllLGtCQUFrQixDQUFDQyxTQUFTO1FBQ2hHLE1BQU1DLGtCQUFrQjNDLHdFQUFpQkEsQ0FBQ3VCO1FBQzFDLE1BQU1xQixXQUFXLE1BQU0vQyxvRUFBZUEsQ0FBQztZQUNuQ3VDLE1BQU0sSUFBSVMsV0FBV1Q7WUFDckJHLFdBQVcsSUFBSU0sV0FBV047WUFDMUJPLGlCQUFpQkg7WUFDakJJLGVBQWVOO1FBQ25CO1FBQ0EsSUFBSSxDQUFDRyxVQUFVO1lBQ1gsTUFBTSxJQUFJMUIsTUFBTTtRQUNwQjtJQUNKO0lBQ0EsT0FBTztBQUNYO0FBQ0EsK0NBQStDO0FBQy9DLE1BQU1MLGdDQUFnQ0s7SUFDbEM4QixhQUFjO1FBQ1YsTUFBTWpDLFVBQVU7UUFDaEIsS0FBSyxDQUFDQTtRQUNOLElBQUksQ0FBQ2tDLElBQUksR0FBRztJQUNoQjtBQUNKO0FBQ0EsTUFBTW5DLHdDQUF3Q0k7SUFDMUM4QixZQUFZakMsT0FBTyxDQUFFO1FBQ2pCLEtBQUssQ0FBQ0E7UUFDTixJQUFJLENBQUNrQyxJQUFJLEdBQUc7SUFDaEI7QUFDSiIsInNvdXJjZXMiOlsid2VicGFjazovL2NhbXB1cy1taW5kLy4vbm9kZV9tb2R1bGVzL0BzaW1wbGV3ZWJhdXRobi9zZXJ2ZXIvZXNtL2hlbHBlcnMvdmFsaWRhdGVDZXJ0aWZpY2F0ZVBhdGguanM/OTQ4YSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBBc25TZXJpYWxpemVyIH0gZnJvbSAnLi4vZGVwcy5qcyc7XG5pbXBvcnQgeyBpc0NlcnRSZXZva2VkIH0gZnJvbSAnLi9pc0NlcnRSZXZva2VkLmpzJztcbmltcG9ydCB7IHZlcmlmeVNpZ25hdHVyZSB9IGZyb20gJy4vdmVyaWZ5U2lnbmF0dXJlLmpzJztcbmltcG9ydCB7IG1hcFg1MDlTaWduYXR1cmVBbGdUb0NPU0VBbGcgfSBmcm9tICcuL21hcFg1MDlTaWduYXR1cmVBbGdUb0NPU0VBbGcuanMnO1xuaW1wb3J0IHsgZ2V0Q2VydGlmaWNhdGVJbmZvIH0gZnJvbSAnLi9nZXRDZXJ0aWZpY2F0ZUluZm8uanMnO1xuaW1wb3J0IHsgY29udmVydFBFTVRvQnl0ZXMgfSBmcm9tICcuL2NvbnZlcnRQRU1Ub0J5dGVzLmpzJztcbi8qKlxuICogVHJhdmVyc2UgYW4gYXJyYXkgb2YgUEVNIGNlcnRpZmljYXRlcyBhbmQgZW5zdXJlIHRoZXkgZm9ybSBhIHByb3BlciBjaGFpblxuICogQHBhcmFtIGNlcnRpZmljYXRlcyBUeXBpY2FsbHkgdGhlIHJlc3VsdCBvZiBgeDVjLm1hcChjb252ZXJ0QVNOMXRvUEVNKWBcbiAqIEBwYXJhbSByb290Q2VydGlmaWNhdGVzIFBvc3NpYmxlIHJvb3QgY2VydGlmaWNhdGVzIHRvIGNvbXBsZXRlIHRoZSBwYXRoXG4gKi9cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiB2YWxpZGF0ZUNlcnRpZmljYXRlUGF0aChjZXJ0aWZpY2F0ZXMsIHJvb3RDZXJ0aWZpY2F0ZXMgPSBbXSkge1xuICAgIGlmIChyb290Q2VydGlmaWNhdGVzLmxlbmd0aCA9PT0gMCkge1xuICAgICAgICAvLyBXZSBoYXZlIG5vIHJvb3QgY2VydHMgd2l0aCB3aGljaCB0byBjcmVhdGUgYSBmdWxsIHBhdGgsIHNvIHNraXAgcGF0aCB2YWxpZGF0aW9uXG4gICAgICAgIC8vIFRPRE86IElzIHRoaXMgZ29pbmcgdG8gYmUgYWNjZXB0YWJsZSBkZWZhdWx0IGJlaGF2aW9yPz9cbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgfVxuICAgIGxldCBpbnZhbGlkU3ViamVjdEFuZElzc3VlckVycm9yID0gZmFsc2U7XG4gICAgbGV0IGNlcnRpZmljYXRlTm90WWV0VmFsaWRPckV4cGlyZWRFcnJvck1lc3NhZ2UgPSB1bmRlZmluZWQ7XG4gICAgZm9yIChjb25zdCByb290Q2VydCBvZiByb290Q2VydGlmaWNhdGVzKSB7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICBjb25zdCBjZXJ0c1dpdGhSb290ID0gY2VydGlmaWNhdGVzLmNvbmNhdChbcm9vdENlcnRdKTtcbiAgICAgICAgICAgIGF3YWl0IF92YWxpZGF0ZVBhdGgoY2VydHNXaXRoUm9vdCk7XG4gICAgICAgICAgICAvLyBJZiB3ZSBzdWNjZXNzZnVsbHkgdmFsaWRhdGVkIGEgcGF0aCB0aGVuIHRoZXJlJ3Mgbm8gbmVlZCB0byBjb250aW51ZS4gUmVzZXQgYW55IGV4aXN0aW5nXG4gICAgICAgICAgICAvLyBlcnJvcnMgdGhhdCB3ZXJlIHRocm93biBieSBlYXJsaWVyIHJvb3QgY2VydGlmaWNhdGVzXG4gICAgICAgICAgICBpbnZhbGlkU3ViamVjdEFuZElzc3VlckVycm9yID0gZmFsc2U7XG4gICAgICAgICAgICBjZXJ0aWZpY2F0ZU5vdFlldFZhbGlkT3JFeHBpcmVkRXJyb3JNZXNzYWdlID0gdW5kZWZpbmVkO1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgIH1cbiAgICAgICAgY2F0Y2ggKGVycikge1xuICAgICAgICAgICAgaWYgKGVyciBpbnN0YW5jZW9mIEludmFsaWRTdWJqZWN0QW5kSXNzdWVyKSB7XG4gICAgICAgICAgICAgICAgaW52YWxpZFN1YmplY3RBbmRJc3N1ZXJFcnJvciA9IHRydWU7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIGlmIChlcnIgaW5zdGFuY2VvZiBDZXJ0aWZpY2F0ZU5vdFlldFZhbGlkT3JFeHBpcmVkKSB7XG4gICAgICAgICAgICAgICAgY2VydGlmaWNhdGVOb3RZZXRWYWxpZE9yRXhwaXJlZEVycm9yTWVzc2FnZSA9IGVyci5tZXNzYWdlO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgdGhyb3cgZXJyO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgIC8vIFdlIHRyaWVkIG11bHRpcGxlIHJvb3QgY2VydHMgYW5kIG5vbmUgb2YgdGhlbSB3b3JrZWRcbiAgICBpZiAoaW52YWxpZFN1YmplY3RBbmRJc3N1ZXJFcnJvcikge1xuICAgICAgICB0aHJvdyBuZXcgSW52YWxpZFN1YmplY3RBbmRJc3N1ZXIoKTtcbiAgICB9XG4gICAgZWxzZSBpZiAoY2VydGlmaWNhdGVOb3RZZXRWYWxpZE9yRXhwaXJlZEVycm9yTWVzc2FnZSkge1xuICAgICAgICB0aHJvdyBuZXcgQ2VydGlmaWNhdGVOb3RZZXRWYWxpZE9yRXhwaXJlZChjZXJ0aWZpY2F0ZU5vdFlldFZhbGlkT3JFeHBpcmVkRXJyb3JNZXNzYWdlKTtcbiAgICB9XG4gICAgcmV0dXJuIHRydWU7XG59XG5hc3luYyBmdW5jdGlvbiBfdmFsaWRhdGVQYXRoKGNlcnRpZmljYXRlcykge1xuICAgIGlmIChuZXcgU2V0KGNlcnRpZmljYXRlcykuc2l6ZSAhPT0gY2VydGlmaWNhdGVzLmxlbmd0aCkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ0ludmFsaWQgY2VydGlmaWNhdGUgcGF0aDogZm91bmQgZHVwbGljYXRlIGNlcnRpZmljYXRlcycpO1xuICAgIH1cbiAgICAvLyBGcm9tIGxlYWYgdG8gcm9vdCwgbWFrZSBzdXJlIGVhY2ggY2VydCBpcyBpc3N1ZWQgYnkgdGhlIG5leHQgY2VydGlmaWNhdGUgaW4gdGhlIGNoYWluXG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBjZXJ0aWZpY2F0ZXMubGVuZ3RoOyBpICs9IDEpIHtcbiAgICAgICAgY29uc3Qgc3ViamVjdFBlbSA9IGNlcnRpZmljYXRlc1tpXTtcbiAgICAgICAgY29uc3QgaXNMZWFmQ2VydCA9IGkgPT09IDA7XG4gICAgICAgIGNvbnN0IGlzUm9vdENlcnQgPSBpICsgMSA+PSBjZXJ0aWZpY2F0ZXMubGVuZ3RoO1xuICAgICAgICBsZXQgaXNzdWVyUGVtID0gJyc7XG4gICAgICAgIGlmIChpc1Jvb3RDZXJ0KSB7XG4gICAgICAgICAgICBpc3N1ZXJQZW0gPSBzdWJqZWN0UGVtO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgaXNzdWVyUGVtID0gY2VydGlmaWNhdGVzW2kgKyAxXTtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCBzdWJqZWN0SW5mbyA9IGdldENlcnRpZmljYXRlSW5mbyhjb252ZXJ0UEVNVG9CeXRlcyhzdWJqZWN0UGVtKSk7XG4gICAgICAgIGNvbnN0IGlzc3VlckluZm8gPSBnZXRDZXJ0aWZpY2F0ZUluZm8oY29udmVydFBFTVRvQnl0ZXMoaXNzdWVyUGVtKSk7XG4gICAgICAgIGNvbnN0IHg1MDlTdWJqZWN0ID0gc3ViamVjdEluZm8ucGFyc2VkQ2VydGlmaWNhdGU7XG4gICAgICAgIC8vIENoZWNrIGZvciBjZXJ0aWZpY2F0ZSByZXZvY2F0aW9uXG4gICAgICAgIGNvbnN0IHN1YmplY3RDZXJ0UmV2b2tlZCA9IGF3YWl0IGlzQ2VydFJldm9rZWQoeDUwOVN1YmplY3QpO1xuICAgICAgICBpZiAoc3ViamVjdENlcnRSZXZva2VkKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYEZvdW5kIHJldm9rZWQgY2VydGlmaWNhdGUgaW4gY2VydGlmaWNhdGUgcGF0aGApO1xuICAgICAgICB9XG4gICAgICAgIC8vIENoZWNrIHRoYXQgaW50ZXJtZWRpYXRlIGNlcnRpZmljYXRlIGlzIHdpdGhpbiBpdHMgdmFsaWQgdGltZSB3aW5kb3dcbiAgICAgICAgY29uc3QgeyBub3RCZWZvcmUsIG5vdEFmdGVyIH0gPSBpc3N1ZXJJbmZvO1xuICAgICAgICBjb25zdCBub3cgPSBuZXcgRGF0ZShEYXRlLm5vdygpKTtcbiAgICAgICAgaWYgKG5vdEJlZm9yZSA+IG5vdyB8fCBub3RBZnRlciA8IG5vdykge1xuICAgICAgICAgICAgaWYgKGlzTGVhZkNlcnQpIHtcbiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgQ2VydGlmaWNhdGVOb3RZZXRWYWxpZE9yRXhwaXJlZChgTGVhZiBjZXJ0aWZpY2F0ZSBpcyBub3QgeWV0IHZhbGlkIG9yIGV4cGlyZWQ6ICR7aXNzdWVyUGVtfWApO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSBpZiAoaXNSb290Q2VydCkge1xuICAgICAgICAgICAgICAgIHRocm93IG5ldyBDZXJ0aWZpY2F0ZU5vdFlldFZhbGlkT3JFeHBpcmVkKGBSb290IGNlcnRpZmljYXRlIGlzIG5vdCB5ZXQgdmFsaWQgb3IgZXhwaXJlZDogJHtpc3N1ZXJQZW19YCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgQ2VydGlmaWNhdGVOb3RZZXRWYWxpZE9yRXhwaXJlZChgSW50ZXJtZWRpYXRlIGNlcnRpZmljYXRlIGlzIG5vdCB5ZXQgdmFsaWQgb3IgZXhwaXJlZDogJHtpc3N1ZXJQZW19YCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHN1YmplY3RJbmZvLmlzc3Vlci5jb21iaW5lZCAhPT0gaXNzdWVySW5mby5zdWJqZWN0LmNvbWJpbmVkKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgSW52YWxpZFN1YmplY3RBbmRJc3N1ZXIoKTtcbiAgICAgICAgfVxuICAgICAgICAvLyBWZXJpZnkgdGhlIHN1YmplY3QgY2VydGlmaWNhdGUncyBzaWduYXR1cmUgd2l0aCB0aGUgaXNzdWVyIGNlcnQncyBwdWJsaWMga2V5XG4gICAgICAgIGNvbnN0IGRhdGEgPSBBc25TZXJpYWxpemVyLnNlcmlhbGl6ZSh4NTA5U3ViamVjdC50YnNDZXJ0aWZpY2F0ZSk7XG4gICAgICAgIGNvbnN0IHNpZ25hdHVyZSA9IHg1MDlTdWJqZWN0LnNpZ25hdHVyZVZhbHVlO1xuICAgICAgICBjb25zdCBzaWduYXR1cmVBbGdvcml0aG0gPSBtYXBYNTA5U2lnbmF0dXJlQWxnVG9DT1NFQWxnKHg1MDlTdWJqZWN0LnNpZ25hdHVyZUFsZ29yaXRobS5hbGdvcml0aG0pO1xuICAgICAgICBjb25zdCBpc3N1ZXJDZXJ0Qnl0ZXMgPSBjb252ZXJ0UEVNVG9CeXRlcyhpc3N1ZXJQZW0pO1xuICAgICAgICBjb25zdCB2ZXJpZmllZCA9IGF3YWl0IHZlcmlmeVNpZ25hdHVyZSh7XG4gICAgICAgICAgICBkYXRhOiBuZXcgVWludDhBcnJheShkYXRhKSxcbiAgICAgICAgICAgIHNpZ25hdHVyZTogbmV3IFVpbnQ4QXJyYXkoc2lnbmF0dXJlKSxcbiAgICAgICAgICAgIHg1MDlDZXJ0aWZpY2F0ZTogaXNzdWVyQ2VydEJ5dGVzLFxuICAgICAgICAgICAgaGFzaEFsZ29yaXRobTogc2lnbmF0dXJlQWxnb3JpdGhtLFxuICAgICAgICB9KTtcbiAgICAgICAgaWYgKCF2ZXJpZmllZCkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdJbnZhbGlkIGNlcnRpZmljYXRlIHBhdGg6IGludmFsaWQgc2lnbmF0dXJlJyk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIHRydWU7XG59XG4vLyBDdXN0b20gZXJyb3JzIHRvIGhlbHAgcGFzcyBvbiBjZXJ0YWluIGVycm9yc1xuY2xhc3MgSW52YWxpZFN1YmplY3RBbmRJc3N1ZXIgZXh0ZW5kcyBFcnJvciB7XG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIGNvbnN0IG1lc3NhZ2UgPSAnU3ViamVjdCBpc3N1ZXIgZGlkIG5vdCBtYXRjaCBpc3N1ZXIgc3ViamVjdCc7XG4gICAgICAgIHN1cGVyKG1lc3NhZ2UpO1xuICAgICAgICB0aGlzLm5hbWUgPSAnSW52YWxpZFN1YmplY3RBbmRJc3N1ZXInO1xuICAgIH1cbn1cbmNsYXNzIENlcnRpZmljYXRlTm90WWV0VmFsaWRPckV4cGlyZWQgZXh0ZW5kcyBFcnJvciB7XG4gICAgY29uc3RydWN0b3IobWVzc2FnZSkge1xuICAgICAgICBzdXBlcihtZXNzYWdlKTtcbiAgICAgICAgdGhpcy5uYW1lID0gJ0NlcnRpZmljYXRlTm90WWV0VmFsaWRPckV4cGlyZWQnO1xuICAgIH1cbn1cbiJdLCJuYW1lcyI6WyJBc25TZXJpYWxpemVyIiwiaXNDZXJ0UmV2b2tlZCIsInZlcmlmeVNpZ25hdHVyZSIsIm1hcFg1MDlTaWduYXR1cmVBbGdUb0NPU0VBbGciLCJnZXRDZXJ0aWZpY2F0ZUluZm8iLCJjb252ZXJ0UEVNVG9CeXRlcyIsInZhbGlkYXRlQ2VydGlmaWNhdGVQYXRoIiwiY2VydGlmaWNhdGVzIiwicm9vdENlcnRpZmljYXRlcyIsImxlbmd0aCIsImludmFsaWRTdWJqZWN0QW5kSXNzdWVyRXJyb3IiLCJjZXJ0aWZpY2F0ZU5vdFlldFZhbGlkT3JFeHBpcmVkRXJyb3JNZXNzYWdlIiwidW5kZWZpbmVkIiwicm9vdENlcnQiLCJjZXJ0c1dpdGhSb290IiwiY29uY2F0IiwiX3ZhbGlkYXRlUGF0aCIsImVyciIsIkludmFsaWRTdWJqZWN0QW5kSXNzdWVyIiwiQ2VydGlmaWNhdGVOb3RZZXRWYWxpZE9yRXhwaXJlZCIsIm1lc3NhZ2UiLCJTZXQiLCJzaXplIiwiRXJyb3IiLCJpIiwic3ViamVjdFBlbSIsImlzTGVhZkNlcnQiLCJpc1Jvb3RDZXJ0IiwiaXNzdWVyUGVtIiwic3ViamVjdEluZm8iLCJpc3N1ZXJJbmZvIiwieDUwOVN1YmplY3QiLCJwYXJzZWRDZXJ0aWZpY2F0ZSIsInN1YmplY3RDZXJ0UmV2b2tlZCIsIm5vdEJlZm9yZSIsIm5vdEFmdGVyIiwibm93IiwiRGF0ZSIsImlzc3VlciIsImNvbWJpbmVkIiwic3ViamVjdCIsImRhdGEiLCJzZXJpYWxpemUiLCJ0YnNDZXJ0aWZpY2F0ZSIsInNpZ25hdHVyZSIsInNpZ25hdHVyZVZhbHVlIiwic2lnbmF0dXJlQWxnb3JpdGhtIiwiYWxnb3JpdGhtIiwiaXNzdWVyQ2VydEJ5dGVzIiwidmVyaWZpZWQiLCJVaW50OEFycmF5IiwieDUwOUNlcnRpZmljYXRlIiwiaGFzaEFsZ29yaXRobSIsImNvbnN0cnVjdG9yIiwibmFtZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/validateCertificatePath.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/verifySignature.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@simplewebauthn/server/esm/helpers/verifySignature.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   _verifySignatureInternals: () => (/* binding */ _verifySignatureInternals),\n/* harmony export */   verifySignature: () => (/* binding */ verifySignature)\n/* harmony export */ });\n/* harmony import */ var _iso_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./iso/index.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/index.js\");\n/* harmony import */ var _decodeCredentialPublicKey_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./decodeCredentialPublicKey.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/decodeCredentialPublicKey.js\");\n/* harmony import */ var _convertX509PublicKeyToCOSE_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./convertX509PublicKeyToCOSE.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/convertX509PublicKeyToCOSE.js\");\n\n\n\n/**\n * Verify an authenticator's signature\n */ function verifySignature(opts) {\n    const { signature, data, credentialPublicKey, x509Certificate, hashAlgorithm } = opts;\n    if (!x509Certificate && !credentialPublicKey) {\n        throw new Error('Must declare either \"leafCert\" or \"credentialPublicKey\"');\n    }\n    if (x509Certificate && credentialPublicKey) {\n        throw new Error('Must not declare both \"leafCert\" and \"credentialPublicKey\"');\n    }\n    let cosePublicKey = new Map();\n    if (credentialPublicKey) {\n        cosePublicKey = (0,_decodeCredentialPublicKey_js__WEBPACK_IMPORTED_MODULE_1__.decodeCredentialPublicKey)(credentialPublicKey);\n    } else if (x509Certificate) {\n        cosePublicKey = (0,_convertX509PublicKeyToCOSE_js__WEBPACK_IMPORTED_MODULE_2__.convertX509PublicKeyToCOSE)(x509Certificate);\n    }\n    return _verifySignatureInternals.stubThis(_iso_index_js__WEBPACK_IMPORTED_MODULE_0__.isoCrypto.verify({\n        cosePublicKey,\n        signature,\n        data,\n        shaHashOverride: hashAlgorithm\n    }));\n}\n// Make it possible to stub the return value during testing\nconst _verifySignatureInternals = {\n    stubThis: (value)=>value\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNpbXBsZXdlYmF1dGhuL3NlcnZlci9lc20vaGVscGVycy92ZXJpZnlTaWduYXR1cmUuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBMkM7QUFDZ0M7QUFDRTtBQUM3RTs7Q0FFQyxHQUNNLFNBQVNHLGdCQUFnQkMsSUFBSTtJQUNoQyxNQUFNLEVBQUVDLFNBQVMsRUFBRUMsSUFBSSxFQUFFQyxtQkFBbUIsRUFBRUMsZUFBZSxFQUFFQyxhQUFhLEVBQUcsR0FBR0w7SUFDbEYsSUFBSSxDQUFDSSxtQkFBbUIsQ0FBQ0QscUJBQXFCO1FBQzFDLE1BQU0sSUFBSUcsTUFBTTtJQUNwQjtJQUNBLElBQUlGLG1CQUFtQkQscUJBQXFCO1FBQ3hDLE1BQU0sSUFBSUcsTUFBTTtJQUNwQjtJQUNBLElBQUlDLGdCQUFnQixJQUFJQztJQUN4QixJQUFJTCxxQkFBcUI7UUFDckJJLGdCQUFnQlYsd0ZBQXlCQSxDQUFDTTtJQUM5QyxPQUNLLElBQUlDLGlCQUFpQjtRQUN0QkcsZ0JBQWdCVCwwRkFBMEJBLENBQUNNO0lBQy9DO0lBQ0EsT0FBT0ssMEJBQTBCQyxRQUFRLENBQUNkLDJEQUFnQixDQUFDO1FBQ3ZEVztRQUNBTjtRQUNBQztRQUNBVSxpQkFBaUJQO0lBQ3JCO0FBQ0o7QUFDQSwyREFBMkQ7QUFDcEQsTUFBTUksNEJBQTRCO0lBQ3JDQyxVQUFVLENBQUNHLFFBQVVBO0FBQ3pCLEVBQUUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jYW1wdXMtbWluZC8uL25vZGVfbW9kdWxlcy9Ac2ltcGxld2ViYXV0aG4vc2VydmVyL2VzbS9oZWxwZXJzL3ZlcmlmeVNpZ25hdHVyZS5qcz9mY2MyIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGlzb0NyeXB0byB9IGZyb20gJy4vaXNvL2luZGV4LmpzJztcbmltcG9ydCB7IGRlY29kZUNyZWRlbnRpYWxQdWJsaWNLZXkgfSBmcm9tICcuL2RlY29kZUNyZWRlbnRpYWxQdWJsaWNLZXkuanMnO1xuaW1wb3J0IHsgY29udmVydFg1MDlQdWJsaWNLZXlUb0NPU0UgfSBmcm9tICcuL2NvbnZlcnRYNTA5UHVibGljS2V5VG9DT1NFLmpzJztcbi8qKlxuICogVmVyaWZ5IGFuIGF1dGhlbnRpY2F0b3IncyBzaWduYXR1cmVcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHZlcmlmeVNpZ25hdHVyZShvcHRzKSB7XG4gICAgY29uc3QgeyBzaWduYXR1cmUsIGRhdGEsIGNyZWRlbnRpYWxQdWJsaWNLZXksIHg1MDlDZXJ0aWZpY2F0ZSwgaGFzaEFsZ29yaXRobSwgfSA9IG9wdHM7XG4gICAgaWYgKCF4NTA5Q2VydGlmaWNhdGUgJiYgIWNyZWRlbnRpYWxQdWJsaWNLZXkpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdNdXN0IGRlY2xhcmUgZWl0aGVyIFwibGVhZkNlcnRcIiBvciBcImNyZWRlbnRpYWxQdWJsaWNLZXlcIicpO1xuICAgIH1cbiAgICBpZiAoeDUwOUNlcnRpZmljYXRlICYmIGNyZWRlbnRpYWxQdWJsaWNLZXkpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdNdXN0IG5vdCBkZWNsYXJlIGJvdGggXCJsZWFmQ2VydFwiIGFuZCBcImNyZWRlbnRpYWxQdWJsaWNLZXlcIicpO1xuICAgIH1cbiAgICBsZXQgY29zZVB1YmxpY0tleSA9IG5ldyBNYXAoKTtcbiAgICBpZiAoY3JlZGVudGlhbFB1YmxpY0tleSkge1xuICAgICAgICBjb3NlUHVibGljS2V5ID0gZGVjb2RlQ3JlZGVudGlhbFB1YmxpY0tleShjcmVkZW50aWFsUHVibGljS2V5KTtcbiAgICB9XG4gICAgZWxzZSBpZiAoeDUwOUNlcnRpZmljYXRlKSB7XG4gICAgICAgIGNvc2VQdWJsaWNLZXkgPSBjb252ZXJ0WDUwOVB1YmxpY0tleVRvQ09TRSh4NTA5Q2VydGlmaWNhdGUpO1xuICAgIH1cbiAgICByZXR1cm4gX3ZlcmlmeVNpZ25hdHVyZUludGVybmFscy5zdHViVGhpcyhpc29DcnlwdG8udmVyaWZ5KHtcbiAgICAgICAgY29zZVB1YmxpY0tleSxcbiAgICAgICAgc2lnbmF0dXJlLFxuICAgICAgICBkYXRhLFxuICAgICAgICBzaGFIYXNoT3ZlcnJpZGU6IGhhc2hBbGdvcml0aG0sXG4gICAgfSkpO1xufVxuLy8gTWFrZSBpdCBwb3NzaWJsZSB0byBzdHViIHRoZSByZXR1cm4gdmFsdWUgZHVyaW5nIHRlc3RpbmdcbmV4cG9ydCBjb25zdCBfdmVyaWZ5U2lnbmF0dXJlSW50ZXJuYWxzID0ge1xuICAgIHN0dWJUaGlzOiAodmFsdWUpID0+IHZhbHVlLFxufTtcbiJdLCJuYW1lcyI6WyJpc29DcnlwdG8iLCJkZWNvZGVDcmVkZW50aWFsUHVibGljS2V5IiwiY29udmVydFg1MDlQdWJsaWNLZXlUb0NPU0UiLCJ2ZXJpZnlTaWduYXR1cmUiLCJvcHRzIiwic2lnbmF0dXJlIiwiZGF0YSIsImNyZWRlbnRpYWxQdWJsaWNLZXkiLCJ4NTA5Q2VydGlmaWNhdGUiLCJoYXNoQWxnb3JpdGhtIiwiRXJyb3IiLCJjb3NlUHVibGljS2V5IiwiTWFwIiwiX3ZlcmlmeVNpZ25hdHVyZUludGVybmFscyIsInN0dWJUaGlzIiwidmVyaWZ5Iiwic2hhSGFzaE92ZXJyaWRlIiwidmFsdWUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/verifySignature.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@simplewebauthn/server/esm/index.js":
/*!**********************************************************!*\
  !*** ./node_modules/@simplewebauthn/server/esm/index.js ***!
  \**********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MetadataService: () => (/* reexport safe */ _services_metadataService_js__WEBPACK_IMPORTED_MODULE_4__.MetadataService),\n/* harmony export */   SettingsService: () => (/* reexport safe */ _services_settingsService_js__WEBPACK_IMPORTED_MODULE_5__.SettingsService),\n/* harmony export */   generateAuthenticationOptions: () => (/* reexport safe */ _authentication_generateAuthenticationOptions_js__WEBPACK_IMPORTED_MODULE_2__.generateAuthenticationOptions),\n/* harmony export */   generateRegistrationOptions: () => (/* reexport safe */ _registration_generateRegistrationOptions_js__WEBPACK_IMPORTED_MODULE_0__.generateRegistrationOptions),\n/* harmony export */   verifyAuthenticationResponse: () => (/* reexport safe */ _authentication_verifyAuthenticationResponse_js__WEBPACK_IMPORTED_MODULE_3__.verifyAuthenticationResponse),\n/* harmony export */   verifyRegistrationResponse: () => (/* reexport safe */ _registration_verifyRegistrationResponse_js__WEBPACK_IMPORTED_MODULE_1__.verifyRegistrationResponse)\n/* harmony export */ });\n/* harmony import */ var _registration_generateRegistrationOptions_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./registration/generateRegistrationOptions.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/registration/generateRegistrationOptions.js\");\n/* harmony import */ var _registration_verifyRegistrationResponse_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./registration/verifyRegistrationResponse.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/registration/verifyRegistrationResponse.js\");\n/* harmony import */ var _authentication_generateAuthenticationOptions_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./authentication/generateAuthenticationOptions.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/authentication/generateAuthenticationOptions.js\");\n/* harmony import */ var _authentication_verifyAuthenticationResponse_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./authentication/verifyAuthenticationResponse.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/authentication/verifyAuthenticationResponse.js\");\n/* harmony import */ var _services_metadataService_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./services/metadataService.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/services/metadataService.js\");\n/* harmony import */ var _services_settingsService_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./services/settingsService.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/services/settingsService.js\");\n/**\n * @packageDocumentation\n * @module @simplewebauthn/server\n */ \n\n\n\n\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNpbXBsZXdlYmF1dGhuL3NlcnZlci9lc20vaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7O0FBQUE7OztDQUdDLEdBQzJGO0FBQ0Y7QUFDUTtBQUNGO0FBQ2hDO0FBQ0E7QUFDbUciLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jYW1wdXMtbWluZC8uL25vZGVfbW9kdWxlcy9Ac2ltcGxld2ViYXV0aG4vc2VydmVyL2VzbS9pbmRleC5qcz80NzhjIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQHBhY2thZ2VEb2N1bWVudGF0aW9uXG4gKiBAbW9kdWxlIEBzaW1wbGV3ZWJhdXRobi9zZXJ2ZXJcbiAqL1xuaW1wb3J0IHsgZ2VuZXJhdGVSZWdpc3RyYXRpb25PcHRpb25zIH0gZnJvbSAnLi9yZWdpc3RyYXRpb24vZ2VuZXJhdGVSZWdpc3RyYXRpb25PcHRpb25zLmpzJztcbmltcG9ydCB7IHZlcmlmeVJlZ2lzdHJhdGlvblJlc3BvbnNlIH0gZnJvbSAnLi9yZWdpc3RyYXRpb24vdmVyaWZ5UmVnaXN0cmF0aW9uUmVzcG9uc2UuanMnO1xuaW1wb3J0IHsgZ2VuZXJhdGVBdXRoZW50aWNhdGlvbk9wdGlvbnMgfSBmcm9tICcuL2F1dGhlbnRpY2F0aW9uL2dlbmVyYXRlQXV0aGVudGljYXRpb25PcHRpb25zLmpzJztcbmltcG9ydCB7IHZlcmlmeUF1dGhlbnRpY2F0aW9uUmVzcG9uc2UgfSBmcm9tICcuL2F1dGhlbnRpY2F0aW9uL3ZlcmlmeUF1dGhlbnRpY2F0aW9uUmVzcG9uc2UuanMnO1xuaW1wb3J0IHsgTWV0YWRhdGFTZXJ2aWNlIH0gZnJvbSAnLi9zZXJ2aWNlcy9tZXRhZGF0YVNlcnZpY2UuanMnO1xuaW1wb3J0IHsgU2V0dGluZ3NTZXJ2aWNlIH0gZnJvbSAnLi9zZXJ2aWNlcy9zZXR0aW5nc1NlcnZpY2UuanMnO1xuZXhwb3J0IHsgZ2VuZXJhdGVBdXRoZW50aWNhdGlvbk9wdGlvbnMsIGdlbmVyYXRlUmVnaXN0cmF0aW9uT3B0aW9ucywgTWV0YWRhdGFTZXJ2aWNlLCBTZXR0aW5nc1NlcnZpY2UsIHZlcmlmeUF1dGhlbnRpY2F0aW9uUmVzcG9uc2UsIHZlcmlmeVJlZ2lzdHJhdGlvblJlc3BvbnNlLCB9O1xuIl0sIm5hbWVzIjpbImdlbmVyYXRlUmVnaXN0cmF0aW9uT3B0aW9ucyIsInZlcmlmeVJlZ2lzdHJhdGlvblJlc3BvbnNlIiwiZ2VuZXJhdGVBdXRoZW50aWNhdGlvbk9wdGlvbnMiLCJ2ZXJpZnlBdXRoZW50aWNhdGlvblJlc3BvbnNlIiwiTWV0YWRhdGFTZXJ2aWNlIiwiU2V0dGluZ3NTZXJ2aWNlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@simplewebauthn/server/esm/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@simplewebauthn/server/esm/metadata/parseJWT.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@simplewebauthn/server/esm/metadata/parseJWT.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   parseJWT: () => (/* binding */ parseJWT)\n/* harmony export */ });\n/* harmony import */ var _helpers_iso_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../helpers/iso/index.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/index.js\");\n\n/**\n * Process a JWT into Javascript-friendly data structures\n */ function parseJWT(jwt) {\n    const parts = jwt.split(\".\");\n    return [\n        JSON.parse(_helpers_iso_index_js__WEBPACK_IMPORTED_MODULE_0__.isoBase64URL.toString(parts[0])),\n        JSON.parse(_helpers_iso_index_js__WEBPACK_IMPORTED_MODULE_0__.isoBase64URL.toString(parts[1])),\n        parts[2]\n    ];\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNpbXBsZXdlYmF1dGhuL3NlcnZlci9lc20vbWV0YWRhdGEvcGFyc2VKV1QuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBdUQ7QUFDdkQ7O0NBRUMsR0FDTSxTQUFTQyxTQUFTQyxHQUFHO0lBQ3hCLE1BQU1DLFFBQVFELElBQUlFLEtBQUssQ0FBQztJQUN4QixPQUFPO1FBQ0hDLEtBQUtDLEtBQUssQ0FBQ04sd0VBQXFCLENBQUNHLEtBQUssQ0FBQyxFQUFFO1FBQ3pDRSxLQUFLQyxLQUFLLENBQUNOLHdFQUFxQixDQUFDRyxLQUFLLENBQUMsRUFBRTtRQUN6Q0EsS0FBSyxDQUFDLEVBQUU7S0FDWDtBQUNMIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vY2FtcHVzLW1pbmQvLi9ub2RlX21vZHVsZXMvQHNpbXBsZXdlYmF1dGhuL3NlcnZlci9lc20vbWV0YWRhdGEvcGFyc2VKV1QuanM/ZjU4MSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBpc29CYXNlNjRVUkwgfSBmcm9tICcuLi9oZWxwZXJzL2lzby9pbmRleC5qcyc7XG4vKipcbiAqIFByb2Nlc3MgYSBKV1QgaW50byBKYXZhc2NyaXB0LWZyaWVuZGx5IGRhdGEgc3RydWN0dXJlc1xuICovXG5leHBvcnQgZnVuY3Rpb24gcGFyc2VKV1Qoand0KSB7XG4gICAgY29uc3QgcGFydHMgPSBqd3Quc3BsaXQoJy4nKTtcbiAgICByZXR1cm4gW1xuICAgICAgICBKU09OLnBhcnNlKGlzb0Jhc2U2NFVSTC50b1N0cmluZyhwYXJ0c1swXSkpLFxuICAgICAgICBKU09OLnBhcnNlKGlzb0Jhc2U2NFVSTC50b1N0cmluZyhwYXJ0c1sxXSkpLFxuICAgICAgICBwYXJ0c1syXSxcbiAgICBdO1xufVxuIl0sIm5hbWVzIjpbImlzb0Jhc2U2NFVSTCIsInBhcnNlSldUIiwiand0IiwicGFydHMiLCJzcGxpdCIsIkpTT04iLCJwYXJzZSIsInRvU3RyaW5nIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@simplewebauthn/server/esm/metadata/parseJWT.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@simplewebauthn/server/esm/metadata/verifyAttestationWithMetadata.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@simplewebauthn/server/esm/metadata/verifyAttestationWithMetadata.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   algSignToCOSEInfoMap: () => (/* binding */ algSignToCOSEInfoMap),\n/* harmony export */   verifyAttestationWithMetadata: () => (/* binding */ verifyAttestationWithMetadata)\n/* harmony export */ });\n/* harmony import */ var _helpers_convertCertBufferToPEM_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../helpers/convertCertBufferToPEM.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/convertCertBufferToPEM.js\");\n/* harmony import */ var _helpers_validateCertificatePath_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../helpers/validateCertificatePath.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/validateCertificatePath.js\");\n/* harmony import */ var _helpers_decodeCredentialPublicKey_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../helpers/decodeCredentialPublicKey.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/decodeCredentialPublicKey.js\");\n/* harmony import */ var _helpers_cose_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../helpers/cose.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/cose.js\");\n\n\n\n\n/**\n * Match properties of the authenticator's attestation statement against expected values as\n * registered with the FIDO Alliance Metadata Service\n */ async function verifyAttestationWithMetadata({ statement, credentialPublicKey, x5c, attestationStatementAlg }) {\n    const { authenticationAlgorithms, authenticatorGetInfo, attestationRootCertificates } = statement;\n    // Make sure the alg in the attestation statement matches one of the ones specified in metadata\n    const keypairCOSEAlgs = new Set();\n    authenticationAlgorithms.forEach((algSign)=>{\n        // Map algSign string to { kty, alg, crv }\n        const algSignCOSEINFO = algSignToCOSEInfoMap[algSign];\n        // Keeping this statement here just in case MDS returns something unexpected\n        if (algSignCOSEINFO) {\n            keypairCOSEAlgs.add(algSignCOSEINFO);\n        }\n    });\n    // Extract the public key's COSE info for comparison\n    const decodedPublicKey = (0,_helpers_decodeCredentialPublicKey_js__WEBPACK_IMPORTED_MODULE_2__.decodeCredentialPublicKey)(credentialPublicKey);\n    const kty = decodedPublicKey.get(_helpers_cose_js__WEBPACK_IMPORTED_MODULE_3__.COSEKEYS.kty);\n    const alg = decodedPublicKey.get(_helpers_cose_js__WEBPACK_IMPORTED_MODULE_3__.COSEKEYS.alg);\n    if (!kty) {\n        throw new Error(\"Credential public key was missing kty\");\n    }\n    if (!alg) {\n        throw new Error(\"Credential public key was missing alg\");\n    }\n    if (!kty) {\n        throw new Error(\"Credential public key was missing kty\");\n    }\n    // Assume everything is a number because these values should be\n    const publicKeyCOSEInfo = {\n        kty,\n        alg\n    };\n    if ((0,_helpers_cose_js__WEBPACK_IMPORTED_MODULE_3__.isCOSEPublicKeyEC2)(decodedPublicKey)) {\n        const crv = decodedPublicKey.get(_helpers_cose_js__WEBPACK_IMPORTED_MODULE_3__.COSEKEYS.crv);\n        publicKeyCOSEInfo.crv = crv;\n    }\n    /**\n     * Attempt to match the credential public key's algorithm to one specified in the device's\n     * metadata\n     */ let foundMatch = false;\n    for (const keypairAlg of keypairCOSEAlgs){\n        // Make sure algorithm and key type match\n        if (keypairAlg.alg === publicKeyCOSEInfo.alg && keypairAlg.kty === publicKeyCOSEInfo.kty) {\n            // If not an RSA keypair then make sure curve numbers match too\n            if ((keypairAlg.kty === _helpers_cose_js__WEBPACK_IMPORTED_MODULE_3__.COSEKTY.EC2 || keypairAlg.kty === _helpers_cose_js__WEBPACK_IMPORTED_MODULE_3__.COSEKTY.OKP) && keypairAlg.crv === publicKeyCOSEInfo.crv) {\n                foundMatch = true;\n            } else {\n                // We've matched an RSA public key's properties\n                foundMatch = true;\n            }\n        }\n        if (foundMatch) {\n            break;\n        }\n    }\n    // Make sure the public key is one of the allowed algorithms\n    if (!foundMatch) {\n        /**\n         * Craft some useful error output from the MDS algorithms\n         *\n         * Example:\n         *\n         * ```\n         * [\n         *   'rsassa_pss_sha256_raw' (COSE info: { kty: 3, alg: -37 }),\n         *   'secp256k1_ecdsa_sha256_raw' (COSE info: { kty: 2, alg: -47, crv: 8 })\n         * ]\n         * ```\n         */ const debugMDSAlgs = authenticationAlgorithms.map((algSign)=>`'${algSign}' (COSE info: ${stringifyCOSEInfo(algSignToCOSEInfoMap[algSign])})`);\n        const strMDSAlgs = JSON.stringify(debugMDSAlgs, null, 2).replace(/\"/g, \"\");\n        /**\n         * Construct useful error output about the public key\n         */ const strPubKeyAlg = stringifyCOSEInfo(publicKeyCOSEInfo);\n        throw new Error(`Public key parameters ${strPubKeyAlg} did not match any of the following metadata algorithms:\\n${strMDSAlgs}`);\n    }\n    /**\n     * Confirm the attestation statement's algorithm is one supported according to metadata\n     */ if (attestationStatementAlg !== undefined && authenticatorGetInfo?.algorithms !== undefined) {\n        const getInfoAlgs = authenticatorGetInfo.algorithms.map((_alg)=>_alg.alg);\n        if (getInfoAlgs.indexOf(attestationStatementAlg) < 0) {\n            throw new Error(`Attestation statement alg ${attestationStatementAlg} did not match one of ${getInfoAlgs}`);\n        }\n    }\n    // Prepare to check the certificate chain\n    const authenticatorCerts = x5c.map(_helpers_convertCertBufferToPEM_js__WEBPACK_IMPORTED_MODULE_0__.convertCertBufferToPEM);\n    const statementRootCerts = attestationRootCertificates.map(_helpers_convertCertBufferToPEM_js__WEBPACK_IMPORTED_MODULE_0__.convertCertBufferToPEM);\n    /**\n     * If an authenticator returns exactly one certificate in its x5c, and that cert is found in the\n     * metadata statement then the authenticator is \"self-referencing\". In this case we forego\n     * certificate chain validation.\n     */ let authenticatorIsSelfReferencing = false;\n    if (authenticatorCerts.length === 1 && statementRootCerts.indexOf(authenticatorCerts[0]) >= 0) {\n        authenticatorIsSelfReferencing = true;\n    }\n    if (!authenticatorIsSelfReferencing) {\n        try {\n            await (0,_helpers_validateCertificatePath_js__WEBPACK_IMPORTED_MODULE_1__.validateCertificatePath)(authenticatorCerts, statementRootCerts);\n        } catch (err) {\n            const _err = err;\n            throw new Error(`Could not validate certificate path with any metadata root certificates: ${_err.message}`);\n        }\n    }\n    return true;\n}\n/**\n * Convert ALG_SIGN values to COSE info\n *\n * Values pulled from `ALG_KEY_COSE` definitions in the FIDO Registry of Predefined Values\n *\n * https://fidoalliance.org/specs/common-specs/fido-registry-v2.2-ps-20220523.html#authentication-algorithms\n */ const algSignToCOSEInfoMap = {\n    secp256r1_ecdsa_sha256_raw: {\n        kty: 2,\n        alg: -7,\n        crv: 1\n    },\n    secp256r1_ecdsa_sha256_der: {\n        kty: 2,\n        alg: -7,\n        crv: 1\n    },\n    rsassa_pss_sha256_raw: {\n        kty: 3,\n        alg: -37\n    },\n    rsassa_pss_sha256_der: {\n        kty: 3,\n        alg: -37\n    },\n    secp256k1_ecdsa_sha256_raw: {\n        kty: 2,\n        alg: -47,\n        crv: 8\n    },\n    secp256k1_ecdsa_sha256_der: {\n        kty: 2,\n        alg: -47,\n        crv: 8\n    },\n    rsassa_pss_sha384_raw: {\n        kty: 3,\n        alg: -38\n    },\n    rsassa_pkcsv15_sha256_raw: {\n        kty: 3,\n        alg: -257\n    },\n    rsassa_pkcsv15_sha384_raw: {\n        kty: 3,\n        alg: -258\n    },\n    rsassa_pkcsv15_sha512_raw: {\n        kty: 3,\n        alg: -259\n    },\n    rsassa_pkcsv15_sha1_raw: {\n        kty: 3,\n        alg: -65535\n    },\n    secp384r1_ecdsa_sha384_raw: {\n        kty: 2,\n        alg: -35,\n        crv: 2\n    },\n    secp512r1_ecdsa_sha256_raw: {\n        kty: 2,\n        alg: -36,\n        crv: 3\n    },\n    ed25519_eddsa_sha512_raw: {\n        kty: 1,\n        alg: -8,\n        crv: 6\n    }\n};\n/**\n * A helper to format COSEInfo a little nicer than we can achieve with JSON.stringify()\n *\n * Input: `{ \"kty\": 3, \"alg\": -257 }`\n *\n * Output: `\"{ kty: 3, alg: -257 }\"`\n */ function stringifyCOSEInfo(info) {\n    const { kty, alg, crv } = info;\n    let toReturn = \"\";\n    if (kty !== _helpers_cose_js__WEBPACK_IMPORTED_MODULE_3__.COSEKTY.RSA) {\n        toReturn = `{ kty: ${kty}, alg: ${alg}, crv: ${crv} }`;\n    } else {\n        toReturn = `{ kty: ${kty}, alg: ${alg} }`;\n    }\n    return toReturn;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@simplewebauthn/server/esm/metadata/verifyAttestationWithMetadata.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@simplewebauthn/server/esm/metadata/verifyJWT.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@simplewebauthn/server/esm/metadata/verifyJWT.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   verifyJWT: () => (/* binding */ verifyJWT)\n/* harmony export */ });\n/* harmony import */ var _helpers_convertX509PublicKeyToCOSE_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../helpers/convertX509PublicKeyToCOSE.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/convertX509PublicKeyToCOSE.js\");\n/* harmony import */ var _helpers_iso_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../helpers/iso/index.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/index.js\");\n/* harmony import */ var _helpers_cose_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../helpers/cose.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/cose.js\");\n/* harmony import */ var _helpers_iso_isoCrypto_verifyEC2_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../helpers/iso/isoCrypto/verifyEC2.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/isoCrypto/verifyEC2.js\");\n/* harmony import */ var _helpers_iso_isoCrypto_verifyRSA_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../helpers/iso/isoCrypto/verifyRSA.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/isoCrypto/verifyRSA.js\");\n\n\n\n\n\n/**\n * Lightweight verification for FIDO MDS JWTs. Supports use of EC2 and RSA.\n *\n * If this ever needs to support more JWS algorithms, here's the list of them:\n *\n * https://www.rfc-editor.org/rfc/rfc7518.html#section-3.1\n *\n * (Pulled from https://www.rfc-editor.org/rfc/rfc7515#section-4.1.1)\n */ function verifyJWT(jwt, leafCert) {\n    const [header, payload, signature] = jwt.split(\".\");\n    const certCOSE = (0,_helpers_convertX509PublicKeyToCOSE_js__WEBPACK_IMPORTED_MODULE_0__.convertX509PublicKeyToCOSE)(leafCert);\n    const data = _helpers_iso_index_js__WEBPACK_IMPORTED_MODULE_1__.isoUint8Array.fromUTF8String(`${header}.${payload}`);\n    const signatureBytes = _helpers_iso_index_js__WEBPACK_IMPORTED_MODULE_1__.isoBase64URL.toBuffer(signature);\n    if ((0,_helpers_cose_js__WEBPACK_IMPORTED_MODULE_2__.isCOSEPublicKeyEC2)(certCOSE)) {\n        return (0,_helpers_iso_isoCrypto_verifyEC2_js__WEBPACK_IMPORTED_MODULE_3__.verifyEC2)({\n            data,\n            signature: signatureBytes,\n            cosePublicKey: certCOSE,\n            shaHashOverride: _helpers_cose_js__WEBPACK_IMPORTED_MODULE_2__.COSEALG.ES256\n        });\n    } else if ((0,_helpers_cose_js__WEBPACK_IMPORTED_MODULE_2__.isCOSEPublicKeyRSA)(certCOSE)) {\n        return (0,_helpers_iso_isoCrypto_verifyRSA_js__WEBPACK_IMPORTED_MODULE_4__.verifyRSA)({\n            data,\n            signature: signatureBytes,\n            cosePublicKey: certCOSE\n        });\n    }\n    const kty = certCOSE.get(_helpers_cose_js__WEBPACK_IMPORTED_MODULE_2__.COSEKEYS.kty);\n    throw new Error(`JWT verification with public key of kty ${kty} is not supported by this method`);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNpbXBsZXdlYmF1dGhuL3NlcnZlci9lc20vbWV0YWRhdGEvdmVyaWZ5SldULmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFzRjtBQUNoQjtBQUN5QjtBQUM3QjtBQUNBO0FBQ2xFOzs7Ozs7OztDQVFDLEdBQ00sU0FBU1MsVUFBVUMsR0FBRyxFQUFFQyxRQUFRO0lBQ25DLE1BQU0sQ0FBQ0MsUUFBUUMsU0FBU0MsVUFBVSxHQUFHSixJQUFJSyxLQUFLLENBQUM7SUFDL0MsTUFBTUMsV0FBV2hCLGtHQUEwQkEsQ0FBQ1c7SUFDNUMsTUFBTU0sT0FBT2YsK0VBQTRCLENBQUMsQ0FBQyxFQUFFVSxPQUFPLENBQUMsRUFBRUMsUUFBUSxDQUFDO0lBQ2hFLE1BQU1NLGlCQUFpQmxCLHdFQUFxQixDQUFDYTtJQUM3QyxJQUFJVCxvRUFBa0JBLENBQUNXLFdBQVc7UUFDOUIsT0FBT1QsOEVBQVNBLENBQUM7WUFDYlU7WUFDQUgsV0FBV0s7WUFDWEUsZUFBZUw7WUFDZk0saUJBQWlCbkIscURBQU9BLENBQUNvQixLQUFLO1FBQ2xDO0lBQ0osT0FDSyxJQUFJakIsb0VBQWtCQSxDQUFDVSxXQUFXO1FBQ25DLE9BQU9SLDhFQUFTQSxDQUFDO1lBQ2JTO1lBQ0FILFdBQVdLO1lBQ1hFLGVBQWVMO1FBQ25CO0lBQ0o7SUFDQSxNQUFNUSxNQUFNUixTQUFTUyxHQUFHLENBQUNyQixzREFBUUEsQ0FBQ29CLEdBQUc7SUFDckMsTUFBTSxJQUFJRSxNQUFNLENBQUMsd0NBQXdDLEVBQUVGLElBQUksZ0NBQWdDLENBQUM7QUFDcEciLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jYW1wdXMtbWluZC8uL25vZGVfbW9kdWxlcy9Ac2ltcGxld2ViYXV0aG4vc2VydmVyL2VzbS9tZXRhZGF0YS92ZXJpZnlKV1QuanM/NmFiNiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjb252ZXJ0WDUwOVB1YmxpY0tleVRvQ09TRSB9IGZyb20gJy4uL2hlbHBlcnMvY29udmVydFg1MDlQdWJsaWNLZXlUb0NPU0UuanMnO1xuaW1wb3J0IHsgaXNvQmFzZTY0VVJMLCBpc29VaW50OEFycmF5IH0gZnJvbSAnLi4vaGVscGVycy9pc28vaW5kZXguanMnO1xuaW1wb3J0IHsgQ09TRUFMRywgQ09TRUtFWVMsIGlzQ09TRVB1YmxpY0tleUVDMiwgaXNDT1NFUHVibGljS2V5UlNBIH0gZnJvbSAnLi4vaGVscGVycy9jb3NlLmpzJztcbmltcG9ydCB7IHZlcmlmeUVDMiB9IGZyb20gJy4uL2hlbHBlcnMvaXNvL2lzb0NyeXB0by92ZXJpZnlFQzIuanMnO1xuaW1wb3J0IHsgdmVyaWZ5UlNBIH0gZnJvbSAnLi4vaGVscGVycy9pc28vaXNvQ3J5cHRvL3ZlcmlmeVJTQS5qcyc7XG4vKipcbiAqIExpZ2h0d2VpZ2h0IHZlcmlmaWNhdGlvbiBmb3IgRklETyBNRFMgSldUcy4gU3VwcG9ydHMgdXNlIG9mIEVDMiBhbmQgUlNBLlxuICpcbiAqIElmIHRoaXMgZXZlciBuZWVkcyB0byBzdXBwb3J0IG1vcmUgSldTIGFsZ29yaXRobXMsIGhlcmUncyB0aGUgbGlzdCBvZiB0aGVtOlxuICpcbiAqIGh0dHBzOi8vd3d3LnJmYy1lZGl0b3Iub3JnL3JmYy9yZmM3NTE4Lmh0bWwjc2VjdGlvbi0zLjFcbiAqXG4gKiAoUHVsbGVkIGZyb20gaHR0cHM6Ly93d3cucmZjLWVkaXRvci5vcmcvcmZjL3JmYzc1MTUjc2VjdGlvbi00LjEuMSlcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHZlcmlmeUpXVChqd3QsIGxlYWZDZXJ0KSB7XG4gICAgY29uc3QgW2hlYWRlciwgcGF5bG9hZCwgc2lnbmF0dXJlXSA9IGp3dC5zcGxpdCgnLicpO1xuICAgIGNvbnN0IGNlcnRDT1NFID0gY29udmVydFg1MDlQdWJsaWNLZXlUb0NPU0UobGVhZkNlcnQpO1xuICAgIGNvbnN0IGRhdGEgPSBpc29VaW50OEFycmF5LmZyb21VVEY4U3RyaW5nKGAke2hlYWRlcn0uJHtwYXlsb2FkfWApO1xuICAgIGNvbnN0IHNpZ25hdHVyZUJ5dGVzID0gaXNvQmFzZTY0VVJMLnRvQnVmZmVyKHNpZ25hdHVyZSk7XG4gICAgaWYgKGlzQ09TRVB1YmxpY0tleUVDMihjZXJ0Q09TRSkpIHtcbiAgICAgICAgcmV0dXJuIHZlcmlmeUVDMih7XG4gICAgICAgICAgICBkYXRhLFxuICAgICAgICAgICAgc2lnbmF0dXJlOiBzaWduYXR1cmVCeXRlcyxcbiAgICAgICAgICAgIGNvc2VQdWJsaWNLZXk6IGNlcnRDT1NFLFxuICAgICAgICAgICAgc2hhSGFzaE92ZXJyaWRlOiBDT1NFQUxHLkVTMjU2LFxuICAgICAgICB9KTtcbiAgICB9XG4gICAgZWxzZSBpZiAoaXNDT1NFUHVibGljS2V5UlNBKGNlcnRDT1NFKSkge1xuICAgICAgICByZXR1cm4gdmVyaWZ5UlNBKHtcbiAgICAgICAgICAgIGRhdGEsXG4gICAgICAgICAgICBzaWduYXR1cmU6IHNpZ25hdHVyZUJ5dGVzLFxuICAgICAgICAgICAgY29zZVB1YmxpY0tleTogY2VydENPU0UsXG4gICAgICAgIH0pO1xuICAgIH1cbiAgICBjb25zdCBrdHkgPSBjZXJ0Q09TRS5nZXQoQ09TRUtFWVMua3R5KTtcbiAgICB0aHJvdyBuZXcgRXJyb3IoYEpXVCB2ZXJpZmljYXRpb24gd2l0aCBwdWJsaWMga2V5IG9mIGt0eSAke2t0eX0gaXMgbm90IHN1cHBvcnRlZCBieSB0aGlzIG1ldGhvZGApO1xufVxuIl0sIm5hbWVzIjpbImNvbnZlcnRYNTA5UHVibGljS2V5VG9DT1NFIiwiaXNvQmFzZTY0VVJMIiwiaXNvVWludDhBcnJheSIsIkNPU0VBTEciLCJDT1NFS0VZUyIsImlzQ09TRVB1YmxpY0tleUVDMiIsImlzQ09TRVB1YmxpY0tleVJTQSIsInZlcmlmeUVDMiIsInZlcmlmeVJTQSIsInZlcmlmeUpXVCIsImp3dCIsImxlYWZDZXJ0IiwiaGVhZGVyIiwicGF5bG9hZCIsInNpZ25hdHVyZSIsInNwbGl0IiwiY2VydENPU0UiLCJkYXRhIiwiZnJvbVVURjhTdHJpbmciLCJzaWduYXR1cmVCeXRlcyIsInRvQnVmZmVyIiwiY29zZVB1YmxpY0tleSIsInNoYUhhc2hPdmVycmlkZSIsIkVTMjU2Iiwia3R5IiwiZ2V0IiwiRXJyb3IiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@simplewebauthn/server/esm/metadata/verifyJWT.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@simplewebauthn/server/esm/registration/generateRegistrationOptions.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/@simplewebauthn/server/esm/registration/generateRegistrationOptions.js ***!
  \*********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   generateRegistrationOptions: () => (/* binding */ generateRegistrationOptions),\n/* harmony export */   supportedCOSEAlgorithmIdentifiers: () => (/* binding */ supportedCOSEAlgorithmIdentifiers)\n/* harmony export */ });\n/* harmony import */ var _helpers_generateChallenge_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../helpers/generateChallenge.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/generateChallenge.js\");\n/* harmony import */ var _helpers_iso_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../helpers/iso/index.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/index.js\");\n\n\n/**\n * Supported crypto algo identifiers\n * See https://w3c.github.io/webauthn/#sctn-alg-identifier\n * and https://www.iana.org/assignments/cose/cose.xhtml#algorithms\n */ const supportedCOSEAlgorithmIdentifiers = [\n    // EdDSA (In first position to encourage authenticators to use this over ES256)\n    -8,\n    // ECDSA w/ SHA-256\n    -7,\n    // ECDSA w/ SHA-512\n    -36,\n    // RSASSA-PSS w/ SHA-256\n    -37,\n    // RSASSA-PSS w/ SHA-384\n    -38,\n    // RSASSA-PSS w/ SHA-512\n    -39,\n    // RSASSA-PKCS1-v1_5 w/ SHA-256\n    -257,\n    // RSASSA-PKCS1-v1_5 w/ SHA-384\n    -258,\n    // RSASSA-PKCS1-v1_5 w/ SHA-512\n    -259,\n    // RSASSA-PKCS1-v1_5 w/ SHA-1 (Deprecated; here for legacy support)\n    -65535\n];\n/**\n * Set up some default authenticator selection options as per the latest spec:\n * https://www.w3.org/TR/webauthn-2/#dictdef-authenticatorselectioncriteria\n *\n * Helps with some older platforms (e.g. Android 7.0 Nougat) that may not be aware of these\n * defaults.\n */ const defaultAuthenticatorSelection = {\n    residentKey: \"preferred\",\n    userVerification: \"preferred\"\n};\n/**\n * Use the most commonly-supported algorithms\n * See the following:\n *   - https://www.iana.org/assignments/cose/cose.xhtml#algorithms\n *   - https://w3c.github.io/webauthn/#dom-publickeycredentialcreationoptions-pubkeycredparams\n */ const defaultSupportedAlgorithmIDs = [\n    -8,\n    -7,\n    -257\n];\n/**\n * Prepare a value to pass into navigator.credentials.create(...) for authenticator \"registration\"\n *\n * **Options:**\n *\n * @param rpName User-visible, \"friendly\" website/service name\n * @param rpID Valid domain name (after `https://`)\n * @param userID User's website-specific unique ID\n * @param userName User's website-specific username (email, etc...)\n * @param challenge Random value the authenticator needs to sign and pass back\n * @param userDisplayName User's actual name\n * @param timeout How long (in ms) the user can take to complete attestation\n * @param attestationType Specific attestation statement\n * @param excludeCredentials Authenticators registered by the user so the user can't register the\n * same credential multiple times\n * @param authenticatorSelection Advanced criteria for restricting the types of authenticators that\n * may be used\n * @param extensions Additional plugins the authenticator or browser should use during attestation\n * @param supportedAlgorithmIDs Array of numeric COSE algorithm identifiers supported for\n * attestation by this RP. See https://www.iana.org/assignments/cose/cose.xhtml#algorithms\n */ async function generateRegistrationOptions(options) {\n    const { rpName, rpID, userID, userName, challenge = await (0,_helpers_generateChallenge_js__WEBPACK_IMPORTED_MODULE_0__.generateChallenge)(), userDisplayName = userName, timeout = 60000, attestationType = \"none\", excludeCredentials = [], authenticatorSelection = defaultAuthenticatorSelection, extensions, supportedAlgorithmIDs = defaultSupportedAlgorithmIDs } = options;\n    /**\n     * Prepare pubKeyCredParams from the array of algorithm ID's\n     */ const pubKeyCredParams = supportedAlgorithmIDs.map((id)=>({\n            alg: id,\n            type: \"public-key\"\n        }));\n    /**\n     * Capture some of the nuances of how `residentKey` and `requireResidentKey` how either is set\n     * depending on when either is defined in the options\n     */ if (authenticatorSelection.residentKey === undefined) {\n        /**\n         * `residentKey`: \"If no value is given then the effective value is `required` if\n         * requireResidentKey is true or `discouraged` if it is false or absent.\"\n         *\n         * See https://www.w3.org/TR/webauthn-2/#dom-authenticatorselectioncriteria-residentkey\n         */ if (authenticatorSelection.requireResidentKey) {\n            authenticatorSelection.residentKey = \"required\";\n        } else {\n        /**\n             * FIDO Conformance v1.7.2 fails the first test if we do this, even though this is\n             * technically compatible with the WebAuthn L2 spec...\n             */ // authenticatorSelection.residentKey = 'discouraged';\n        }\n    } else {\n        /**\n         * `requireResidentKey`: \"Relying Parties SHOULD set it to true if, and only if, residentKey is\n         * set to \"required\"\"\n         *\n         * Spec says this property defaults to `false` so we should still be okay to assign `false` too\n         *\n         * See https://www.w3.org/TR/webauthn-2/#dom-authenticatorselectioncriteria-requireresidentkey\n         */ authenticatorSelection.requireResidentKey = authenticatorSelection.residentKey === \"required\";\n    }\n    /**\n     * Preserve ability to specify `string` values for challenges\n     */ let _challenge = challenge;\n    if (typeof _challenge === \"string\") {\n        _challenge = _helpers_iso_index_js__WEBPACK_IMPORTED_MODULE_1__.isoUint8Array.fromUTF8String(_challenge);\n    }\n    return {\n        challenge: _helpers_iso_index_js__WEBPACK_IMPORTED_MODULE_1__.isoBase64URL.fromBuffer(_challenge),\n        rp: {\n            name: rpName,\n            id: rpID\n        },\n        user: {\n            id: userID,\n            name: userName,\n            displayName: userDisplayName\n        },\n        pubKeyCredParams,\n        timeout,\n        attestation: attestationType,\n        excludeCredentials: excludeCredentials.map((cred)=>({\n                ...cred,\n                id: _helpers_iso_index_js__WEBPACK_IMPORTED_MODULE_1__.isoBase64URL.fromBuffer(cred.id)\n            })),\n        authenticatorSelection,\n        extensions: {\n            ...extensions,\n            credProps: true\n        }\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@simplewebauthn/server/esm/registration/generateRegistrationOptions.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@simplewebauthn/server/esm/registration/verifications/tpm/constants.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/@simplewebauthn/server/esm/registration/verifications/tpm/constants.js ***!
  \*********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   TPM_ALG: () => (/* binding */ TPM_ALG),\n/* harmony export */   TPM_ECC_CURVE: () => (/* binding */ TPM_ECC_CURVE),\n/* harmony export */   TPM_ECC_CURVE_COSE_CRV_MAP: () => (/* binding */ TPM_ECC_CURVE_COSE_CRV_MAP),\n/* harmony export */   TPM_MANUFACTURERS: () => (/* binding */ TPM_MANUFACTURERS),\n/* harmony export */   TPM_ST: () => (/* binding */ TPM_ST)\n/* harmony export */ });\n// deno-lint-ignore-file no-dupe-keys\n/**\n * A whole lotta domain knowledge is captured here, with hazy connections to source\n * documents. Good places to start searching for more info on these values are the\n * following Trusted Computing Group TPM Library docs linked in the WebAuthn API:\n *\n * - https://www.trustedcomputinggroup.org/wp-content/uploads/TPM-Rev-2.0-Part-1-Architecture-01.38.pdf\n * - https://www.trustedcomputinggroup.org/wp-content/uploads/TPM-Rev-2.0-Part-2-Structures-01.38.pdf\n * - https://www.trustedcomputinggroup.org/wp-content/uploads/TPM-Rev-2.0-Part-3-Commands-01.38.pdf\n */ /**\n * 6.9 TPM_ST (Structure Tags)\n */ const TPM_ST = {\n    0x00c4: \"TPM_ST_RSP_COMMAND\",\n    0x8000: \"TPM_ST_NULL\",\n    0x8001: \"TPM_ST_NO_SESSIONS\",\n    0x8002: \"TPM_ST_SESSIONS\",\n    0x8014: \"TPM_ST_ATTEST_NV\",\n    0x8015: \"TPM_ST_ATTEST_COMMAND_AUDIT\",\n    0x8016: \"TPM_ST_ATTEST_SESSION_AUDIT\",\n    0x8017: \"TPM_ST_ATTEST_CERTIFY\",\n    0x8018: \"TPM_ST_ATTEST_QUOTE\",\n    0x8019: \"TPM_ST_ATTEST_TIME\",\n    0x801a: \"TPM_ST_ATTEST_CREATION\",\n    0x8021: \"TPM_ST_CREATION\",\n    0x8022: \"TPM_ST_VERIFIED\",\n    0x8023: \"TPM_ST_AUTH_SECRET\",\n    0x8024: \"TPM_ST_HASHCHECK\",\n    0x8025: \"TPM_ST_AUTH_SIGNED\",\n    0x8029: \"TPM_ST_FU_MANIFEST\"\n};\n/**\n * 6.3 TPM_ALG_ID\n */ const TPM_ALG = {\n    0x0000: \"TPM_ALG_ERROR\",\n    0x0001: \"TPM_ALG_RSA\",\n    0x0004: \"TPM_ALG_SHA\",\n    // @ts-ignore 2300\n    0x0004: \"TPM_ALG_SHA1\",\n    0x0005: \"TPM_ALG_HMAC\",\n    0x0006: \"TPM_ALG_AES\",\n    0x0007: \"TPM_ALG_MGF1\",\n    0x0008: \"TPM_ALG_KEYEDHASH\",\n    0x000a: \"TPM_ALG_XOR\",\n    0x000b: \"TPM_ALG_SHA256\",\n    0x000c: \"TPM_ALG_SHA384\",\n    0x000d: \"TPM_ALG_SHA512\",\n    0x0010: \"TPM_ALG_NULL\",\n    0x0012: \"TPM_ALG_SM3_256\",\n    0x0013: \"TPM_ALG_SM4\",\n    0x0014: \"TPM_ALG_RSASSA\",\n    0x0015: \"TPM_ALG_RSAES\",\n    0x0016: \"TPM_ALG_RSAPSS\",\n    0x0017: \"TPM_ALG_OAEP\",\n    0x0018: \"TPM_ALG_ECDSA\",\n    0x0019: \"TPM_ALG_ECDH\",\n    0x001a: \"TPM_ALG_ECDAA\",\n    0x001b: \"TPM_ALG_SM2\",\n    0x001c: \"TPM_ALG_ECSCHNORR\",\n    0x001d: \"TPM_ALG_ECMQV\",\n    0x0020: \"TPM_ALG_KDF1_SP800_56A\",\n    0x0021: \"TPM_ALG_KDF2\",\n    0x0022: \"TPM_ALG_KDF1_SP800_108\",\n    0x0023: \"TPM_ALG_ECC\",\n    0x0025: \"TPM_ALG_SYMCIPHER\",\n    0x0026: \"TPM_ALG_CAMELLIA\",\n    0x0040: \"TPM_ALG_CTR\",\n    0x0041: \"TPM_ALG_OFB\",\n    0x0042: \"TPM_ALG_CBC\",\n    0x0043: \"TPM_ALG_CFB\",\n    0x0044: \"TPM_ALG_ECB\"\n};\n/**\n * 6.4 TPM_ECC_CURVE\n */ const TPM_ECC_CURVE = {\n    0x0000: \"TPM_ECC_NONE\",\n    0x0001: \"TPM_ECC_NIST_P192\",\n    0x0002: \"TPM_ECC_NIST_P224\",\n    0x0003: \"TPM_ECC_NIST_P256\",\n    0x0004: \"TPM_ECC_NIST_P384\",\n    0x0005: \"TPM_ECC_NIST_P521\",\n    0x0010: \"TPM_ECC_BN_P256\",\n    0x0011: \"TPM_ECC_BN_P638\",\n    0x0020: \"TPM_ECC_SM2_P256\"\n};\n/**\n * Sourced from https://trustedcomputinggroup.org/resource/vendor-id-registry/\n *\n * Latest version:\n * https://trustedcomputinggroup.org/wp-content/uploads/TCG-TPM-Vendor-ID-Registry-Version-1.02-Revision-1.00.pdf\n */ const TPM_MANUFACTURERS = {\n    \"id:414D4400\": {\n        name: \"AMD\",\n        id: \"AMD\"\n    },\n    \"id:41544D4C\": {\n        name: \"Atmel\",\n        id: \"ATML\"\n    },\n    \"id:4252434D\": {\n        name: \"Broadcom\",\n        id: \"BRCM\"\n    },\n    \"id:49424d00\": {\n        name: \"IBM\",\n        id: \"IBM\"\n    },\n    \"id:49465800\": {\n        name: \"Infineon\",\n        id: \"IFX\"\n    },\n    \"id:494E5443\": {\n        name: \"Intel\",\n        id: \"INTC\"\n    },\n    \"id:4C454E00\": {\n        name: \"Lenovo\",\n        id: \"LEN\"\n    },\n    \"id:4E534D20\": {\n        name: \"National Semiconductor\",\n        id: \"NSM\"\n    },\n    \"id:4E545A00\": {\n        name: \"Nationz\",\n        id: \"NTZ\"\n    },\n    \"id:4E544300\": {\n        name: \"Nuvoton Technology\",\n        id: \"NTC\"\n    },\n    \"id:51434F4D\": {\n        name: \"Qualcomm\",\n        id: \"QCOM\"\n    },\n    \"id:534D5343\": {\n        name: \"SMSC\",\n        id: \"SMSC\"\n    },\n    \"id:53544D20\": {\n        name: \"ST Microelectronics\",\n        id: \"STM\"\n    },\n    \"id:534D534E\": {\n        name: \"Samsung\",\n        id: \"SMSN\"\n    },\n    \"id:534E5300\": {\n        name: \"Sinosun\",\n        id: \"SNS\"\n    },\n    \"id:54584E00\": {\n        name: \"Texas Instruments\",\n        id: \"TXN\"\n    },\n    \"id:57454300\": {\n        name: \"Winbond\",\n        id: \"WEC\"\n    },\n    \"id:524F4343\": {\n        name: \"Fuzhouk Rockchip\",\n        id: \"ROCC\"\n    },\n    \"id:FFFFF1D0\": {\n        name: \"FIDO Alliance\",\n        id: \"FIDO\"\n    }\n};\n/**\n * Match TPM public area curve ID's to `crv` numbers used in COSE public keys\n */ const TPM_ECC_CURVE_COSE_CRV_MAP = {\n    TPM_ECC_NIST_P256: 1,\n    TPM_ECC_NIST_P384: 2,\n    TPM_ECC_NIST_P521: 3,\n    TPM_ECC_BN_P256: 1,\n    TPM_ECC_SM2_P256: 1\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@simplewebauthn/server/esm/registration/verifications/tpm/constants.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@simplewebauthn/server/esm/registration/verifications/tpm/parseCertInfo.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/@simplewebauthn/server/esm/registration/verifications/tpm/parseCertInfo.js ***!
  \*************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   parseCertInfo: () => (/* binding */ parseCertInfo)\n/* harmony export */ });\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./constants.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/registration/verifications/tpm/constants.js\");\n/* harmony import */ var _helpers_iso_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../helpers/iso/index.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/index.js\");\n\n\n/**\n * Cut up a TPM attestation's certInfo into intelligible chunks\n */ function parseCertInfo(certInfo) {\n    let pointer = 0;\n    const dataView = _helpers_iso_index_js__WEBPACK_IMPORTED_MODULE_1__.isoUint8Array.toDataView(certInfo);\n    // Get a magic constant\n    const magic = dataView.getUint32(pointer);\n    pointer += 4;\n    // Determine the algorithm used for attestation\n    const typeBuffer = dataView.getUint16(pointer);\n    pointer += 2;\n    const type = _constants_js__WEBPACK_IMPORTED_MODULE_0__.TPM_ST[typeBuffer];\n    // The name of a parent entity, can be ignored\n    const qualifiedSignerLength = dataView.getUint16(pointer);\n    pointer += 2;\n    const qualifiedSigner = certInfo.slice(pointer, pointer += qualifiedSignerLength);\n    // Get the expected hash of `attsToBeSigned`\n    const extraDataLength = dataView.getUint16(pointer);\n    pointer += 2;\n    const extraData = certInfo.slice(pointer, pointer += extraDataLength);\n    // Information about the TPM device's internal clock, can be ignored\n    const clock = certInfo.slice(pointer, pointer += 8);\n    const resetCount = dataView.getUint32(pointer);\n    pointer += 4;\n    const restartCount = dataView.getUint32(pointer);\n    pointer += 4;\n    const safe = !!certInfo.slice(pointer, pointer += 1);\n    const clockInfo = {\n        clock,\n        resetCount,\n        restartCount,\n        safe\n    };\n    // TPM device firmware version\n    const firmwareVersion = certInfo.slice(pointer, pointer += 8);\n    // Attested Name\n    const attestedNameLength = dataView.getUint16(pointer);\n    pointer += 2;\n    const attestedName = certInfo.slice(pointer, pointer += attestedNameLength);\n    const attestedNameDataView = _helpers_iso_index_js__WEBPACK_IMPORTED_MODULE_1__.isoUint8Array.toDataView(attestedName);\n    // Attested qualified name, can be ignored\n    const qualifiedNameLength = dataView.getUint16(pointer);\n    pointer += 2;\n    const qualifiedName = certInfo.slice(pointer, pointer += qualifiedNameLength);\n    const attested = {\n        nameAlg: _constants_js__WEBPACK_IMPORTED_MODULE_0__.TPM_ALG[attestedNameDataView.getUint16(0)],\n        nameAlgBuffer: attestedName.slice(0, 2),\n        name: attestedName,\n        qualifiedName\n    };\n    return {\n        magic,\n        type,\n        qualifiedSigner,\n        extraData,\n        clockInfo,\n        firmwareVersion,\n        attested\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNpbXBsZXdlYmF1dGhuL3NlcnZlci9lc20vcmVnaXN0cmF0aW9uL3ZlcmlmaWNhdGlvbnMvdHBtL3BhcnNlQ2VydEluZm8uanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQWlEO0FBQ2E7QUFDOUQ7O0NBRUMsR0FDTSxTQUFTRyxjQUFjQyxRQUFRO0lBQ2xDLElBQUlDLFVBQVU7SUFDZCxNQUFNQyxXQUFXSiwyRUFBd0IsQ0FBQ0U7SUFDMUMsdUJBQXVCO0lBQ3ZCLE1BQU1JLFFBQVFGLFNBQVNHLFNBQVMsQ0FBQ0o7SUFDakNBLFdBQVc7SUFDWCwrQ0FBK0M7SUFDL0MsTUFBTUssYUFBYUosU0FBU0ssU0FBUyxDQUFDTjtJQUN0Q0EsV0FBVztJQUNYLE1BQU1PLE9BQU9YLGlEQUFNLENBQUNTLFdBQVc7SUFDL0IsOENBQThDO0lBQzlDLE1BQU1HLHdCQUF3QlAsU0FBU0ssU0FBUyxDQUFDTjtJQUNqREEsV0FBVztJQUNYLE1BQU1TLGtCQUFrQlYsU0FBU1csS0FBSyxDQUFDVixTQUFTQSxXQUFXUTtJQUMzRCw0Q0FBNEM7SUFDNUMsTUFBTUcsa0JBQWtCVixTQUFTSyxTQUFTLENBQUNOO0lBQzNDQSxXQUFXO0lBQ1gsTUFBTVksWUFBWWIsU0FBU1csS0FBSyxDQUFDVixTQUFTQSxXQUFXVztJQUNyRCxvRUFBb0U7SUFDcEUsTUFBTUUsUUFBUWQsU0FBU1csS0FBSyxDQUFDVixTQUFTQSxXQUFXO0lBQ2pELE1BQU1jLGFBQWFiLFNBQVNHLFNBQVMsQ0FBQ0o7SUFDdENBLFdBQVc7SUFDWCxNQUFNZSxlQUFlZCxTQUFTRyxTQUFTLENBQUNKO0lBQ3hDQSxXQUFXO0lBQ1gsTUFBTWdCLE9BQU8sQ0FBQyxDQUFDakIsU0FBU1csS0FBSyxDQUFDVixTQUFTQSxXQUFXO0lBQ2xELE1BQU1pQixZQUFZO1FBQUVKO1FBQU9DO1FBQVlDO1FBQWNDO0lBQUs7SUFDMUQsOEJBQThCO0lBQzlCLE1BQU1FLGtCQUFrQm5CLFNBQVNXLEtBQUssQ0FBQ1YsU0FBU0EsV0FBVztJQUMzRCxnQkFBZ0I7SUFDaEIsTUFBTW1CLHFCQUFxQmxCLFNBQVNLLFNBQVMsQ0FBQ047SUFDOUNBLFdBQVc7SUFDWCxNQUFNb0IsZUFBZXJCLFNBQVNXLEtBQUssQ0FBQ1YsU0FBU0EsV0FBV21CO0lBQ3hELE1BQU1FLHVCQUF1QnhCLDJFQUF3QixDQUFDdUI7SUFDdEQsMENBQTBDO0lBQzFDLE1BQU1FLHNCQUFzQnJCLFNBQVNLLFNBQVMsQ0FBQ047SUFDL0NBLFdBQVc7SUFDWCxNQUFNdUIsZ0JBQWdCeEIsU0FBU1csS0FBSyxDQUFDVixTQUFTQSxXQUFXc0I7SUFDekQsTUFBTUUsV0FBVztRQUNiQyxTQUFTOUIsa0RBQU8sQ0FBQzBCLHFCQUFxQmYsU0FBUyxDQUFDLEdBQUc7UUFDbkRvQixlQUFlTixhQUFhVixLQUFLLENBQUMsR0FBRztRQUNyQ2lCLE1BQU1QO1FBQ05HO0lBQ0o7SUFDQSxPQUFPO1FBQ0hwQjtRQUNBSTtRQUNBRTtRQUNBRztRQUNBSztRQUNBQztRQUNBTTtJQUNKO0FBQ0oiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jYW1wdXMtbWluZC8uL25vZGVfbW9kdWxlcy9Ac2ltcGxld2ViYXV0aG4vc2VydmVyL2VzbS9yZWdpc3RyYXRpb24vdmVyaWZpY2F0aW9ucy90cG0vcGFyc2VDZXJ0SW5mby5qcz85NjdlIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFRQTV9BTEcsIFRQTV9TVCB9IGZyb20gJy4vY29uc3RhbnRzLmpzJztcbmltcG9ydCB7IGlzb1VpbnQ4QXJyYXkgfSBmcm9tICcuLi8uLi8uLi9oZWxwZXJzL2lzby9pbmRleC5qcyc7XG4vKipcbiAqIEN1dCB1cCBhIFRQTSBhdHRlc3RhdGlvbidzIGNlcnRJbmZvIGludG8gaW50ZWxsaWdpYmxlIGNodW5rc1xuICovXG5leHBvcnQgZnVuY3Rpb24gcGFyc2VDZXJ0SW5mbyhjZXJ0SW5mbykge1xuICAgIGxldCBwb2ludGVyID0gMDtcbiAgICBjb25zdCBkYXRhVmlldyA9IGlzb1VpbnQ4QXJyYXkudG9EYXRhVmlldyhjZXJ0SW5mbyk7XG4gICAgLy8gR2V0IGEgbWFnaWMgY29uc3RhbnRcbiAgICBjb25zdCBtYWdpYyA9IGRhdGFWaWV3LmdldFVpbnQzMihwb2ludGVyKTtcbiAgICBwb2ludGVyICs9IDQ7XG4gICAgLy8gRGV0ZXJtaW5lIHRoZSBhbGdvcml0aG0gdXNlZCBmb3IgYXR0ZXN0YXRpb25cbiAgICBjb25zdCB0eXBlQnVmZmVyID0gZGF0YVZpZXcuZ2V0VWludDE2KHBvaW50ZXIpO1xuICAgIHBvaW50ZXIgKz0gMjtcbiAgICBjb25zdCB0eXBlID0gVFBNX1NUW3R5cGVCdWZmZXJdO1xuICAgIC8vIFRoZSBuYW1lIG9mIGEgcGFyZW50IGVudGl0eSwgY2FuIGJlIGlnbm9yZWRcbiAgICBjb25zdCBxdWFsaWZpZWRTaWduZXJMZW5ndGggPSBkYXRhVmlldy5nZXRVaW50MTYocG9pbnRlcik7XG4gICAgcG9pbnRlciArPSAyO1xuICAgIGNvbnN0IHF1YWxpZmllZFNpZ25lciA9IGNlcnRJbmZvLnNsaWNlKHBvaW50ZXIsIHBvaW50ZXIgKz0gcXVhbGlmaWVkU2lnbmVyTGVuZ3RoKTtcbiAgICAvLyBHZXQgdGhlIGV4cGVjdGVkIGhhc2ggb2YgYGF0dHNUb0JlU2lnbmVkYFxuICAgIGNvbnN0IGV4dHJhRGF0YUxlbmd0aCA9IGRhdGFWaWV3LmdldFVpbnQxNihwb2ludGVyKTtcbiAgICBwb2ludGVyICs9IDI7XG4gICAgY29uc3QgZXh0cmFEYXRhID0gY2VydEluZm8uc2xpY2UocG9pbnRlciwgcG9pbnRlciArPSBleHRyYURhdGFMZW5ndGgpO1xuICAgIC8vIEluZm9ybWF0aW9uIGFib3V0IHRoZSBUUE0gZGV2aWNlJ3MgaW50ZXJuYWwgY2xvY2ssIGNhbiBiZSBpZ25vcmVkXG4gICAgY29uc3QgY2xvY2sgPSBjZXJ0SW5mby5zbGljZShwb2ludGVyLCBwb2ludGVyICs9IDgpO1xuICAgIGNvbnN0IHJlc2V0Q291bnQgPSBkYXRhVmlldy5nZXRVaW50MzIocG9pbnRlcik7XG4gICAgcG9pbnRlciArPSA0O1xuICAgIGNvbnN0IHJlc3RhcnRDb3VudCA9IGRhdGFWaWV3LmdldFVpbnQzMihwb2ludGVyKTtcbiAgICBwb2ludGVyICs9IDQ7XG4gICAgY29uc3Qgc2FmZSA9ICEhY2VydEluZm8uc2xpY2UocG9pbnRlciwgcG9pbnRlciArPSAxKTtcbiAgICBjb25zdCBjbG9ja0luZm8gPSB7IGNsb2NrLCByZXNldENvdW50LCByZXN0YXJ0Q291bnQsIHNhZmUgfTtcbiAgICAvLyBUUE0gZGV2aWNlIGZpcm13YXJlIHZlcnNpb25cbiAgICBjb25zdCBmaXJtd2FyZVZlcnNpb24gPSBjZXJ0SW5mby5zbGljZShwb2ludGVyLCBwb2ludGVyICs9IDgpO1xuICAgIC8vIEF0dGVzdGVkIE5hbWVcbiAgICBjb25zdCBhdHRlc3RlZE5hbWVMZW5ndGggPSBkYXRhVmlldy5nZXRVaW50MTYocG9pbnRlcik7XG4gICAgcG9pbnRlciArPSAyO1xuICAgIGNvbnN0IGF0dGVzdGVkTmFtZSA9IGNlcnRJbmZvLnNsaWNlKHBvaW50ZXIsIHBvaW50ZXIgKz0gYXR0ZXN0ZWROYW1lTGVuZ3RoKTtcbiAgICBjb25zdCBhdHRlc3RlZE5hbWVEYXRhVmlldyA9IGlzb1VpbnQ4QXJyYXkudG9EYXRhVmlldyhhdHRlc3RlZE5hbWUpO1xuICAgIC8vIEF0dGVzdGVkIHF1YWxpZmllZCBuYW1lLCBjYW4gYmUgaWdub3JlZFxuICAgIGNvbnN0IHF1YWxpZmllZE5hbWVMZW5ndGggPSBkYXRhVmlldy5nZXRVaW50MTYocG9pbnRlcik7XG4gICAgcG9pbnRlciArPSAyO1xuICAgIGNvbnN0IHF1YWxpZmllZE5hbWUgPSBjZXJ0SW5mby5zbGljZShwb2ludGVyLCBwb2ludGVyICs9IHF1YWxpZmllZE5hbWVMZW5ndGgpO1xuICAgIGNvbnN0IGF0dGVzdGVkID0ge1xuICAgICAgICBuYW1lQWxnOiBUUE1fQUxHW2F0dGVzdGVkTmFtZURhdGFWaWV3LmdldFVpbnQxNigwKV0sXG4gICAgICAgIG5hbWVBbGdCdWZmZXI6IGF0dGVzdGVkTmFtZS5zbGljZSgwLCAyKSxcbiAgICAgICAgbmFtZTogYXR0ZXN0ZWROYW1lLFxuICAgICAgICBxdWFsaWZpZWROYW1lLFxuICAgIH07XG4gICAgcmV0dXJuIHtcbiAgICAgICAgbWFnaWMsXG4gICAgICAgIHR5cGUsXG4gICAgICAgIHF1YWxpZmllZFNpZ25lcixcbiAgICAgICAgZXh0cmFEYXRhLFxuICAgICAgICBjbG9ja0luZm8sXG4gICAgICAgIGZpcm13YXJlVmVyc2lvbixcbiAgICAgICAgYXR0ZXN0ZWQsXG4gICAgfTtcbn1cbiJdLCJuYW1lcyI6WyJUUE1fQUxHIiwiVFBNX1NUIiwiaXNvVWludDhBcnJheSIsInBhcnNlQ2VydEluZm8iLCJjZXJ0SW5mbyIsInBvaW50ZXIiLCJkYXRhVmlldyIsInRvRGF0YVZpZXciLCJtYWdpYyIsImdldFVpbnQzMiIsInR5cGVCdWZmZXIiLCJnZXRVaW50MTYiLCJ0eXBlIiwicXVhbGlmaWVkU2lnbmVyTGVuZ3RoIiwicXVhbGlmaWVkU2lnbmVyIiwic2xpY2UiLCJleHRyYURhdGFMZW5ndGgiLCJleHRyYURhdGEiLCJjbG9jayIsInJlc2V0Q291bnQiLCJyZXN0YXJ0Q291bnQiLCJzYWZlIiwiY2xvY2tJbmZvIiwiZmlybXdhcmVWZXJzaW9uIiwiYXR0ZXN0ZWROYW1lTGVuZ3RoIiwiYXR0ZXN0ZWROYW1lIiwiYXR0ZXN0ZWROYW1lRGF0YVZpZXciLCJxdWFsaWZpZWROYW1lTGVuZ3RoIiwicXVhbGlmaWVkTmFtZSIsImF0dGVzdGVkIiwibmFtZUFsZyIsIm5hbWVBbGdCdWZmZXIiLCJuYW1lIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@simplewebauthn/server/esm/registration/verifications/tpm/parseCertInfo.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@simplewebauthn/server/esm/registration/verifications/tpm/parsePubArea.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/@simplewebauthn/server/esm/registration/verifications/tpm/parsePubArea.js ***!
  \************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   parsePubArea: () => (/* binding */ parsePubArea)\n/* harmony export */ });\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./constants.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/registration/verifications/tpm/constants.js\");\n/* harmony import */ var _helpers_iso_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../helpers/iso/index.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/index.js\");\n\n\n/**\n * Break apart a TPM attestation's pubArea buffer\n *\n * See 12.2.4 TPMT_PUBLIC here:\n * https://trustedcomputinggroup.org/wp-content/uploads/TPM-Rev-2.0-Part-2-Structures-00.96-130315.pdf\n */ function parsePubArea(pubArea) {\n    let pointer = 0;\n    const dataView = _helpers_iso_index_js__WEBPACK_IMPORTED_MODULE_1__.isoUint8Array.toDataView(pubArea);\n    const type = _constants_js__WEBPACK_IMPORTED_MODULE_0__.TPM_ALG[dataView.getUint16(pointer)];\n    pointer += 2;\n    const nameAlg = _constants_js__WEBPACK_IMPORTED_MODULE_0__.TPM_ALG[dataView.getUint16(pointer)];\n    pointer += 2;\n    // Get some authenticator attributes(?)\n    // const objectAttributesInt = pubArea.slice(pointer, (pointer += 4)).readUInt32BE(0);\n    const objectAttributesInt = dataView.getUint32(pointer);\n    pointer += 4;\n    const objectAttributes = {\n        fixedTPM: !!(objectAttributesInt & 1),\n        stClear: !!(objectAttributesInt & 2),\n        fixedParent: !!(objectAttributesInt & 8),\n        sensitiveDataOrigin: !!(objectAttributesInt & 16),\n        userWithAuth: !!(objectAttributesInt & 32),\n        adminWithPolicy: !!(objectAttributesInt & 64),\n        noDA: !!(objectAttributesInt & 512),\n        encryptedDuplication: !!(objectAttributesInt & 1024),\n        restricted: !!(objectAttributesInt & 32768),\n        decrypt: !!(objectAttributesInt & 65536),\n        signOrEncrypt: !!(objectAttributesInt & 131072)\n    };\n    // Slice out the authPolicy of dynamic length\n    const authPolicyLength = dataView.getUint16(pointer);\n    pointer += 2;\n    const authPolicy = pubArea.slice(pointer, pointer += authPolicyLength);\n    // Extract additional curve params according to type\n    const parameters = {};\n    let unique = Uint8Array.from([]);\n    if (type === \"TPM_ALG_RSA\") {\n        const symmetric = _constants_js__WEBPACK_IMPORTED_MODULE_0__.TPM_ALG[dataView.getUint16(pointer)];\n        pointer += 2;\n        const scheme = _constants_js__WEBPACK_IMPORTED_MODULE_0__.TPM_ALG[dataView.getUint16(pointer)];\n        pointer += 2;\n        const keyBits = dataView.getUint16(pointer);\n        pointer += 2;\n        const exponent = dataView.getUint32(pointer);\n        pointer += 4;\n        parameters.rsa = {\n            symmetric,\n            scheme,\n            keyBits,\n            exponent\n        };\n        /**\n         * See 11.2.4.5 TPM2B_PUBLIC_KEY_RSA here:\n         * https://trustedcomputinggroup.org/wp-content/uploads/TPM-Rev-2.0-Part-2-Structures-00.96-130315.pdf\n         */ // const uniqueLength = pubArea.slice(pointer, (pointer += 2)).readUInt16BE(0);\n        const uniqueLength = dataView.getUint16(pointer);\n        pointer += 2;\n        unique = pubArea.slice(pointer, pointer += uniqueLength);\n    } else if (type === \"TPM_ALG_ECC\") {\n        const symmetric = _constants_js__WEBPACK_IMPORTED_MODULE_0__.TPM_ALG[dataView.getUint16(pointer)];\n        pointer += 2;\n        const scheme = _constants_js__WEBPACK_IMPORTED_MODULE_0__.TPM_ALG[dataView.getUint16(pointer)];\n        pointer += 2;\n        const curveID = _constants_js__WEBPACK_IMPORTED_MODULE_0__.TPM_ECC_CURVE[dataView.getUint16(pointer)];\n        pointer += 2;\n        const kdf = _constants_js__WEBPACK_IMPORTED_MODULE_0__.TPM_ALG[dataView.getUint16(pointer)];\n        pointer += 2;\n        parameters.ecc = {\n            symmetric,\n            scheme,\n            curveID,\n            kdf\n        };\n        /**\n         * See 11.2.5.1 TPM2B_ECC_PARAMETER here:\n         * https://trustedcomputinggroup.org/wp-content/uploads/TPM-Rev-2.0-Part-2-Structures-00.96-130315.pdf\n         */ // Retrieve X\n        const uniqueXLength = dataView.getUint16(pointer);\n        pointer += 2;\n        const uniqueX = pubArea.slice(pointer, pointer += uniqueXLength);\n        // Retrieve Y\n        const uniqueYLength = dataView.getUint16(pointer);\n        pointer += 2;\n        const uniqueY = pubArea.slice(pointer, pointer += uniqueYLength);\n        unique = _helpers_iso_index_js__WEBPACK_IMPORTED_MODULE_1__.isoUint8Array.concat([\n            uniqueX,\n            uniqueY\n        ]);\n    } else {\n        throw new Error(`Unexpected type \"${type}\" (TPM)`);\n    }\n    return {\n        type,\n        nameAlg,\n        objectAttributes,\n        authPolicy,\n        parameters,\n        unique\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@simplewebauthn/server/esm/registration/verifications/tpm/parsePubArea.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@simplewebauthn/server/esm/registration/verifications/tpm/verifyAttestationTPM.js":
/*!********************************************************************************************************!*\
  !*** ./node_modules/@simplewebauthn/server/esm/registration/verifications/tpm/verifyAttestationTPM.js ***!
  \********************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   verifyAttestationTPM: () => (/* binding */ verifyAttestationTPM)\n/* harmony export */ });\n/* harmony import */ var _deps_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../deps.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/deps.js\");\n/* harmony import */ var _helpers_decodeCredentialPublicKey_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../helpers/decodeCredentialPublicKey.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/decodeCredentialPublicKey.js\");\n/* harmony import */ var _helpers_cose_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../helpers/cose.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/cose.js\");\n/* harmony import */ var _helpers_toHash_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../helpers/toHash.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/toHash.js\");\n/* harmony import */ var _helpers_convertCertBufferToPEM_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../helpers/convertCertBufferToPEM.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/convertCertBufferToPEM.js\");\n/* harmony import */ var _helpers_validateCertificatePath_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../helpers/validateCertificatePath.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/validateCertificatePath.js\");\n/* harmony import */ var _helpers_getCertificateInfo_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../helpers/getCertificateInfo.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/getCertificateInfo.js\");\n/* harmony import */ var _helpers_verifySignature_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../helpers/verifySignature.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/verifySignature.js\");\n/* harmony import */ var _helpers_iso_index_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../helpers/iso/index.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/index.js\");\n/* harmony import */ var _services_metadataService_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../../services/metadataService.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/services/metadataService.js\");\n/* harmony import */ var _metadata_verifyAttestationWithMetadata_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../../metadata/verifyAttestationWithMetadata.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/metadata/verifyAttestationWithMetadata.js\");\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./constants.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/registration/verifications/tpm/constants.js\");\n/* harmony import */ var _parseCertInfo_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./parseCertInfo.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/registration/verifications/tpm/parseCertInfo.js\");\n/* harmony import */ var _parsePubArea_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./parsePubArea.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/registration/verifications/tpm/parsePubArea.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nasync function verifyAttestationTPM(options) {\n    const { aaguid, attStmt, authData, credentialPublicKey, clientDataHash, rootCertificates } = options;\n    const ver = attStmt.get(\"ver\");\n    const sig = attStmt.get(\"sig\");\n    const alg = attStmt.get(\"alg\");\n    const x5c = attStmt.get(\"x5c\");\n    const pubArea = attStmt.get(\"pubArea\");\n    const certInfo = attStmt.get(\"certInfo\");\n    /**\n     * Verify structures\n     */ if (ver !== \"2.0\") {\n        throw new Error(`Unexpected ver \"${ver}\", expected \"2.0\" (TPM)`);\n    }\n    if (!sig) {\n        throw new Error(\"No attestation signature provided in attestation statement (TPM)\");\n    }\n    if (!alg) {\n        throw new Error(`Attestation statement did not contain alg (TPM)`);\n    }\n    if (!(0,_helpers_cose_js__WEBPACK_IMPORTED_MODULE_2__.isCOSEAlg)(alg)) {\n        throw new Error(`Attestation statement contained invalid alg ${alg} (TPM)`);\n    }\n    if (!x5c) {\n        throw new Error(\"No attestation certificate provided in attestation statement (TPM)\");\n    }\n    if (!pubArea) {\n        throw new Error(\"Attestation statement did not contain pubArea (TPM)\");\n    }\n    if (!certInfo) {\n        throw new Error(\"Attestation statement did not contain certInfo (TPM)\");\n    }\n    const parsedPubArea = (0,_parsePubArea_js__WEBPACK_IMPORTED_MODULE_13__.parsePubArea)(pubArea);\n    const { unique, type: pubType, parameters } = parsedPubArea;\n    // Verify that the public key specified by the parameters and unique fields of pubArea is\n    // identical to the credentialPublicKey in the attestedCredentialData in authenticatorData.\n    const cosePublicKey = (0,_helpers_decodeCredentialPublicKey_js__WEBPACK_IMPORTED_MODULE_1__.decodeCredentialPublicKey)(credentialPublicKey);\n    if (pubType === \"TPM_ALG_RSA\") {\n        if (!(0,_helpers_cose_js__WEBPACK_IMPORTED_MODULE_2__.isCOSEPublicKeyRSA)(cosePublicKey)) {\n            throw new Error(`Credential public key with kty ${cosePublicKey.get(_helpers_cose_js__WEBPACK_IMPORTED_MODULE_2__.COSEKEYS.kty)} did not match ${pubType}`);\n        }\n        const n = cosePublicKey.get(_helpers_cose_js__WEBPACK_IMPORTED_MODULE_2__.COSEKEYS.n);\n        const e = cosePublicKey.get(_helpers_cose_js__WEBPACK_IMPORTED_MODULE_2__.COSEKEYS.e);\n        if (!n) {\n            throw new Error(\"COSE public key missing n (TPM|RSA)\");\n        }\n        if (!e) {\n            throw new Error(\"COSE public key missing e (TPM|RSA)\");\n        }\n        if (!_helpers_iso_index_js__WEBPACK_IMPORTED_MODULE_8__.isoUint8Array.areEqual(unique, n)) {\n            throw new Error(\"PubArea unique is not same as credentialPublicKey (TPM|RSA)\");\n        }\n        if (!parameters.rsa) {\n            throw new Error(`Parsed pubArea type is RSA, but missing parameters.rsa (TPM|RSA)`);\n        }\n        const eBuffer = e;\n        // If `exponent` is equal to 0x00, then exponent is the default RSA exponent of 2^16+1 (65537)\n        const pubAreaExponent = parameters.rsa.exponent || 65537;\n        // Do some bit shifting to get to an integer\n        const eSum = eBuffer[0] + (eBuffer[1] << 8) + (eBuffer[2] << 16);\n        if (pubAreaExponent !== eSum) {\n            throw new Error(`Unexpected public key exp ${eSum}, expected ${pubAreaExponent} (TPM|RSA)`);\n        }\n    } else if (pubType === \"TPM_ALG_ECC\") {\n        if (!(0,_helpers_cose_js__WEBPACK_IMPORTED_MODULE_2__.isCOSEPublicKeyEC2)(cosePublicKey)) {\n            throw new Error(`Credential public key with kty ${cosePublicKey.get(_helpers_cose_js__WEBPACK_IMPORTED_MODULE_2__.COSEKEYS.kty)} did not match ${pubType}`);\n        }\n        const crv = cosePublicKey.get(_helpers_cose_js__WEBPACK_IMPORTED_MODULE_2__.COSEKEYS.crv);\n        const x = cosePublicKey.get(_helpers_cose_js__WEBPACK_IMPORTED_MODULE_2__.COSEKEYS.x);\n        const y = cosePublicKey.get(_helpers_cose_js__WEBPACK_IMPORTED_MODULE_2__.COSEKEYS.y);\n        if (!crv) {\n            throw new Error(\"COSE public key missing crv (TPM|ECC)\");\n        }\n        if (!x) {\n            throw new Error(\"COSE public key missing x (TPM|ECC)\");\n        }\n        if (!y) {\n            throw new Error(\"COSE public key missing y (TPM|ECC)\");\n        }\n        if (!_helpers_iso_index_js__WEBPACK_IMPORTED_MODULE_8__.isoUint8Array.areEqual(unique, _helpers_iso_index_js__WEBPACK_IMPORTED_MODULE_8__.isoUint8Array.concat([\n            x,\n            y\n        ]))) {\n            throw new Error(\"PubArea unique is not same as public key x and y (TPM|ECC)\");\n        }\n        if (!parameters.ecc) {\n            throw new Error(`Parsed pubArea type is ECC, but missing parameters.ecc (TPM|ECC)`);\n        }\n        const pubAreaCurveID = parameters.ecc.curveID;\n        const pubAreaCurveIDMapToCOSECRV = _constants_js__WEBPACK_IMPORTED_MODULE_11__.TPM_ECC_CURVE_COSE_CRV_MAP[pubAreaCurveID];\n        if (pubAreaCurveIDMapToCOSECRV !== crv) {\n            throw new Error(`Public area key curve ID \"${pubAreaCurveID}\" mapped to \"${pubAreaCurveIDMapToCOSECRV}\" which did not match public key crv of \"${crv}\" (TPM|ECC)`);\n        }\n    } else {\n        throw new Error(`Unsupported pubArea.type \"${pubType}\"`);\n    }\n    const parsedCertInfo = (0,_parseCertInfo_js__WEBPACK_IMPORTED_MODULE_12__.parseCertInfo)(certInfo);\n    const { magic, type: certType, attested, extraData } = parsedCertInfo;\n    if (magic !== 0xff544347) {\n        throw new Error(`Unexpected magic value \"${magic}\", expected \"0xff544347\" (TPM)`);\n    }\n    if (certType !== \"TPM_ST_ATTEST_CERTIFY\") {\n        throw new Error(`Unexpected type \"${certType}\", expected \"TPM_ST_ATTEST_CERTIFY\" (TPM)`);\n    }\n    // Hash pubArea to create pubAreaHash using the nameAlg in attested\n    const pubAreaHash = await (0,_helpers_toHash_js__WEBPACK_IMPORTED_MODULE_3__.toHash)(pubArea, attestedNameAlgToCOSEAlg(attested.nameAlg));\n    // Concatenate attested.nameAlg and pubAreaHash to create attestedName.\n    const attestedName = _helpers_iso_index_js__WEBPACK_IMPORTED_MODULE_8__.isoUint8Array.concat([\n        attested.nameAlgBuffer,\n        pubAreaHash\n    ]);\n    // Check that certInfo.attested.name is equals to attestedName.\n    if (!_helpers_iso_index_js__WEBPACK_IMPORTED_MODULE_8__.isoUint8Array.areEqual(attested.name, attestedName)) {\n        throw new Error(`Attested name comparison failed (TPM)`);\n    }\n    // Concatenate authData with clientDataHash to create attToBeSigned\n    const attToBeSigned = _helpers_iso_index_js__WEBPACK_IMPORTED_MODULE_8__.isoUint8Array.concat([\n        authData,\n        clientDataHash\n    ]);\n    // Hash attToBeSigned using the algorithm specified in attStmt.alg to create attToBeSignedHash\n    const attToBeSignedHash = await (0,_helpers_toHash_js__WEBPACK_IMPORTED_MODULE_3__.toHash)(attToBeSigned, alg);\n    // Check that certInfo.extraData is equals to attToBeSignedHash.\n    if (!_helpers_iso_index_js__WEBPACK_IMPORTED_MODULE_8__.isoUint8Array.areEqual(extraData, attToBeSignedHash)) {\n        throw new Error(\"CertInfo extra data did not equal hashed attestation (TPM)\");\n    }\n    /**\n     * Verify signature\n     */ if (x5c.length < 1) {\n        throw new Error(\"No certificates present in x5c array (TPM)\");\n    }\n    // Pick a leaf AIK certificate of the x5c array and parse it.\n    const leafCertInfo = (0,_helpers_getCertificateInfo_js__WEBPACK_IMPORTED_MODULE_6__.getCertificateInfo)(x5c[0]);\n    const { basicConstraintsCA, version, subject, notAfter, notBefore } = leafCertInfo;\n    if (basicConstraintsCA) {\n        throw new Error(\"Certificate basic constraints CA was not `false` (TPM)\");\n    }\n    // Check that certificate is of version 3 (value must be set to 2).\n    if (version !== 2) {\n        throw new Error(\"Certificate version was not `3` (ASN.1 value of 2) (TPM)\");\n    }\n    // Check that Subject sequence is empty.\n    if (subject.combined.length > 0) {\n        throw new Error(\"Certificate subject was not empty (TPM)\");\n    }\n    // Check that certificate is currently valid\n    let now = new Date();\n    if (notBefore > now) {\n        throw new Error(`Certificate not good before \"${notBefore.toString()}\" (TPM)`);\n    }\n    // Check that certificate has not expired\n    now = new Date();\n    if (notAfter < now) {\n        throw new Error(`Certificate not good after \"${notAfter.toString()}\" (TPM)`);\n    }\n    /**\n     * Plumb the depths of the certificate's ASN.1-formatted data for some values we need to verify\n     */ const parsedCert = _deps_js__WEBPACK_IMPORTED_MODULE_0__.AsnParser.parse(x5c[0], _deps_js__WEBPACK_IMPORTED_MODULE_0__.Certificate);\n    if (!parsedCert.tbsCertificate.extensions) {\n        throw new Error(\"Certificate was missing extensions (TPM)\");\n    }\n    let subjectAltNamePresent;\n    let extKeyUsage;\n    parsedCert.tbsCertificate.extensions.forEach((ext)=>{\n        if (ext.extnID === _deps_js__WEBPACK_IMPORTED_MODULE_0__.id_ce_subjectAltName) {\n            subjectAltNamePresent = _deps_js__WEBPACK_IMPORTED_MODULE_0__.AsnParser.parse(ext.extnValue, _deps_js__WEBPACK_IMPORTED_MODULE_0__.SubjectAlternativeName);\n        } else if (ext.extnID === _deps_js__WEBPACK_IMPORTED_MODULE_0__.id_ce_extKeyUsage) {\n            extKeyUsage = _deps_js__WEBPACK_IMPORTED_MODULE_0__.AsnParser.parse(ext.extnValue, _deps_js__WEBPACK_IMPORTED_MODULE_0__.ExtendedKeyUsage);\n        }\n    });\n    // Check that certificate contains subjectAltName (2.5.29.17) extension,\n    if (!subjectAltNamePresent) {\n        throw new Error(\"Certificate did not contain subjectAltName extension (TPM)\");\n    }\n    // TPM-specific values are buried within `directoryName`, so first make sure there are values\n    // there.\n    if (!subjectAltNamePresent[0].directoryName?.[0].length) {\n        throw new Error(\"Certificate subjectAltName extension directoryName was empty (TPM)\");\n    }\n    const { tcgAtTpmManufacturer, tcgAtTpmModel, tcgAtTpmVersion } = getTcgAtTpmValues(subjectAltNamePresent[0].directoryName);\n    if (!tcgAtTpmManufacturer || !tcgAtTpmModel || !tcgAtTpmVersion) {\n        throw new Error(\"Certificate contained incomplete subjectAltName data (TPM)\");\n    }\n    if (!extKeyUsage) {\n        throw new Error(\"Certificate did not contain ExtendedKeyUsage extension (TPM)\");\n    }\n    // Check that tcpaTpmManufacturer (2.23.133.2.1) field is set to a valid manufacturer ID.\n    if (!_constants_js__WEBPACK_IMPORTED_MODULE_11__.TPM_MANUFACTURERS[tcgAtTpmManufacturer]) {\n        throw new Error(`Could not match TPM manufacturer \"${tcgAtTpmManufacturer}\" (TPM)`);\n    }\n    // Check that certificate contains extKeyUsage (2.5.29.37) extension and it must contain\n    // tcg-kp-AIKCertificate (2.23.133.8.3) OID.\n    if (extKeyUsage[0] !== \"2.23.133.8.3\") {\n        throw new Error(`Unexpected extKeyUsage \"${extKeyUsage[0]}\", expected \"2.23.133.8.3\" (TPM)`);\n    }\n    // TODO: If certificate contains id-fido-gen-ce-aaguid(1.3.6.1.4.1.45724.1.1.4) extension, check\n    // that it’s value is set to the same AAGUID as in authData.\n    // Run some metadata checks if a statement exists for this authenticator\n    const statement = await _services_metadataService_js__WEBPACK_IMPORTED_MODULE_9__.MetadataService.getStatement(aaguid);\n    if (statement) {\n        try {\n            await (0,_metadata_verifyAttestationWithMetadata_js__WEBPACK_IMPORTED_MODULE_10__.verifyAttestationWithMetadata)({\n                statement,\n                credentialPublicKey,\n                x5c,\n                attestationStatementAlg: alg\n            });\n        } catch (err) {\n            const _err = err;\n            throw new Error(`${_err.message} (TPM)`);\n        }\n    } else {\n        try {\n            // Try validating the certificate path using the root certificates set via SettingsService\n            await (0,_helpers_validateCertificatePath_js__WEBPACK_IMPORTED_MODULE_5__.validateCertificatePath)(x5c.map(_helpers_convertCertBufferToPEM_js__WEBPACK_IMPORTED_MODULE_4__.convertCertBufferToPEM), rootCertificates);\n        } catch (err) {\n            const _err = err;\n            throw new Error(`${_err.message} (TPM)`);\n        }\n    }\n    // Verify signature over certInfo with the public key extracted from AIK certificate.\n    // In the wise words of Yuriy Ackermann: \"Get Martini friend, you are done!\"\n    return (0,_helpers_verifySignature_js__WEBPACK_IMPORTED_MODULE_7__.verifySignature)({\n        signature: sig,\n        data: certInfo,\n        x509Certificate: x5c[0],\n        hashAlgorithm: alg\n    });\n}\n/**\n * Contain logic for pulling TPM-specific values out of subjectAlternativeName extension\n */ function getTcgAtTpmValues(root) {\n    const oidManufacturer = \"2.23.133.2.1\";\n    const oidModel = \"2.23.133.2.2\";\n    const oidVersion = \"2.23.133.2.3\";\n    let tcgAtTpmManufacturer;\n    let tcgAtTpmModel;\n    let tcgAtTpmVersion;\n    /**\n     * Iterate through the following potential structures:\n     *\n     * (Good, follows the spec)\n     * https://trustedcomputinggroup.org/wp-content/uploads/TCG_IWG_EKCredentialProfile_v2p3_r2_pub.pdf (page 33)\n     * Name [\n     *   RelativeDistinguishedName [\n     *     AttributeTypeAndValue { type, value }\n     *   ]\n     *   RelativeDistinguishedName [\n     *     AttributeTypeAndValue { type, value }\n     *   ]\n     *   RelativeDistinguishedName [\n     *     AttributeTypeAndValue { type, value }\n     *   ]\n     * ]\n     *\n     * (Bad, does not follow the spec)\n     * Name [\n     *   RelativeDistinguishedName [\n     *     AttributeTypeAndValue { type, value }\n     *     AttributeTypeAndValue { type, value }\n     *     AttributeTypeAndValue { type, value }\n     *   ]\n     * ]\n     *\n     * Both structures have been seen in the wild and need to be supported\n     */ root.forEach((relName)=>{\n        relName.forEach((attr)=>{\n            if (attr.type === oidManufacturer) {\n                tcgAtTpmManufacturer = attr.value.toString();\n            } else if (attr.type === oidModel) {\n                tcgAtTpmModel = attr.value.toString();\n            } else if (attr.type === oidVersion) {\n                tcgAtTpmVersion = attr.value.toString();\n            }\n        });\n    });\n    return {\n        tcgAtTpmManufacturer,\n        tcgAtTpmModel,\n        tcgAtTpmVersion\n    };\n}\n/**\n * Convert TPM-specific SHA algorithm ID's with COSE-specific equivalents. Note that the choice to\n * use ECDSA SHA IDs is arbitrary; any such COSEALG that would map to SHA-256 in\n * `mapCoseAlgToWebCryptoAlg()`\n *\n * SHA IDs referenced from here:\n *\n * https://trustedcomputinggroup.org/wp-content/uploads/TCG_TPM2_r1p59_Part2_Structures_pub.pdf\n */ function attestedNameAlgToCOSEAlg(alg) {\n    if (alg === \"TPM_ALG_SHA256\") {\n        return _helpers_cose_js__WEBPACK_IMPORTED_MODULE_2__.COSEALG.ES256;\n    } else if (alg === \"TPM_ALG_SHA384\") {\n        return _helpers_cose_js__WEBPACK_IMPORTED_MODULE_2__.COSEALG.ES384;\n    } else if (alg === \"TPM_ALG_SHA512\") {\n        return _helpers_cose_js__WEBPACK_IMPORTED_MODULE_2__.COSEALG.ES512;\n    }\n    throw new Error(`Unexpected TPM attested name alg ${alg}`);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@simplewebauthn/server/esm/registration/verifications/tpm/verifyAttestationTPM.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@simplewebauthn/server/esm/registration/verifications/verifyAttestationAndroidKey.js":
/*!***********************************************************************************************************!*\
  !*** ./node_modules/@simplewebauthn/server/esm/registration/verifications/verifyAttestationAndroidKey.js ***!
  \***********************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   verifyAttestationAndroidKey: () => (/* binding */ verifyAttestationAndroidKey)\n/* harmony export */ });\n/* harmony import */ var _deps_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../deps.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/deps.js\");\n/* harmony import */ var _helpers_convertCertBufferToPEM_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../helpers/convertCertBufferToPEM.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/convertCertBufferToPEM.js\");\n/* harmony import */ var _helpers_validateCertificatePath_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../helpers/validateCertificatePath.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/validateCertificatePath.js\");\n/* harmony import */ var _helpers_verifySignature_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../helpers/verifySignature.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/verifySignature.js\");\n/* harmony import */ var _helpers_convertCOSEtoPKCS_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../helpers/convertCOSEtoPKCS.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/convertCOSEtoPKCS.js\");\n/* harmony import */ var _helpers_cose_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../helpers/cose.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/cose.js\");\n/* harmony import */ var _helpers_iso_index_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../helpers/iso/index.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/index.js\");\n/* harmony import */ var _services_metadataService_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../services/metadataService.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/services/metadataService.js\");\n/* harmony import */ var _metadata_verifyAttestationWithMetadata_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../metadata/verifyAttestationWithMetadata.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/metadata/verifyAttestationWithMetadata.js\");\n\n\n\n\n\n\n\n\n\n/**\n * Verify an attestation response with fmt 'android-key'\n */ async function verifyAttestationAndroidKey(options) {\n    const { authData, clientDataHash, attStmt, credentialPublicKey, aaguid, rootCertificates } = options;\n    const x5c = attStmt.get(\"x5c\");\n    const sig = attStmt.get(\"sig\");\n    const alg = attStmt.get(\"alg\");\n    if (!x5c) {\n        throw new Error(\"No attestation certificate provided in attestation statement (AndroidKey)\");\n    }\n    if (!sig) {\n        throw new Error(\"No attestation signature provided in attestation statement (AndroidKey)\");\n    }\n    if (!alg) {\n        throw new Error(`Attestation statement did not contain alg (AndroidKey)`);\n    }\n    if (!(0,_helpers_cose_js__WEBPACK_IMPORTED_MODULE_5__.isCOSEAlg)(alg)) {\n        throw new Error(`Attestation statement contained invalid alg ${alg} (AndroidKey)`);\n    }\n    // Check that credentialPublicKey matches the public key in the attestation certificate\n    // Find the public cert in the certificate as PKCS\n    const parsedCert = _deps_js__WEBPACK_IMPORTED_MODULE_0__.AsnParser.parse(x5c[0], _deps_js__WEBPACK_IMPORTED_MODULE_0__.Certificate);\n    const parsedCertPubKey = new Uint8Array(parsedCert.tbsCertificate.subjectPublicKeyInfo.subjectPublicKey);\n    // Convert the credentialPublicKey to PKCS\n    const credPubKeyPKCS = (0,_helpers_convertCOSEtoPKCS_js__WEBPACK_IMPORTED_MODULE_4__.convertCOSEtoPKCS)(credentialPublicKey);\n    if (!_helpers_iso_index_js__WEBPACK_IMPORTED_MODULE_6__.isoUint8Array.areEqual(credPubKeyPKCS, parsedCertPubKey)) {\n        throw new Error(\"Credential public key does not equal leaf cert public key (AndroidKey)\");\n    }\n    // Find Android KeyStore Extension in certificate extensions\n    const extKeyStore = parsedCert.tbsCertificate.extensions?.find((ext)=>ext.extnID === _deps_js__WEBPACK_IMPORTED_MODULE_0__.id_ce_keyDescription);\n    if (!extKeyStore) {\n        throw new Error(\"Certificate did not contain extKeyStore (AndroidKey)\");\n    }\n    const parsedExtKeyStore = _deps_js__WEBPACK_IMPORTED_MODULE_0__.AsnParser.parse(extKeyStore.extnValue, _deps_js__WEBPACK_IMPORTED_MODULE_0__.KeyDescription);\n    // Verify extKeyStore values\n    const { attestationChallenge, teeEnforced, softwareEnforced } = parsedExtKeyStore;\n    if (!_helpers_iso_index_js__WEBPACK_IMPORTED_MODULE_6__.isoUint8Array.areEqual(new Uint8Array(attestationChallenge.buffer), clientDataHash)) {\n        throw new Error(\"Attestation challenge was not equal to client data hash (AndroidKey)\");\n    }\n    // Ensure that the key is strictly bound to the caller app identifier (shouldn't contain the\n    // [600] tag)\n    if (teeEnforced.allApplications !== undefined) {\n        throw new Error('teeEnforced contained \"allApplications [600]\" tag (AndroidKey)');\n    }\n    if (softwareEnforced.allApplications !== undefined) {\n        throw new Error('teeEnforced contained \"allApplications [600]\" tag (AndroidKey)');\n    }\n    const statement = await _services_metadataService_js__WEBPACK_IMPORTED_MODULE_7__.MetadataService.getStatement(aaguid);\n    if (statement) {\n        try {\n            await (0,_metadata_verifyAttestationWithMetadata_js__WEBPACK_IMPORTED_MODULE_8__.verifyAttestationWithMetadata)({\n                statement,\n                credentialPublicKey,\n                x5c,\n                attestationStatementAlg: alg\n            });\n        } catch (err) {\n            const _err = err;\n            throw new Error(`${_err.message} (AndroidKey)`);\n        }\n    } else {\n        try {\n            // Try validating the certificate path using the root certificates set via SettingsService\n            await (0,_helpers_validateCertificatePath_js__WEBPACK_IMPORTED_MODULE_2__.validateCertificatePath)(x5c.map(_helpers_convertCertBufferToPEM_js__WEBPACK_IMPORTED_MODULE_1__.convertCertBufferToPEM), rootCertificates);\n        } catch (err) {\n            const _err = err;\n            throw new Error(`${_err.message} (AndroidKey)`);\n        }\n    }\n    const signatureBase = _helpers_iso_index_js__WEBPACK_IMPORTED_MODULE_6__.isoUint8Array.concat([\n        authData,\n        clientDataHash\n    ]);\n    return (0,_helpers_verifySignature_js__WEBPACK_IMPORTED_MODULE_3__.verifySignature)({\n        signature: sig,\n        data: signatureBase,\n        x509Certificate: x5c[0],\n        hashAlgorithm: alg\n    });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@simplewebauthn/server/esm/registration/verifications/verifyAttestationAndroidKey.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@simplewebauthn/server/esm/registration/verifications/verifyAttestationAndroidSafetyNet.js":
/*!*****************************************************************************************************************!*\
  !*** ./node_modules/@simplewebauthn/server/esm/registration/verifications/verifyAttestationAndroidSafetyNet.js ***!
  \*****************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   verifyAttestationAndroidSafetyNet: () => (/* binding */ verifyAttestationAndroidSafetyNet)\n/* harmony export */ });\n/* harmony import */ var _helpers_toHash_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../helpers/toHash.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/toHash.js\");\n/* harmony import */ var _helpers_verifySignature_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../helpers/verifySignature.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/verifySignature.js\");\n/* harmony import */ var _helpers_getCertificateInfo_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../helpers/getCertificateInfo.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/getCertificateInfo.js\");\n/* harmony import */ var _helpers_validateCertificatePath_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../helpers/validateCertificatePath.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/validateCertificatePath.js\");\n/* harmony import */ var _helpers_convertCertBufferToPEM_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../helpers/convertCertBufferToPEM.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/convertCertBufferToPEM.js\");\n/* harmony import */ var _helpers_iso_index_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../helpers/iso/index.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/index.js\");\n/* harmony import */ var _services_metadataService_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../services/metadataService.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/services/metadataService.js\");\n/* harmony import */ var _metadata_verifyAttestationWithMetadata_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../metadata/verifyAttestationWithMetadata.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/metadata/verifyAttestationWithMetadata.js\");\n\n\n\n\n\n\n\n\n/**\n * Verify an attestation response with fmt 'android-safetynet'\n */ async function verifyAttestationAndroidSafetyNet(options) {\n    const { attStmt, clientDataHash, authData, aaguid, rootCertificates, verifyTimestampMS = true, credentialPublicKey } = options;\n    const alg = attStmt.get(\"alg\");\n    const response = attStmt.get(\"response\");\n    const ver = attStmt.get(\"ver\");\n    if (!ver) {\n        throw new Error(\"No ver value in attestation (SafetyNet)\");\n    }\n    if (!response) {\n        throw new Error(\"No response was included in attStmt by authenticator (SafetyNet)\");\n    }\n    // Prepare to verify a JWT\n    const jwt = _helpers_iso_index_js__WEBPACK_IMPORTED_MODULE_5__.isoUint8Array.toUTF8String(response);\n    const jwtParts = jwt.split(\".\");\n    const HEADER = JSON.parse(_helpers_iso_index_js__WEBPACK_IMPORTED_MODULE_5__.isoBase64URL.toString(jwtParts[0]));\n    const PAYLOAD = JSON.parse(_helpers_iso_index_js__WEBPACK_IMPORTED_MODULE_5__.isoBase64URL.toString(jwtParts[1]));\n    const SIGNATURE = jwtParts[2];\n    /**\n     * START Verify PAYLOAD\n     */ const { nonce, ctsProfileMatch, timestampMs } = PAYLOAD;\n    if (verifyTimestampMS) {\n        // Make sure timestamp is in the past\n        let now = Date.now();\n        if (timestampMs > Date.now()) {\n            throw new Error(`Payload timestamp \"${timestampMs}\" was later than \"${now}\" (SafetyNet)`);\n        }\n        // Consider a SafetyNet attestation valid within a minute of it being performed\n        const timestampPlusDelay = timestampMs + 60 * 1000;\n        now = Date.now();\n        if (timestampPlusDelay < now) {\n            throw new Error(`Payload timestamp \"${timestampPlusDelay}\" has expired (SafetyNet)`);\n        }\n    }\n    const nonceBase = _helpers_iso_index_js__WEBPACK_IMPORTED_MODULE_5__.isoUint8Array.concat([\n        authData,\n        clientDataHash\n    ]);\n    const nonceBuffer = await (0,_helpers_toHash_js__WEBPACK_IMPORTED_MODULE_0__.toHash)(nonceBase);\n    const expectedNonce = _helpers_iso_index_js__WEBPACK_IMPORTED_MODULE_5__.isoBase64URL.fromBuffer(nonceBuffer, \"base64\");\n    if (nonce !== expectedNonce) {\n        throw new Error(\"Could not verify payload nonce (SafetyNet)\");\n    }\n    if (!ctsProfileMatch) {\n        throw new Error(\"Could not verify device integrity (SafetyNet)\");\n    }\n    /**\n     * END Verify PAYLOAD\n     */ /**\n     * START Verify Header\n     */ // `HEADER.x5c[0]` is definitely a base64 string\n    const leafCertBuffer = _helpers_iso_index_js__WEBPACK_IMPORTED_MODULE_5__.isoBase64URL.toBuffer(HEADER.x5c[0], \"base64\");\n    const leafCertInfo = (0,_helpers_getCertificateInfo_js__WEBPACK_IMPORTED_MODULE_2__.getCertificateInfo)(leafCertBuffer);\n    const { subject } = leafCertInfo;\n    // Ensure the certificate was issued to this hostname\n    // See https://developer.android.com/training/safetynet/attestation#verify-attestation-response\n    if (subject.CN !== \"attest.android.com\") {\n        throw new Error('Certificate common name was not \"attest.android.com\" (SafetyNet)');\n    }\n    const statement = await _services_metadataService_js__WEBPACK_IMPORTED_MODULE_6__.MetadataService.getStatement(aaguid);\n    if (statement) {\n        try {\n            await (0,_metadata_verifyAttestationWithMetadata_js__WEBPACK_IMPORTED_MODULE_7__.verifyAttestationWithMetadata)({\n                statement,\n                credentialPublicKey,\n                x5c: HEADER.x5c,\n                attestationStatementAlg: alg\n            });\n        } catch (err) {\n            const _err = err;\n            throw new Error(`${_err.message} (SafetyNet)`);\n        }\n    } else {\n        try {\n            // Try validating the certificate path using the root certificates set via SettingsService\n            await (0,_helpers_validateCertificatePath_js__WEBPACK_IMPORTED_MODULE_3__.validateCertificatePath)(HEADER.x5c.map(_helpers_convertCertBufferToPEM_js__WEBPACK_IMPORTED_MODULE_4__.convertCertBufferToPEM), rootCertificates);\n        } catch (err) {\n            const _err = err;\n            throw new Error(`${_err.message} (SafetyNet)`);\n        }\n    }\n    /**\n     * END Verify Header\n     */ /**\n     * START Verify Signature\n     */ const signatureBaseBuffer = _helpers_iso_index_js__WEBPACK_IMPORTED_MODULE_5__.isoUint8Array.fromUTF8String(`${jwtParts[0]}.${jwtParts[1]}`);\n    const signatureBuffer = _helpers_iso_index_js__WEBPACK_IMPORTED_MODULE_5__.isoBase64URL.toBuffer(SIGNATURE);\n    const verified = await (0,_helpers_verifySignature_js__WEBPACK_IMPORTED_MODULE_1__.verifySignature)({\n        signature: signatureBuffer,\n        data: signatureBaseBuffer,\n        x509Certificate: leafCertBuffer\n    });\n    /**\n     * END Verify Signature\n     */ return verified;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@simplewebauthn/server/esm/registration/verifications/verifyAttestationAndroidSafetyNet.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@simplewebauthn/server/esm/registration/verifications/verifyAttestationApple.js":
/*!******************************************************************************************************!*\
  !*** ./node_modules/@simplewebauthn/server/esm/registration/verifications/verifyAttestationApple.js ***!
  \******************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   verifyAttestationApple: () => (/* binding */ verifyAttestationApple)\n/* harmony export */ });\n/* harmony import */ var _deps_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../deps.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/deps.js\");\n/* harmony import */ var _helpers_validateCertificatePath_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../helpers/validateCertificatePath.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/validateCertificatePath.js\");\n/* harmony import */ var _helpers_convertCertBufferToPEM_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../helpers/convertCertBufferToPEM.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/convertCertBufferToPEM.js\");\n/* harmony import */ var _helpers_toHash_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../helpers/toHash.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/toHash.js\");\n/* harmony import */ var _helpers_convertCOSEtoPKCS_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../helpers/convertCOSEtoPKCS.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/convertCOSEtoPKCS.js\");\n/* harmony import */ var _helpers_iso_index_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../helpers/iso/index.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/index.js\");\n\n\n\n\n\n\nasync function verifyAttestationApple(options) {\n    const { attStmt, authData, clientDataHash, credentialPublicKey, rootCertificates } = options;\n    const x5c = attStmt.get(\"x5c\");\n    if (!x5c) {\n        throw new Error(\"No attestation certificate provided in attestation statement (Apple)\");\n    }\n    /**\n     * Verify certificate path\n     */ try {\n        await (0,_helpers_validateCertificatePath_js__WEBPACK_IMPORTED_MODULE_1__.validateCertificatePath)(x5c.map(_helpers_convertCertBufferToPEM_js__WEBPACK_IMPORTED_MODULE_2__.convertCertBufferToPEM), rootCertificates);\n    } catch (err) {\n        const _err = err;\n        throw new Error(`${_err.message} (Apple)`);\n    }\n    /**\n     * Compare nonce in certificate extension to computed nonce\n     */ const parsedCredCert = _deps_js__WEBPACK_IMPORTED_MODULE_0__.AsnParser.parse(x5c[0], _deps_js__WEBPACK_IMPORTED_MODULE_0__.Certificate);\n    const { extensions, subjectPublicKeyInfo } = parsedCredCert.tbsCertificate;\n    if (!extensions) {\n        throw new Error(\"credCert missing extensions (Apple)\");\n    }\n    const extCertNonce = extensions.find((ext)=>ext.extnID === \"1.2.840.113635.100.8.2\");\n    if (!extCertNonce) {\n        throw new Error('credCert missing \"1.2.840.113635.100.8.2\" extension (Apple)');\n    }\n    const nonceToHash = _helpers_iso_index_js__WEBPACK_IMPORTED_MODULE_5__.isoUint8Array.concat([\n        authData,\n        clientDataHash\n    ]);\n    const nonce = await (0,_helpers_toHash_js__WEBPACK_IMPORTED_MODULE_3__.toHash)(nonceToHash);\n    /**\n     * Ignore the first six ASN.1 structure bytes that define the nonce as an OCTET STRING. Should\n     * trim off <Buffer 30 24 a1 22 04 20>\n     *\n     * TODO: Try and get @peculiar (GitHub) to add a schema for \"1.2.840.113635.100.8.2\" when we\n     * find out where it's defined (doesn't seem to be publicly documented at the moment...)\n     */ const extNonce = new Uint8Array(extCertNonce.extnValue.buffer).slice(6);\n    if (!_helpers_iso_index_js__WEBPACK_IMPORTED_MODULE_5__.isoUint8Array.areEqual(nonce, extNonce)) {\n        throw new Error(`credCert nonce was not expected value (Apple)`);\n    }\n    /**\n     * Verify credential public key matches the Subject Public Key of credCert\n     */ const credPubKeyPKCS = (0,_helpers_convertCOSEtoPKCS_js__WEBPACK_IMPORTED_MODULE_4__.convertCOSEtoPKCS)(credentialPublicKey);\n    const credCertSubjectPublicKey = new Uint8Array(subjectPublicKeyInfo.subjectPublicKey);\n    if (!_helpers_iso_index_js__WEBPACK_IMPORTED_MODULE_5__.isoUint8Array.areEqual(credPubKeyPKCS, credCertSubjectPublicKey)) {\n        throw new Error(\"Credential public key does not equal credCert public key (Apple)\");\n    }\n    return true;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNpbXBsZXdlYmF1dGhuL3NlcnZlci9lc20vcmVnaXN0cmF0aW9uL3ZlcmlmaWNhdGlvbnMvdmVyaWZ5QXR0ZXN0YXRpb25BcHBsZS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQXVEO0FBQzRCO0FBQ0Y7QUFDaEM7QUFDc0I7QUFDWjtBQUNwRCxlQUFlTyx1QkFBdUJDLE9BQU87SUFDaEQsTUFBTSxFQUFFQyxPQUFPLEVBQUVDLFFBQVEsRUFBRUMsY0FBYyxFQUFFQyxtQkFBbUIsRUFBRUMsZ0JBQWdCLEVBQUcsR0FBR0w7SUFDdEYsTUFBTU0sTUFBTUwsUUFBUU0sR0FBRyxDQUFDO0lBQ3hCLElBQUksQ0FBQ0QsS0FBSztRQUNOLE1BQU0sSUFBSUUsTUFBTTtJQUNwQjtJQUNBOztLQUVDLEdBQ0QsSUFBSTtRQUNBLE1BQU1kLDRGQUF1QkEsQ0FBQ1ksSUFBSUcsR0FBRyxDQUFDZCxzRkFBc0JBLEdBQUdVO0lBQ25FLEVBQ0EsT0FBT0ssS0FBSztRQUNSLE1BQU1DLE9BQU9EO1FBQ2IsTUFBTSxJQUFJRixNQUFNLENBQUMsRUFBRUcsS0FBS0MsT0FBTyxDQUFDLFFBQVEsQ0FBQztJQUM3QztJQUNBOztLQUVDLEdBQ0QsTUFBTUMsaUJBQWlCckIsK0NBQVNBLENBQUNzQixLQUFLLENBQUNSLEdBQUcsQ0FBQyxFQUFFLEVBQUViLGlEQUFXQTtJQUMxRCxNQUFNLEVBQUVzQixVQUFVLEVBQUVDLG9CQUFvQixFQUFFLEdBQUdILGVBQWVJLGNBQWM7SUFDMUUsSUFBSSxDQUFDRixZQUFZO1FBQ2IsTUFBTSxJQUFJUCxNQUFNO0lBQ3BCO0lBQ0EsTUFBTVUsZUFBZUgsV0FBV0ksSUFBSSxDQUFDLENBQUNDLE1BQVFBLElBQUlDLE1BQU0sS0FBSztJQUM3RCxJQUFJLENBQUNILGNBQWM7UUFDZixNQUFNLElBQUlWLE1BQU07SUFDcEI7SUFDQSxNQUFNYyxjQUFjeEIsdUVBQW9CLENBQUM7UUFBQ0k7UUFBVUM7S0FBZTtJQUNuRSxNQUFNcUIsUUFBUSxNQUFNNUIsMERBQU1BLENBQUMwQjtJQUMzQjs7Ozs7O0tBTUMsR0FDRCxNQUFNRyxXQUFXLElBQUlDLFdBQVdSLGFBQWFTLFNBQVMsQ0FBQ0MsTUFBTSxFQUFFQyxLQUFLLENBQUM7SUFDckUsSUFBSSxDQUFDL0IseUVBQXNCLENBQUMwQixPQUFPQyxXQUFXO1FBQzFDLE1BQU0sSUFBSWpCLE1BQU0sQ0FBQyw2Q0FBNkMsQ0FBQztJQUNuRTtJQUNBOztLQUVDLEdBQ0QsTUFBTXVCLGlCQUFpQmxDLGdGQUFpQkEsQ0FBQ087SUFDekMsTUFBTTRCLDJCQUEyQixJQUFJTixXQUFXVixxQkFBcUJpQixnQkFBZ0I7SUFDckYsSUFBSSxDQUFDbkMseUVBQXNCLENBQUNpQyxnQkFBZ0JDLDJCQUEyQjtRQUNuRSxNQUFNLElBQUl4QixNQUFNO0lBQ3BCO0lBQ0EsT0FBTztBQUNYIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vY2FtcHVzLW1pbmQvLi9ub2RlX21vZHVsZXMvQHNpbXBsZXdlYmF1dGhuL3NlcnZlci9lc20vcmVnaXN0cmF0aW9uL3ZlcmlmaWNhdGlvbnMvdmVyaWZ5QXR0ZXN0YXRpb25BcHBsZS5qcz8wNjQ5Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEFzblBhcnNlciwgQ2VydGlmaWNhdGUgfSBmcm9tICcuLi8uLi9kZXBzLmpzJztcbmltcG9ydCB7IHZhbGlkYXRlQ2VydGlmaWNhdGVQYXRoIH0gZnJvbSAnLi4vLi4vaGVscGVycy92YWxpZGF0ZUNlcnRpZmljYXRlUGF0aC5qcyc7XG5pbXBvcnQgeyBjb252ZXJ0Q2VydEJ1ZmZlclRvUEVNIH0gZnJvbSAnLi4vLi4vaGVscGVycy9jb252ZXJ0Q2VydEJ1ZmZlclRvUEVNLmpzJztcbmltcG9ydCB7IHRvSGFzaCB9IGZyb20gJy4uLy4uL2hlbHBlcnMvdG9IYXNoLmpzJztcbmltcG9ydCB7IGNvbnZlcnRDT1NFdG9QS0NTIH0gZnJvbSAnLi4vLi4vaGVscGVycy9jb252ZXJ0Q09TRXRvUEtDUy5qcyc7XG5pbXBvcnQgeyBpc29VaW50OEFycmF5IH0gZnJvbSAnLi4vLi4vaGVscGVycy9pc28vaW5kZXguanMnO1xuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIHZlcmlmeUF0dGVzdGF0aW9uQXBwbGUob3B0aW9ucykge1xuICAgIGNvbnN0IHsgYXR0U3RtdCwgYXV0aERhdGEsIGNsaWVudERhdGFIYXNoLCBjcmVkZW50aWFsUHVibGljS2V5LCByb290Q2VydGlmaWNhdGVzLCB9ID0gb3B0aW9ucztcbiAgICBjb25zdCB4NWMgPSBhdHRTdG10LmdldCgneDVjJyk7XG4gICAgaWYgKCF4NWMpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdObyBhdHRlc3RhdGlvbiBjZXJ0aWZpY2F0ZSBwcm92aWRlZCBpbiBhdHRlc3RhdGlvbiBzdGF0ZW1lbnQgKEFwcGxlKScpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBWZXJpZnkgY2VydGlmaWNhdGUgcGF0aFxuICAgICAqL1xuICAgIHRyeSB7XG4gICAgICAgIGF3YWl0IHZhbGlkYXRlQ2VydGlmaWNhdGVQYXRoKHg1Yy5tYXAoY29udmVydENlcnRCdWZmZXJUb1BFTSksIHJvb3RDZXJ0aWZpY2F0ZXMpO1xuICAgIH1cbiAgICBjYXRjaCAoZXJyKSB7XG4gICAgICAgIGNvbnN0IF9lcnIgPSBlcnI7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihgJHtfZXJyLm1lc3NhZ2V9IChBcHBsZSlgKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQ29tcGFyZSBub25jZSBpbiBjZXJ0aWZpY2F0ZSBleHRlbnNpb24gdG8gY29tcHV0ZWQgbm9uY2VcbiAgICAgKi9cbiAgICBjb25zdCBwYXJzZWRDcmVkQ2VydCA9IEFzblBhcnNlci5wYXJzZSh4NWNbMF0sIENlcnRpZmljYXRlKTtcbiAgICBjb25zdCB7IGV4dGVuc2lvbnMsIHN1YmplY3RQdWJsaWNLZXlJbmZvIH0gPSBwYXJzZWRDcmVkQ2VydC50YnNDZXJ0aWZpY2F0ZTtcbiAgICBpZiAoIWV4dGVuc2lvbnMpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdjcmVkQ2VydCBtaXNzaW5nIGV4dGVuc2lvbnMgKEFwcGxlKScpO1xuICAgIH1cbiAgICBjb25zdCBleHRDZXJ0Tm9uY2UgPSBleHRlbnNpb25zLmZpbmQoKGV4dCkgPT4gZXh0LmV4dG5JRCA9PT0gJzEuMi44NDAuMTEzNjM1LjEwMC44LjInKTtcbiAgICBpZiAoIWV4dENlcnROb25jZSkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ2NyZWRDZXJ0IG1pc3NpbmcgXCIxLjIuODQwLjExMzYzNS4xMDAuOC4yXCIgZXh0ZW5zaW9uIChBcHBsZSknKTtcbiAgICB9XG4gICAgY29uc3Qgbm9uY2VUb0hhc2ggPSBpc29VaW50OEFycmF5LmNvbmNhdChbYXV0aERhdGEsIGNsaWVudERhdGFIYXNoXSk7XG4gICAgY29uc3Qgbm9uY2UgPSBhd2FpdCB0b0hhc2gobm9uY2VUb0hhc2gpO1xuICAgIC8qKlxuICAgICAqIElnbm9yZSB0aGUgZmlyc3Qgc2l4IEFTTi4xIHN0cnVjdHVyZSBieXRlcyB0aGF0IGRlZmluZSB0aGUgbm9uY2UgYXMgYW4gT0NURVQgU1RSSU5HLiBTaG91bGRcbiAgICAgKiB0cmltIG9mZiA8QnVmZmVyIDMwIDI0IGExIDIyIDA0IDIwPlxuICAgICAqXG4gICAgICogVE9ETzogVHJ5IGFuZCBnZXQgQHBlY3VsaWFyIChHaXRIdWIpIHRvIGFkZCBhIHNjaGVtYSBmb3IgXCIxLjIuODQwLjExMzYzNS4xMDAuOC4yXCIgd2hlbiB3ZVxuICAgICAqIGZpbmQgb3V0IHdoZXJlIGl0J3MgZGVmaW5lZCAoZG9lc24ndCBzZWVtIHRvIGJlIHB1YmxpY2x5IGRvY3VtZW50ZWQgYXQgdGhlIG1vbWVudC4uLilcbiAgICAgKi9cbiAgICBjb25zdCBleHROb25jZSA9IG5ldyBVaW50OEFycmF5KGV4dENlcnROb25jZS5leHRuVmFsdWUuYnVmZmVyKS5zbGljZSg2KTtcbiAgICBpZiAoIWlzb1VpbnQ4QXJyYXkuYXJlRXF1YWwobm9uY2UsIGV4dE5vbmNlKSkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYGNyZWRDZXJ0IG5vbmNlIHdhcyBub3QgZXhwZWN0ZWQgdmFsdWUgKEFwcGxlKWApO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBWZXJpZnkgY3JlZGVudGlhbCBwdWJsaWMga2V5IG1hdGNoZXMgdGhlIFN1YmplY3QgUHVibGljIEtleSBvZiBjcmVkQ2VydFxuICAgICAqL1xuICAgIGNvbnN0IGNyZWRQdWJLZXlQS0NTID0gY29udmVydENPU0V0b1BLQ1MoY3JlZGVudGlhbFB1YmxpY0tleSk7XG4gICAgY29uc3QgY3JlZENlcnRTdWJqZWN0UHVibGljS2V5ID0gbmV3IFVpbnQ4QXJyYXkoc3ViamVjdFB1YmxpY0tleUluZm8uc3ViamVjdFB1YmxpY0tleSk7XG4gICAgaWYgKCFpc29VaW50OEFycmF5LmFyZUVxdWFsKGNyZWRQdWJLZXlQS0NTLCBjcmVkQ2VydFN1YmplY3RQdWJsaWNLZXkpKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcignQ3JlZGVudGlhbCBwdWJsaWMga2V5IGRvZXMgbm90IGVxdWFsIGNyZWRDZXJ0IHB1YmxpYyBrZXkgKEFwcGxlKScpO1xuICAgIH1cbiAgICByZXR1cm4gdHJ1ZTtcbn1cbiJdLCJuYW1lcyI6WyJBc25QYXJzZXIiLCJDZXJ0aWZpY2F0ZSIsInZhbGlkYXRlQ2VydGlmaWNhdGVQYXRoIiwiY29udmVydENlcnRCdWZmZXJUb1BFTSIsInRvSGFzaCIsImNvbnZlcnRDT1NFdG9QS0NTIiwiaXNvVWludDhBcnJheSIsInZlcmlmeUF0dGVzdGF0aW9uQXBwbGUiLCJvcHRpb25zIiwiYXR0U3RtdCIsImF1dGhEYXRhIiwiY2xpZW50RGF0YUhhc2giLCJjcmVkZW50aWFsUHVibGljS2V5Iiwicm9vdENlcnRpZmljYXRlcyIsIng1YyIsImdldCIsIkVycm9yIiwibWFwIiwiZXJyIiwiX2VyciIsIm1lc3NhZ2UiLCJwYXJzZWRDcmVkQ2VydCIsInBhcnNlIiwiZXh0ZW5zaW9ucyIsInN1YmplY3RQdWJsaWNLZXlJbmZvIiwidGJzQ2VydGlmaWNhdGUiLCJleHRDZXJ0Tm9uY2UiLCJmaW5kIiwiZXh0IiwiZXh0bklEIiwibm9uY2VUb0hhc2giLCJjb25jYXQiLCJub25jZSIsImV4dE5vbmNlIiwiVWludDhBcnJheSIsImV4dG5WYWx1ZSIsImJ1ZmZlciIsInNsaWNlIiwiYXJlRXF1YWwiLCJjcmVkUHViS2V5UEtDUyIsImNyZWRDZXJ0U3ViamVjdFB1YmxpY0tleSIsInN1YmplY3RQdWJsaWNLZXkiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@simplewebauthn/server/esm/registration/verifications/verifyAttestationApple.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@simplewebauthn/server/esm/registration/verifications/verifyAttestationFIDOU2F.js":
/*!********************************************************************************************************!*\
  !*** ./node_modules/@simplewebauthn/server/esm/registration/verifications/verifyAttestationFIDOU2F.js ***!
  \********************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   verifyAttestationFIDOU2F: () => (/* binding */ verifyAttestationFIDOU2F)\n/* harmony export */ });\n/* harmony import */ var _helpers_convertCOSEtoPKCS_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../helpers/convertCOSEtoPKCS.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/convertCOSEtoPKCS.js\");\n/* harmony import */ var _helpers_convertCertBufferToPEM_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../helpers/convertCertBufferToPEM.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/convertCertBufferToPEM.js\");\n/* harmony import */ var _helpers_validateCertificatePath_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../helpers/validateCertificatePath.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/validateCertificatePath.js\");\n/* harmony import */ var _helpers_verifySignature_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../helpers/verifySignature.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/verifySignature.js\");\n/* harmony import */ var _helpers_iso_index_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../helpers/iso/index.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/index.js\");\n/* harmony import */ var _helpers_cose_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../helpers/cose.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/cose.js\");\n\n\n\n\n\n\n/**\n * Verify an attestation response with fmt 'fido-u2f'\n */ async function verifyAttestationFIDOU2F(options) {\n    const { attStmt, clientDataHash, rpIdHash, credentialID, credentialPublicKey, aaguid, rootCertificates } = options;\n    const reservedByte = Uint8Array.from([\n        0x00\n    ]);\n    const publicKey = (0,_helpers_convertCOSEtoPKCS_js__WEBPACK_IMPORTED_MODULE_0__.convertCOSEtoPKCS)(credentialPublicKey);\n    const signatureBase = _helpers_iso_index_js__WEBPACK_IMPORTED_MODULE_4__.isoUint8Array.concat([\n        reservedByte,\n        rpIdHash,\n        clientDataHash,\n        credentialID,\n        publicKey\n    ]);\n    const sig = attStmt.get(\"sig\");\n    const x5c = attStmt.get(\"x5c\");\n    if (!x5c) {\n        throw new Error(\"No attestation certificate provided in attestation statement (FIDOU2F)\");\n    }\n    if (!sig) {\n        throw new Error(\"No attestation signature provided in attestation statement (FIDOU2F)\");\n    }\n    // FIDO spec says that aaguid _must_ equal 0x00 here to be legit\n    const aaguidToHex = Number.parseInt(_helpers_iso_index_js__WEBPACK_IMPORTED_MODULE_4__.isoUint8Array.toHex(aaguid), 16);\n    if (aaguidToHex !== 0x00) {\n        throw new Error(`AAGUID \"${aaguidToHex}\" was not expected value`);\n    }\n    try {\n        // Try validating the certificate path using the root certificates set via SettingsService\n        await (0,_helpers_validateCertificatePath_js__WEBPACK_IMPORTED_MODULE_2__.validateCertificatePath)(x5c.map(_helpers_convertCertBufferToPEM_js__WEBPACK_IMPORTED_MODULE_1__.convertCertBufferToPEM), rootCertificates);\n    } catch (err) {\n        const _err = err;\n        throw new Error(`${_err.message} (FIDOU2F)`);\n    }\n    return (0,_helpers_verifySignature_js__WEBPACK_IMPORTED_MODULE_3__.verifySignature)({\n        signature: sig,\n        data: signatureBase,\n        x509Certificate: x5c[0],\n        hashAlgorithm: _helpers_cose_js__WEBPACK_IMPORTED_MODULE_5__.COSEALG.ES256\n    });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNpbXBsZXdlYmF1dGhuL3NlcnZlci9lc20vcmVnaXN0cmF0aW9uL3ZlcmlmaWNhdGlvbnMvdmVyaWZ5QXR0ZXN0YXRpb25GSURPVTJGLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBdUU7QUFDVTtBQUNFO0FBQ2hCO0FBQ1I7QUFDWDtBQUNoRDs7Q0FFQyxHQUNNLGVBQWVNLHlCQUF5QkMsT0FBTztJQUNsRCxNQUFNLEVBQUVDLE9BQU8sRUFBRUMsY0FBYyxFQUFFQyxRQUFRLEVBQUVDLFlBQVksRUFBRUMsbUJBQW1CLEVBQUVDLE1BQU0sRUFBRUMsZ0JBQWdCLEVBQUcsR0FBR1A7SUFDNUcsTUFBTVEsZUFBZUMsV0FBV0MsSUFBSSxDQUFDO1FBQUM7S0FBSztJQUMzQyxNQUFNQyxZQUFZbEIsZ0ZBQWlCQSxDQUFDWTtJQUNwQyxNQUFNTyxnQkFBZ0JmLHVFQUFvQixDQUFDO1FBQ3ZDVztRQUNBTDtRQUNBRDtRQUNBRTtRQUNBTztLQUNIO0lBQ0QsTUFBTUcsTUFBTWIsUUFBUWMsR0FBRyxDQUFDO0lBQ3hCLE1BQU1DLE1BQU1mLFFBQVFjLEdBQUcsQ0FBQztJQUN4QixJQUFJLENBQUNDLEtBQUs7UUFDTixNQUFNLElBQUlDLE1BQU07SUFDcEI7SUFDQSxJQUFJLENBQUNILEtBQUs7UUFDTixNQUFNLElBQUlHLE1BQU07SUFDcEI7SUFDQSxnRUFBZ0U7SUFDaEUsTUFBTUMsY0FBY0MsT0FBT0MsUUFBUSxDQUFDdkIsc0VBQW1CLENBQUNTLFNBQVM7SUFDakUsSUFBSVksZ0JBQWdCLE1BQU07UUFDdEIsTUFBTSxJQUFJRCxNQUFNLENBQUMsUUFBUSxFQUFFQyxZQUFZLHdCQUF3QixDQUFDO0lBQ3BFO0lBQ0EsSUFBSTtRQUNBLDBGQUEwRjtRQUMxRixNQUFNdkIsNEZBQXVCQSxDQUFDcUIsSUFBSU0sR0FBRyxDQUFDNUIsc0ZBQXNCQSxHQUFHYTtJQUNuRSxFQUNBLE9BQU9nQixLQUFLO1FBQ1IsTUFBTUMsT0FBT0Q7UUFDYixNQUFNLElBQUlOLE1BQU0sQ0FBQyxFQUFFTyxLQUFLQyxPQUFPLENBQUMsVUFBVSxDQUFDO0lBQy9DO0lBQ0EsT0FBTzdCLDRFQUFlQSxDQUFDO1FBQ25COEIsV0FBV1o7UUFDWGEsTUFBTWY7UUFDTmdCLGlCQUFpQlosR0FBRyxDQUFDLEVBQUU7UUFDdkJhLGVBQWUvQixxREFBT0EsQ0FBQ2dDLEtBQUs7SUFDaEM7QUFDSiIsInNvdXJjZXMiOlsid2VicGFjazovL2NhbXB1cy1taW5kLy4vbm9kZV9tb2R1bGVzL0BzaW1wbGV3ZWJhdXRobi9zZXJ2ZXIvZXNtL3JlZ2lzdHJhdGlvbi92ZXJpZmljYXRpb25zL3ZlcmlmeUF0dGVzdGF0aW9uRklET1UyRi5qcz82NWJmIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGNvbnZlcnRDT1NFdG9QS0NTIH0gZnJvbSAnLi4vLi4vaGVscGVycy9jb252ZXJ0Q09TRXRvUEtDUy5qcyc7XG5pbXBvcnQgeyBjb252ZXJ0Q2VydEJ1ZmZlclRvUEVNIH0gZnJvbSAnLi4vLi4vaGVscGVycy9jb252ZXJ0Q2VydEJ1ZmZlclRvUEVNLmpzJztcbmltcG9ydCB7IHZhbGlkYXRlQ2VydGlmaWNhdGVQYXRoIH0gZnJvbSAnLi4vLi4vaGVscGVycy92YWxpZGF0ZUNlcnRpZmljYXRlUGF0aC5qcyc7XG5pbXBvcnQgeyB2ZXJpZnlTaWduYXR1cmUgfSBmcm9tICcuLi8uLi9oZWxwZXJzL3ZlcmlmeVNpZ25hdHVyZS5qcyc7XG5pbXBvcnQgeyBpc29VaW50OEFycmF5IH0gZnJvbSAnLi4vLi4vaGVscGVycy9pc28vaW5kZXguanMnO1xuaW1wb3J0IHsgQ09TRUFMRyB9IGZyb20gJy4uLy4uL2hlbHBlcnMvY29zZS5qcyc7XG4vKipcbiAqIFZlcmlmeSBhbiBhdHRlc3RhdGlvbiByZXNwb25zZSB3aXRoIGZtdCAnZmlkby11MmYnXG4gKi9cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiB2ZXJpZnlBdHRlc3RhdGlvbkZJRE9VMkYob3B0aW9ucykge1xuICAgIGNvbnN0IHsgYXR0U3RtdCwgY2xpZW50RGF0YUhhc2gsIHJwSWRIYXNoLCBjcmVkZW50aWFsSUQsIGNyZWRlbnRpYWxQdWJsaWNLZXksIGFhZ3VpZCwgcm9vdENlcnRpZmljYXRlcywgfSA9IG9wdGlvbnM7XG4gICAgY29uc3QgcmVzZXJ2ZWRCeXRlID0gVWludDhBcnJheS5mcm9tKFsweDAwXSk7XG4gICAgY29uc3QgcHVibGljS2V5ID0gY29udmVydENPU0V0b1BLQ1MoY3JlZGVudGlhbFB1YmxpY0tleSk7XG4gICAgY29uc3Qgc2lnbmF0dXJlQmFzZSA9IGlzb1VpbnQ4QXJyYXkuY29uY2F0KFtcbiAgICAgICAgcmVzZXJ2ZWRCeXRlLFxuICAgICAgICBycElkSGFzaCxcbiAgICAgICAgY2xpZW50RGF0YUhhc2gsXG4gICAgICAgIGNyZWRlbnRpYWxJRCxcbiAgICAgICAgcHVibGljS2V5LFxuICAgIF0pO1xuICAgIGNvbnN0IHNpZyA9IGF0dFN0bXQuZ2V0KCdzaWcnKTtcbiAgICBjb25zdCB4NWMgPSBhdHRTdG10LmdldCgneDVjJyk7XG4gICAgaWYgKCF4NWMpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdObyBhdHRlc3RhdGlvbiBjZXJ0aWZpY2F0ZSBwcm92aWRlZCBpbiBhdHRlc3RhdGlvbiBzdGF0ZW1lbnQgKEZJRE9VMkYpJyk7XG4gICAgfVxuICAgIGlmICghc2lnKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcignTm8gYXR0ZXN0YXRpb24gc2lnbmF0dXJlIHByb3ZpZGVkIGluIGF0dGVzdGF0aW9uIHN0YXRlbWVudCAoRklET1UyRiknKTtcbiAgICB9XG4gICAgLy8gRklETyBzcGVjIHNheXMgdGhhdCBhYWd1aWQgX211c3RfIGVxdWFsIDB4MDAgaGVyZSB0byBiZSBsZWdpdFxuICAgIGNvbnN0IGFhZ3VpZFRvSGV4ID0gTnVtYmVyLnBhcnNlSW50KGlzb1VpbnQ4QXJyYXkudG9IZXgoYWFndWlkKSwgMTYpO1xuICAgIGlmIChhYWd1aWRUb0hleCAhPT0gMHgwMCkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYEFBR1VJRCBcIiR7YWFndWlkVG9IZXh9XCIgd2FzIG5vdCBleHBlY3RlZCB2YWx1ZWApO1xuICAgIH1cbiAgICB0cnkge1xuICAgICAgICAvLyBUcnkgdmFsaWRhdGluZyB0aGUgY2VydGlmaWNhdGUgcGF0aCB1c2luZyB0aGUgcm9vdCBjZXJ0aWZpY2F0ZXMgc2V0IHZpYSBTZXR0aW5nc1NlcnZpY2VcbiAgICAgICAgYXdhaXQgdmFsaWRhdGVDZXJ0aWZpY2F0ZVBhdGgoeDVjLm1hcChjb252ZXJ0Q2VydEJ1ZmZlclRvUEVNKSwgcm9vdENlcnRpZmljYXRlcyk7XG4gICAgfVxuICAgIGNhdGNoIChlcnIpIHtcbiAgICAgICAgY29uc3QgX2VyciA9IGVycjtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKGAke19lcnIubWVzc2FnZX0gKEZJRE9VMkYpYCk7XG4gICAgfVxuICAgIHJldHVybiB2ZXJpZnlTaWduYXR1cmUoe1xuICAgICAgICBzaWduYXR1cmU6IHNpZyxcbiAgICAgICAgZGF0YTogc2lnbmF0dXJlQmFzZSxcbiAgICAgICAgeDUwOUNlcnRpZmljYXRlOiB4NWNbMF0sXG4gICAgICAgIGhhc2hBbGdvcml0aG06IENPU0VBTEcuRVMyNTYsXG4gICAgfSk7XG59XG4iXSwibmFtZXMiOlsiY29udmVydENPU0V0b1BLQ1MiLCJjb252ZXJ0Q2VydEJ1ZmZlclRvUEVNIiwidmFsaWRhdGVDZXJ0aWZpY2F0ZVBhdGgiLCJ2ZXJpZnlTaWduYXR1cmUiLCJpc29VaW50OEFycmF5IiwiQ09TRUFMRyIsInZlcmlmeUF0dGVzdGF0aW9uRklET1UyRiIsIm9wdGlvbnMiLCJhdHRTdG10IiwiY2xpZW50RGF0YUhhc2giLCJycElkSGFzaCIsImNyZWRlbnRpYWxJRCIsImNyZWRlbnRpYWxQdWJsaWNLZXkiLCJhYWd1aWQiLCJyb290Q2VydGlmaWNhdGVzIiwicmVzZXJ2ZWRCeXRlIiwiVWludDhBcnJheSIsImZyb20iLCJwdWJsaWNLZXkiLCJzaWduYXR1cmVCYXNlIiwiY29uY2F0Iiwic2lnIiwiZ2V0IiwieDVjIiwiRXJyb3IiLCJhYWd1aWRUb0hleCIsIk51bWJlciIsInBhcnNlSW50IiwidG9IZXgiLCJtYXAiLCJlcnIiLCJfZXJyIiwibWVzc2FnZSIsInNpZ25hdHVyZSIsImRhdGEiLCJ4NTA5Q2VydGlmaWNhdGUiLCJoYXNoQWxnb3JpdGhtIiwiRVMyNTYiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@simplewebauthn/server/esm/registration/verifications/verifyAttestationFIDOU2F.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@simplewebauthn/server/esm/registration/verifications/verifyAttestationPacked.js":
/*!*******************************************************************************************************!*\
  !*** ./node_modules/@simplewebauthn/server/esm/registration/verifications/verifyAttestationPacked.js ***!
  \*******************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   verifyAttestationPacked: () => (/* binding */ verifyAttestationPacked)\n/* harmony export */ });\n/* harmony import */ var _helpers_cose_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../helpers/cose.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/cose.js\");\n/* harmony import */ var _helpers_convertCertBufferToPEM_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../helpers/convertCertBufferToPEM.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/convertCertBufferToPEM.js\");\n/* harmony import */ var _helpers_validateCertificatePath_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../helpers/validateCertificatePath.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/validateCertificatePath.js\");\n/* harmony import */ var _helpers_getCertificateInfo_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../helpers/getCertificateInfo.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/getCertificateInfo.js\");\n/* harmony import */ var _helpers_verifySignature_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../helpers/verifySignature.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/verifySignature.js\");\n/* harmony import */ var _helpers_iso_index_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../helpers/iso/index.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/index.js\");\n/* harmony import */ var _services_metadataService_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../services/metadataService.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/services/metadataService.js\");\n/* harmony import */ var _metadata_verifyAttestationWithMetadata_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../metadata/verifyAttestationWithMetadata.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/metadata/verifyAttestationWithMetadata.js\");\n\n\n\n\n\n\n\n\n/**\n * Verify an attestation response with fmt 'packed'\n */ async function verifyAttestationPacked(options) {\n    const { attStmt, clientDataHash, authData, credentialPublicKey, aaguid, rootCertificates } = options;\n    const sig = attStmt.get(\"sig\");\n    const x5c = attStmt.get(\"x5c\");\n    const alg = attStmt.get(\"alg\");\n    if (!sig) {\n        throw new Error(\"No attestation signature provided in attestation statement (Packed)\");\n    }\n    if (!alg) {\n        throw new Error(\"Attestation statement did not contain alg (Packed)\");\n    }\n    if (!(0,_helpers_cose_js__WEBPACK_IMPORTED_MODULE_0__.isCOSEAlg)(alg)) {\n        throw new Error(`Attestation statement contained invalid alg ${alg} (Packed)`);\n    }\n    const signatureBase = _helpers_iso_index_js__WEBPACK_IMPORTED_MODULE_5__.isoUint8Array.concat([\n        authData,\n        clientDataHash\n    ]);\n    let verified = false;\n    if (x5c) {\n        const { subject, basicConstraintsCA, version, notBefore, notAfter } = (0,_helpers_getCertificateInfo_js__WEBPACK_IMPORTED_MODULE_3__.getCertificateInfo)(x5c[0]);\n        const { OU, CN, O, C } = subject;\n        if (OU !== \"Authenticator Attestation\") {\n            throw new Error('Certificate OU was not \"Authenticator Attestation\" (Packed|Full)');\n        }\n        if (!CN) {\n            throw new Error(\"Certificate CN was empty (Packed|Full)\");\n        }\n        if (!O) {\n            throw new Error(\"Certificate O was empty (Packed|Full)\");\n        }\n        if (!C || C.length !== 2) {\n            throw new Error(\"Certificate C was not two-character ISO 3166 code (Packed|Full)\");\n        }\n        if (basicConstraintsCA) {\n            throw new Error(\"Certificate basic constraints CA was not `false` (Packed|Full)\");\n        }\n        if (version !== 2) {\n            throw new Error(\"Certificate version was not `3` (ASN.1 value of 2) (Packed|Full)\");\n        }\n        let now = new Date();\n        if (notBefore > now) {\n            throw new Error(`Certificate not good before \"${notBefore.toString()}\" (Packed|Full)`);\n        }\n        now = new Date();\n        if (notAfter < now) {\n            throw new Error(`Certificate not good after \"${notAfter.toString()}\" (Packed|Full)`);\n        }\n        // TODO: If certificate contains id-fido-gen-ce-aaguid(1.3.6.1.4.1.45724.1.1.4) extension, check\n        // that it’s value is set to the same AAGUID as in authData.\n        // If available, validate attestation alg and x5c with info in the metadata statement\n        const statement = await _services_metadataService_js__WEBPACK_IMPORTED_MODULE_6__.MetadataService.getStatement(aaguid);\n        if (statement) {\n            // The presence of x5c means this is a full attestation. Check to see if attestationTypes\n            // includes packed attestations.\n            if (statement.attestationTypes.indexOf(\"basic_full\") < 0) {\n                throw new Error(\"Metadata does not indicate support for full attestations (Packed|Full)\");\n            }\n            try {\n                await (0,_metadata_verifyAttestationWithMetadata_js__WEBPACK_IMPORTED_MODULE_7__.verifyAttestationWithMetadata)({\n                    statement,\n                    credentialPublicKey,\n                    x5c,\n                    attestationStatementAlg: alg\n                });\n            } catch (err) {\n                const _err = err;\n                throw new Error(`${_err.message} (Packed|Full)`);\n            }\n        } else {\n            try {\n                // Try validating the certificate path using the root certificates set via SettingsService\n                await (0,_helpers_validateCertificatePath_js__WEBPACK_IMPORTED_MODULE_2__.validateCertificatePath)(x5c.map(_helpers_convertCertBufferToPEM_js__WEBPACK_IMPORTED_MODULE_1__.convertCertBufferToPEM), rootCertificates);\n            } catch (err) {\n                const _err = err;\n                throw new Error(`${_err.message} (Packed|Full)`);\n            }\n        }\n        verified = await (0,_helpers_verifySignature_js__WEBPACK_IMPORTED_MODULE_4__.verifySignature)({\n            signature: sig,\n            data: signatureBase,\n            x509Certificate: x5c[0]\n        });\n    } else {\n        verified = await (0,_helpers_verifySignature_js__WEBPACK_IMPORTED_MODULE_4__.verifySignature)({\n            signature: sig,\n            data: signatureBase,\n            credentialPublicKey,\n            hashAlgorithm: alg\n        });\n    }\n    return verified;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNpbXBsZXdlYmF1dGhuL3NlcnZlci9lc20vcmVnaXN0cmF0aW9uL3ZlcmlmaWNhdGlvbnMvdmVyaWZ5QXR0ZXN0YXRpb25QYWNrZWQuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7O0FBQWtEO0FBQytCO0FBQ0U7QUFDVjtBQUNOO0FBQ1I7QUFDUztBQUM0QjtBQUNoRzs7Q0FFQyxHQUNNLGVBQWVRLHdCQUF3QkMsT0FBTztJQUNqRCxNQUFNLEVBQUVDLE9BQU8sRUFBRUMsY0FBYyxFQUFFQyxRQUFRLEVBQUVDLG1CQUFtQixFQUFFQyxNQUFNLEVBQUVDLGdCQUFnQixFQUFHLEdBQUdOO0lBQzlGLE1BQU1PLE1BQU1OLFFBQVFPLEdBQUcsQ0FBQztJQUN4QixNQUFNQyxNQUFNUixRQUFRTyxHQUFHLENBQUM7SUFDeEIsTUFBTUUsTUFBTVQsUUFBUU8sR0FBRyxDQUFDO0lBQ3hCLElBQUksQ0FBQ0QsS0FBSztRQUNOLE1BQU0sSUFBSUksTUFBTTtJQUNwQjtJQUNBLElBQUksQ0FBQ0QsS0FBSztRQUNOLE1BQU0sSUFBSUMsTUFBTTtJQUNwQjtJQUNBLElBQUksQ0FBQ3BCLDJEQUFTQSxDQUFDbUIsTUFBTTtRQUNqQixNQUFNLElBQUlDLE1BQU0sQ0FBQyw0Q0FBNEMsRUFBRUQsSUFBSSxTQUFTLENBQUM7SUFDakY7SUFDQSxNQUFNRSxnQkFBZ0JoQix1RUFBb0IsQ0FBQztRQUFDTztRQUFVRDtLQUFlO0lBQ3JFLElBQUlZLFdBQVc7SUFDZixJQUFJTCxLQUFLO1FBQ0wsTUFBTSxFQUFFTSxPQUFPLEVBQUVDLGtCQUFrQixFQUFFQyxPQUFPLEVBQUVDLFNBQVMsRUFBRUMsUUFBUSxFQUFFLEdBQUd6QixrRkFBa0JBLENBQUNlLEdBQUcsQ0FBQyxFQUFFO1FBQy9GLE1BQU0sRUFBRVcsRUFBRSxFQUFFQyxFQUFFLEVBQUVDLENBQUMsRUFBRUMsQ0FBQyxFQUFFLEdBQUdSO1FBQ3pCLElBQUlLLE9BQU8sNkJBQTZCO1lBQ3BDLE1BQU0sSUFBSVQsTUFBTTtRQUNwQjtRQUNBLElBQUksQ0FBQ1UsSUFBSTtZQUNMLE1BQU0sSUFBSVYsTUFBTTtRQUNwQjtRQUNBLElBQUksQ0FBQ1csR0FBRztZQUNKLE1BQU0sSUFBSVgsTUFBTTtRQUNwQjtRQUNBLElBQUksQ0FBQ1ksS0FBS0EsRUFBRUMsTUFBTSxLQUFLLEdBQUc7WUFDdEIsTUFBTSxJQUFJYixNQUFNO1FBQ3BCO1FBQ0EsSUFBSUssb0JBQW9CO1lBQ3BCLE1BQU0sSUFBSUwsTUFBTTtRQUNwQjtRQUNBLElBQUlNLFlBQVksR0FBRztZQUNmLE1BQU0sSUFBSU4sTUFBTTtRQUNwQjtRQUNBLElBQUljLE1BQU0sSUFBSUM7UUFDZCxJQUFJUixZQUFZTyxLQUFLO1lBQ2pCLE1BQU0sSUFBSWQsTUFBTSxDQUFDLDZCQUE2QixFQUFFTyxVQUFVUyxRQUFRLEdBQUcsZUFBZSxDQUFDO1FBQ3pGO1FBQ0FGLE1BQU0sSUFBSUM7UUFDVixJQUFJUCxXQUFXTSxLQUFLO1lBQ2hCLE1BQU0sSUFBSWQsTUFBTSxDQUFDLDRCQUE0QixFQUFFUSxTQUFTUSxRQUFRLEdBQUcsZUFBZSxDQUFDO1FBQ3ZGO1FBQ0EsZ0dBQWdHO1FBQ2hHLDREQUE0RDtRQUM1RCxxRkFBcUY7UUFDckYsTUFBTUMsWUFBWSxNQUFNL0IseUVBQWVBLENBQUNnQyxZQUFZLENBQUN4QjtRQUNyRCxJQUFJdUIsV0FBVztZQUNYLHlGQUF5RjtZQUN6RixnQ0FBZ0M7WUFDaEMsSUFBSUEsVUFBVUUsZ0JBQWdCLENBQUNDLE9BQU8sQ0FBQyxnQkFBZ0IsR0FBRztnQkFDdEQsTUFBTSxJQUFJcEIsTUFBTTtZQUNwQjtZQUNBLElBQUk7Z0JBQ0EsTUFBTWIseUdBQTZCQSxDQUFDO29CQUNoQzhCO29CQUNBeEI7b0JBQ0FLO29CQUNBdUIseUJBQXlCdEI7Z0JBQzdCO1lBQ0osRUFDQSxPQUFPdUIsS0FBSztnQkFDUixNQUFNQyxPQUFPRDtnQkFDYixNQUFNLElBQUl0QixNQUFNLENBQUMsRUFBRXVCLEtBQUtDLE9BQU8sQ0FBQyxjQUFjLENBQUM7WUFDbkQ7UUFDSixPQUNLO1lBQ0QsSUFBSTtnQkFDQSwwRkFBMEY7Z0JBQzFGLE1BQU0xQyw0RkFBdUJBLENBQUNnQixJQUFJMkIsR0FBRyxDQUFDNUMsc0ZBQXNCQSxHQUFHYztZQUNuRSxFQUNBLE9BQU8yQixLQUFLO2dCQUNSLE1BQU1DLE9BQU9EO2dCQUNiLE1BQU0sSUFBSXRCLE1BQU0sQ0FBQyxFQUFFdUIsS0FBS0MsT0FBTyxDQUFDLGNBQWMsQ0FBQztZQUNuRDtRQUNKO1FBQ0FyQixXQUFXLE1BQU1uQiw0RUFBZUEsQ0FBQztZQUM3QjBDLFdBQVc5QjtZQUNYK0IsTUFBTTFCO1lBQ04yQixpQkFBaUI5QixHQUFHLENBQUMsRUFBRTtRQUMzQjtJQUNKLE9BQ0s7UUFDREssV0FBVyxNQUFNbkIsNEVBQWVBLENBQUM7WUFDN0IwQyxXQUFXOUI7WUFDWCtCLE1BQU0xQjtZQUNOUjtZQUNBb0MsZUFBZTlCO1FBQ25CO0lBQ0o7SUFDQSxPQUFPSTtBQUNYIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vY2FtcHVzLW1pbmQvLi9ub2RlX21vZHVsZXMvQHNpbXBsZXdlYmF1dGhuL3NlcnZlci9lc20vcmVnaXN0cmF0aW9uL3ZlcmlmaWNhdGlvbnMvdmVyaWZ5QXR0ZXN0YXRpb25QYWNrZWQuanM/Y2JmOSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBpc0NPU0VBbGcgfSBmcm9tICcuLi8uLi9oZWxwZXJzL2Nvc2UuanMnO1xuaW1wb3J0IHsgY29udmVydENlcnRCdWZmZXJUb1BFTSB9IGZyb20gJy4uLy4uL2hlbHBlcnMvY29udmVydENlcnRCdWZmZXJUb1BFTS5qcyc7XG5pbXBvcnQgeyB2YWxpZGF0ZUNlcnRpZmljYXRlUGF0aCB9IGZyb20gJy4uLy4uL2hlbHBlcnMvdmFsaWRhdGVDZXJ0aWZpY2F0ZVBhdGguanMnO1xuaW1wb3J0IHsgZ2V0Q2VydGlmaWNhdGVJbmZvIH0gZnJvbSAnLi4vLi4vaGVscGVycy9nZXRDZXJ0aWZpY2F0ZUluZm8uanMnO1xuaW1wb3J0IHsgdmVyaWZ5U2lnbmF0dXJlIH0gZnJvbSAnLi4vLi4vaGVscGVycy92ZXJpZnlTaWduYXR1cmUuanMnO1xuaW1wb3J0IHsgaXNvVWludDhBcnJheSB9IGZyb20gJy4uLy4uL2hlbHBlcnMvaXNvL2luZGV4LmpzJztcbmltcG9ydCB7IE1ldGFkYXRhU2VydmljZSB9IGZyb20gJy4uLy4uL3NlcnZpY2VzL21ldGFkYXRhU2VydmljZS5qcyc7XG5pbXBvcnQgeyB2ZXJpZnlBdHRlc3RhdGlvbldpdGhNZXRhZGF0YSB9IGZyb20gJy4uLy4uL21ldGFkYXRhL3ZlcmlmeUF0dGVzdGF0aW9uV2l0aE1ldGFkYXRhLmpzJztcbi8qKlxuICogVmVyaWZ5IGFuIGF0dGVzdGF0aW9uIHJlc3BvbnNlIHdpdGggZm10ICdwYWNrZWQnXG4gKi9cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiB2ZXJpZnlBdHRlc3RhdGlvblBhY2tlZChvcHRpb25zKSB7XG4gICAgY29uc3QgeyBhdHRTdG10LCBjbGllbnREYXRhSGFzaCwgYXV0aERhdGEsIGNyZWRlbnRpYWxQdWJsaWNLZXksIGFhZ3VpZCwgcm9vdENlcnRpZmljYXRlcywgfSA9IG9wdGlvbnM7XG4gICAgY29uc3Qgc2lnID0gYXR0U3RtdC5nZXQoJ3NpZycpO1xuICAgIGNvbnN0IHg1YyA9IGF0dFN0bXQuZ2V0KCd4NWMnKTtcbiAgICBjb25zdCBhbGcgPSBhdHRTdG10LmdldCgnYWxnJyk7XG4gICAgaWYgKCFzaWcpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdObyBhdHRlc3RhdGlvbiBzaWduYXR1cmUgcHJvdmlkZWQgaW4gYXR0ZXN0YXRpb24gc3RhdGVtZW50IChQYWNrZWQpJyk7XG4gICAgfVxuICAgIGlmICghYWxnKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcignQXR0ZXN0YXRpb24gc3RhdGVtZW50IGRpZCBub3QgY29udGFpbiBhbGcgKFBhY2tlZCknKTtcbiAgICB9XG4gICAgaWYgKCFpc0NPU0VBbGcoYWxnKSkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYEF0dGVzdGF0aW9uIHN0YXRlbWVudCBjb250YWluZWQgaW52YWxpZCBhbGcgJHthbGd9IChQYWNrZWQpYCk7XG4gICAgfVxuICAgIGNvbnN0IHNpZ25hdHVyZUJhc2UgPSBpc29VaW50OEFycmF5LmNvbmNhdChbYXV0aERhdGEsIGNsaWVudERhdGFIYXNoXSk7XG4gICAgbGV0IHZlcmlmaWVkID0gZmFsc2U7XG4gICAgaWYgKHg1Yykge1xuICAgICAgICBjb25zdCB7IHN1YmplY3QsIGJhc2ljQ29uc3RyYWludHNDQSwgdmVyc2lvbiwgbm90QmVmb3JlLCBub3RBZnRlciB9ID0gZ2V0Q2VydGlmaWNhdGVJbmZvKHg1Y1swXSk7XG4gICAgICAgIGNvbnN0IHsgT1UsIENOLCBPLCBDIH0gPSBzdWJqZWN0O1xuICAgICAgICBpZiAoT1UgIT09ICdBdXRoZW50aWNhdG9yIEF0dGVzdGF0aW9uJykge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdDZXJ0aWZpY2F0ZSBPVSB3YXMgbm90IFwiQXV0aGVudGljYXRvciBBdHRlc3RhdGlvblwiIChQYWNrZWR8RnVsbCknKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoIUNOKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ0NlcnRpZmljYXRlIENOIHdhcyBlbXB0eSAoUGFja2VkfEZ1bGwpJyk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKCFPKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ0NlcnRpZmljYXRlIE8gd2FzIGVtcHR5IChQYWNrZWR8RnVsbCknKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoIUMgfHwgQy5sZW5ndGggIT09IDIpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcignQ2VydGlmaWNhdGUgQyB3YXMgbm90IHR3by1jaGFyYWN0ZXIgSVNPIDMxNjYgY29kZSAoUGFja2VkfEZ1bGwpJyk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGJhc2ljQ29uc3RyYWludHNDQSkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdDZXJ0aWZpY2F0ZSBiYXNpYyBjb25zdHJhaW50cyBDQSB3YXMgbm90IGBmYWxzZWAgKFBhY2tlZHxGdWxsKScpO1xuICAgICAgICB9XG4gICAgICAgIGlmICh2ZXJzaW9uICE9PSAyKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ0NlcnRpZmljYXRlIHZlcnNpb24gd2FzIG5vdCBgM2AgKEFTTi4xIHZhbHVlIG9mIDIpIChQYWNrZWR8RnVsbCknKTtcbiAgICAgICAgfVxuICAgICAgICBsZXQgbm93ID0gbmV3IERhdGUoKTtcbiAgICAgICAgaWYgKG5vdEJlZm9yZSA+IG5vdykge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBDZXJ0aWZpY2F0ZSBub3QgZ29vZCBiZWZvcmUgXCIke25vdEJlZm9yZS50b1N0cmluZygpfVwiIChQYWNrZWR8RnVsbClgKTtcbiAgICAgICAgfVxuICAgICAgICBub3cgPSBuZXcgRGF0ZSgpO1xuICAgICAgICBpZiAobm90QWZ0ZXIgPCBub3cpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihgQ2VydGlmaWNhdGUgbm90IGdvb2QgYWZ0ZXIgXCIke25vdEFmdGVyLnRvU3RyaW5nKCl9XCIgKFBhY2tlZHxGdWxsKWApO1xuICAgICAgICB9XG4gICAgICAgIC8vIFRPRE86IElmIGNlcnRpZmljYXRlIGNvbnRhaW5zIGlkLWZpZG8tZ2VuLWNlLWFhZ3VpZCgxLjMuNi4xLjQuMS40NTcyNC4xLjEuNCkgZXh0ZW5zaW9uLCBjaGVja1xuICAgICAgICAvLyB0aGF0IGl04oCZcyB2YWx1ZSBpcyBzZXQgdG8gdGhlIHNhbWUgQUFHVUlEIGFzIGluIGF1dGhEYXRhLlxuICAgICAgICAvLyBJZiBhdmFpbGFibGUsIHZhbGlkYXRlIGF0dGVzdGF0aW9uIGFsZyBhbmQgeDVjIHdpdGggaW5mbyBpbiB0aGUgbWV0YWRhdGEgc3RhdGVtZW50XG4gICAgICAgIGNvbnN0IHN0YXRlbWVudCA9IGF3YWl0IE1ldGFkYXRhU2VydmljZS5nZXRTdGF0ZW1lbnQoYWFndWlkKTtcbiAgICAgICAgaWYgKHN0YXRlbWVudCkge1xuICAgICAgICAgICAgLy8gVGhlIHByZXNlbmNlIG9mIHg1YyBtZWFucyB0aGlzIGlzIGEgZnVsbCBhdHRlc3RhdGlvbi4gQ2hlY2sgdG8gc2VlIGlmIGF0dGVzdGF0aW9uVHlwZXNcbiAgICAgICAgICAgIC8vIGluY2x1ZGVzIHBhY2tlZCBhdHRlc3RhdGlvbnMuXG4gICAgICAgICAgICBpZiAoc3RhdGVtZW50LmF0dGVzdGF0aW9uVHlwZXMuaW5kZXhPZignYmFzaWNfZnVsbCcpIDwgMCkge1xuICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcignTWV0YWRhdGEgZG9lcyBub3QgaW5kaWNhdGUgc3VwcG9ydCBmb3IgZnVsbCBhdHRlc3RhdGlvbnMgKFBhY2tlZHxGdWxsKScpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICBhd2FpdCB2ZXJpZnlBdHRlc3RhdGlvbldpdGhNZXRhZGF0YSh7XG4gICAgICAgICAgICAgICAgICAgIHN0YXRlbWVudCxcbiAgICAgICAgICAgICAgICAgICAgY3JlZGVudGlhbFB1YmxpY0tleSxcbiAgICAgICAgICAgICAgICAgICAgeDVjLFxuICAgICAgICAgICAgICAgICAgICBhdHRlc3RhdGlvblN0YXRlbWVudEFsZzogYWxnLFxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgY2F0Y2ggKGVycikge1xuICAgICAgICAgICAgICAgIGNvbnN0IF9lcnIgPSBlcnI7XG4gICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKGAke19lcnIubWVzc2FnZX0gKFBhY2tlZHxGdWxsKWApO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICAvLyBUcnkgdmFsaWRhdGluZyB0aGUgY2VydGlmaWNhdGUgcGF0aCB1c2luZyB0aGUgcm9vdCBjZXJ0aWZpY2F0ZXMgc2V0IHZpYSBTZXR0aW5nc1NlcnZpY2VcbiAgICAgICAgICAgICAgICBhd2FpdCB2YWxpZGF0ZUNlcnRpZmljYXRlUGF0aCh4NWMubWFwKGNvbnZlcnRDZXJ0QnVmZmVyVG9QRU0pLCByb290Q2VydGlmaWNhdGVzKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGNhdGNoIChlcnIpIHtcbiAgICAgICAgICAgICAgICBjb25zdCBfZXJyID0gZXJyO1xuICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihgJHtfZXJyLm1lc3NhZ2V9IChQYWNrZWR8RnVsbClgKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICB2ZXJpZmllZCA9IGF3YWl0IHZlcmlmeVNpZ25hdHVyZSh7XG4gICAgICAgICAgICBzaWduYXR1cmU6IHNpZyxcbiAgICAgICAgICAgIGRhdGE6IHNpZ25hdHVyZUJhc2UsXG4gICAgICAgICAgICB4NTA5Q2VydGlmaWNhdGU6IHg1Y1swXSxcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgICB2ZXJpZmllZCA9IGF3YWl0IHZlcmlmeVNpZ25hdHVyZSh7XG4gICAgICAgICAgICBzaWduYXR1cmU6IHNpZyxcbiAgICAgICAgICAgIGRhdGE6IHNpZ25hdHVyZUJhc2UsXG4gICAgICAgICAgICBjcmVkZW50aWFsUHVibGljS2V5LFxuICAgICAgICAgICAgaGFzaEFsZ29yaXRobTogYWxnLFxuICAgICAgICB9KTtcbiAgICB9XG4gICAgcmV0dXJuIHZlcmlmaWVkO1xufVxuIl0sIm5hbWVzIjpbImlzQ09TRUFsZyIsImNvbnZlcnRDZXJ0QnVmZmVyVG9QRU0iLCJ2YWxpZGF0ZUNlcnRpZmljYXRlUGF0aCIsImdldENlcnRpZmljYXRlSW5mbyIsInZlcmlmeVNpZ25hdHVyZSIsImlzb1VpbnQ4QXJyYXkiLCJNZXRhZGF0YVNlcnZpY2UiLCJ2ZXJpZnlBdHRlc3RhdGlvbldpdGhNZXRhZGF0YSIsInZlcmlmeUF0dGVzdGF0aW9uUGFja2VkIiwib3B0aW9ucyIsImF0dFN0bXQiLCJjbGllbnREYXRhSGFzaCIsImF1dGhEYXRhIiwiY3JlZGVudGlhbFB1YmxpY0tleSIsImFhZ3VpZCIsInJvb3RDZXJ0aWZpY2F0ZXMiLCJzaWciLCJnZXQiLCJ4NWMiLCJhbGciLCJFcnJvciIsInNpZ25hdHVyZUJhc2UiLCJjb25jYXQiLCJ2ZXJpZmllZCIsInN1YmplY3QiLCJiYXNpY0NvbnN0cmFpbnRzQ0EiLCJ2ZXJzaW9uIiwibm90QmVmb3JlIiwibm90QWZ0ZXIiLCJPVSIsIkNOIiwiTyIsIkMiLCJsZW5ndGgiLCJub3ciLCJEYXRlIiwidG9TdHJpbmciLCJzdGF0ZW1lbnQiLCJnZXRTdGF0ZW1lbnQiLCJhdHRlc3RhdGlvblR5cGVzIiwiaW5kZXhPZiIsImF0dGVzdGF0aW9uU3RhdGVtZW50QWxnIiwiZXJyIiwiX2VyciIsIm1lc3NhZ2UiLCJtYXAiLCJzaWduYXR1cmUiLCJkYXRhIiwieDUwOUNlcnRpZmljYXRlIiwiaGFzaEFsZ29yaXRobSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@simplewebauthn/server/esm/registration/verifications/verifyAttestationPacked.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@simplewebauthn/server/esm/registration/verifyRegistrationResponse.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/@simplewebauthn/server/esm/registration/verifyRegistrationResponse.js ***!
  \********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   verifyRegistrationResponse: () => (/* binding */ verifyRegistrationResponse)\n/* harmony export */ });\n/* harmony import */ var _helpers_decodeAttestationObject_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../helpers/decodeAttestationObject.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/decodeAttestationObject.js\");\n/* harmony import */ var _helpers_decodeClientDataJSON_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../helpers/decodeClientDataJSON.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/decodeClientDataJSON.js\");\n/* harmony import */ var _helpers_parseAuthenticatorData_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../helpers/parseAuthenticatorData.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/parseAuthenticatorData.js\");\n/* harmony import */ var _helpers_toHash_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../helpers/toHash.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/toHash.js\");\n/* harmony import */ var _helpers_decodeCredentialPublicKey_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../helpers/decodeCredentialPublicKey.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/decodeCredentialPublicKey.js\");\n/* harmony import */ var _helpers_cose_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../helpers/cose.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/cose.js\");\n/* harmony import */ var _helpers_convertAAGUIDToString_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../helpers/convertAAGUIDToString.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/convertAAGUIDToString.js\");\n/* harmony import */ var _helpers_parseBackupFlags_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../helpers/parseBackupFlags.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/parseBackupFlags.js\");\n/* harmony import */ var _helpers_matchExpectedRPID_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../helpers/matchExpectedRPID.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/matchExpectedRPID.js\");\n/* harmony import */ var _helpers_iso_index_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../helpers/iso/index.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/index.js\");\n/* harmony import */ var _services_settingsService_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../services/settingsService.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/services/settingsService.js\");\n/* harmony import */ var _generateRegistrationOptions_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./generateRegistrationOptions.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/registration/generateRegistrationOptions.js\");\n/* harmony import */ var _verifications_verifyAttestationFIDOU2F_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./verifications/verifyAttestationFIDOU2F.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/registration/verifications/verifyAttestationFIDOU2F.js\");\n/* harmony import */ var _verifications_verifyAttestationPacked_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./verifications/verifyAttestationPacked.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/registration/verifications/verifyAttestationPacked.js\");\n/* harmony import */ var _verifications_verifyAttestationAndroidSafetyNet_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./verifications/verifyAttestationAndroidSafetyNet.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/registration/verifications/verifyAttestationAndroidSafetyNet.js\");\n/* harmony import */ var _verifications_tpm_verifyAttestationTPM_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./verifications/tpm/verifyAttestationTPM.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/registration/verifications/tpm/verifyAttestationTPM.js\");\n/* harmony import */ var _verifications_verifyAttestationAndroidKey_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./verifications/verifyAttestationAndroidKey.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/registration/verifications/verifyAttestationAndroidKey.js\");\n/* harmony import */ var _verifications_verifyAttestationApple_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./verifications/verifyAttestationApple.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/registration/verifications/verifyAttestationApple.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * Verify that the user has legitimately completed the registration process\n *\n * **Options:**\n *\n * @param response Response returned by **@simplewebauthn/browser**'s `startAuthentication()`\n * @param expectedChallenge The base64url-encoded `options.challenge` returned by\n * `generateRegistrationOptions()`\n * @param expectedOrigin Website URL (or array of URLs) that the registration should have occurred on\n * @param expectedRPID RP ID (or array of IDs) that was specified in the registration options\n * @param expectedType (Optional) The response type expected ('webauthn.create')\n * @param requireUserVerification (Optional) Enforce user verification by the authenticator\n * (via PIN, fingerprint, etc...)\n * @param supportedAlgorithmIDs Array of numeric COSE algorithm identifiers supported for\n * attestation by this RP. See https://www.iana.org/assignments/cose/cose.xhtml#algorithms\n */ async function verifyRegistrationResponse(options) {\n    const { response, expectedChallenge, expectedOrigin, expectedRPID, expectedType, requireUserVerification = true, supportedAlgorithmIDs = _generateRegistrationOptions_js__WEBPACK_IMPORTED_MODULE_11__.supportedCOSEAlgorithmIdentifiers } = options;\n    const { id, rawId, type: credentialType, response: attestationResponse } = response;\n    // Ensure credential specified an ID\n    if (!id) {\n        throw new Error(\"Missing credential ID\");\n    }\n    // Ensure ID is base64url-encoded\n    if (id !== rawId) {\n        throw new Error(\"Credential ID was not base64url-encoded\");\n    }\n    // Make sure credential type is public-key\n    if (credentialType !== \"public-key\") {\n        throw new Error(`Unexpected credential type ${credentialType}, expected \"public-key\"`);\n    }\n    const clientDataJSON = (0,_helpers_decodeClientDataJSON_js__WEBPACK_IMPORTED_MODULE_1__.decodeClientDataJSON)(attestationResponse.clientDataJSON);\n    const { type, origin, challenge, tokenBinding } = clientDataJSON;\n    // Make sure we're handling an registration\n    if (Array.isArray(expectedType)) {\n        if (!expectedType.includes(type)) {\n            const joinedExpectedType = expectedType.join(\", \");\n            throw new Error(`Unexpected registration response type \"${type}\", expected one of: ${joinedExpectedType}`);\n        }\n    } else if (expectedType) {\n        if (type !== expectedType) {\n            throw new Error(`Unexpected registration response type \"${type}\", expected \"${expectedType}\"`);\n        }\n    } else if (type !== \"webauthn.create\") {\n        throw new Error(`Unexpected registration response type: ${type}`);\n    }\n    // Ensure the device provided the challenge we gave it\n    if (typeof expectedChallenge === \"function\") {\n        if (!await expectedChallenge(challenge)) {\n            throw new Error(`Custom challenge verifier returned false for registration response challenge \"${challenge}\"`);\n        }\n    } else if (challenge !== expectedChallenge) {\n        throw new Error(`Unexpected registration response challenge \"${challenge}\", expected \"${expectedChallenge}\"`);\n    }\n    // Check that the origin is our site\n    if (Array.isArray(expectedOrigin)) {\n        if (!expectedOrigin.includes(origin)) {\n            throw new Error(`Unexpected registration response origin \"${origin}\", expected one of: ${expectedOrigin.join(\", \")}`);\n        }\n    } else {\n        if (origin !== expectedOrigin) {\n            throw new Error(`Unexpected registration response origin \"${origin}\", expected \"${expectedOrigin}\"`);\n        }\n    }\n    if (tokenBinding) {\n        if (typeof tokenBinding !== \"object\") {\n            throw new Error(`Unexpected value for TokenBinding \"${tokenBinding}\"`);\n        }\n        if ([\n            \"present\",\n            \"supported\",\n            \"not-supported\"\n        ].indexOf(tokenBinding.status) < 0) {\n            throw new Error(`Unexpected tokenBinding.status value of \"${tokenBinding.status}\"`);\n        }\n    }\n    const attestationObject = _helpers_iso_index_js__WEBPACK_IMPORTED_MODULE_9__.isoBase64URL.toBuffer(attestationResponse.attestationObject);\n    const decodedAttestationObject = (0,_helpers_decodeAttestationObject_js__WEBPACK_IMPORTED_MODULE_0__.decodeAttestationObject)(attestationObject);\n    const fmt = decodedAttestationObject.get(\"fmt\");\n    const authData = decodedAttestationObject.get(\"authData\");\n    const attStmt = decodedAttestationObject.get(\"attStmt\");\n    const parsedAuthData = (0,_helpers_parseAuthenticatorData_js__WEBPACK_IMPORTED_MODULE_2__.parseAuthenticatorData)(authData);\n    const { aaguid, rpIdHash, flags, credentialID, counter, credentialPublicKey, extensionsData } = parsedAuthData;\n    // Make sure the response's RP ID is ours\n    let matchedRPID;\n    if (expectedRPID) {\n        let expectedRPIDs = [];\n        if (typeof expectedRPID === \"string\") {\n            expectedRPIDs = [\n                expectedRPID\n            ];\n        } else {\n            expectedRPIDs = expectedRPID;\n        }\n        matchedRPID = await (0,_helpers_matchExpectedRPID_js__WEBPACK_IMPORTED_MODULE_8__.matchExpectedRPID)(rpIdHash, expectedRPIDs);\n    }\n    // Make sure someone was physically present\n    if (!flags.up) {\n        throw new Error(\"User not present during registration\");\n    }\n    // Enforce user verification if specified\n    if (requireUserVerification && !flags.uv) {\n        throw new Error(\"User verification required, but user could not be verified\");\n    }\n    if (!credentialID) {\n        throw new Error(\"No credential ID was provided by authenticator\");\n    }\n    if (!credentialPublicKey) {\n        throw new Error(\"No public key was provided by authenticator\");\n    }\n    if (!aaguid) {\n        throw new Error(\"No AAGUID was present during registration\");\n    }\n    const decodedPublicKey = (0,_helpers_decodeCredentialPublicKey_js__WEBPACK_IMPORTED_MODULE_4__.decodeCredentialPublicKey)(credentialPublicKey);\n    const alg = decodedPublicKey.get(_helpers_cose_js__WEBPACK_IMPORTED_MODULE_5__.COSEKEYS.alg);\n    if (typeof alg !== \"number\") {\n        throw new Error(\"Credential public key was missing numeric alg\");\n    }\n    // Make sure the key algorithm is one we specified within the registration options\n    if (!supportedAlgorithmIDs.includes(alg)) {\n        const supported = supportedAlgorithmIDs.join(\", \");\n        throw new Error(`Unexpected public key alg \"${alg}\", expected one of \"${supported}\"`);\n    }\n    const clientDataHash = await (0,_helpers_toHash_js__WEBPACK_IMPORTED_MODULE_3__.toHash)(_helpers_iso_index_js__WEBPACK_IMPORTED_MODULE_9__.isoBase64URL.toBuffer(attestationResponse.clientDataJSON));\n    const rootCertificates = _services_settingsService_js__WEBPACK_IMPORTED_MODULE_10__.SettingsService.getRootCertificates({\n        identifier: fmt\n    });\n    // Prepare arguments to pass to the relevant verification method\n    const verifierOpts = {\n        aaguid,\n        attStmt,\n        authData,\n        clientDataHash,\n        credentialID,\n        credentialPublicKey,\n        rootCertificates,\n        rpIdHash\n    };\n    /**\n     * Verification can only be performed when attestation = 'direct'\n     */ let verified = false;\n    if (fmt === \"fido-u2f\") {\n        verified = await (0,_verifications_verifyAttestationFIDOU2F_js__WEBPACK_IMPORTED_MODULE_12__.verifyAttestationFIDOU2F)(verifierOpts);\n    } else if (fmt === \"packed\") {\n        verified = await (0,_verifications_verifyAttestationPacked_js__WEBPACK_IMPORTED_MODULE_13__.verifyAttestationPacked)(verifierOpts);\n    } else if (fmt === \"android-safetynet\") {\n        verified = await (0,_verifications_verifyAttestationAndroidSafetyNet_js__WEBPACK_IMPORTED_MODULE_14__.verifyAttestationAndroidSafetyNet)(verifierOpts);\n    } else if (fmt === \"android-key\") {\n        verified = await (0,_verifications_verifyAttestationAndroidKey_js__WEBPACK_IMPORTED_MODULE_16__.verifyAttestationAndroidKey)(verifierOpts);\n    } else if (fmt === \"tpm\") {\n        verified = await (0,_verifications_tpm_verifyAttestationTPM_js__WEBPACK_IMPORTED_MODULE_15__.verifyAttestationTPM)(verifierOpts);\n    } else if (fmt === \"apple\") {\n        verified = await (0,_verifications_verifyAttestationApple_js__WEBPACK_IMPORTED_MODULE_17__.verifyAttestationApple)(verifierOpts);\n    } else if (fmt === \"none\") {\n        if (attStmt.size > 0) {\n            throw new Error(\"None attestation had unexpected attestation statement\");\n        }\n        // This is the weaker of the attestations, so there's nothing else to really check\n        verified = true;\n    } else {\n        throw new Error(`Unsupported Attestation Format: ${fmt}`);\n    }\n    const toReturn = {\n        verified\n    };\n    if (toReturn.verified) {\n        const { credentialDeviceType, credentialBackedUp } = (0,_helpers_parseBackupFlags_js__WEBPACK_IMPORTED_MODULE_7__.parseBackupFlags)(flags);\n        toReturn.registrationInfo = {\n            fmt,\n            counter,\n            aaguid: (0,_helpers_convertAAGUIDToString_js__WEBPACK_IMPORTED_MODULE_6__.convertAAGUIDToString)(aaguid),\n            credentialID,\n            credentialPublicKey,\n            credentialType,\n            attestationObject,\n            userVerified: flags.uv,\n            credentialDeviceType,\n            credentialBackedUp,\n            origin: clientDataJSON.origin,\n            rpID: matchedRPID,\n            authenticatorExtensionResults: extensionsData\n        };\n    }\n    return toReturn;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@simplewebauthn/server/esm/registration/verifyRegistrationResponse.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@simplewebauthn/server/esm/services/defaultRootCerts/android-key.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/@simplewebauthn/server/esm/services/defaultRootCerts/android-key.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Google_Hardware_Attestation_Root_1: () => (/* binding */ Google_Hardware_Attestation_Root_1),\n/* harmony export */   Google_Hardware_Attestation_Root_2: () => (/* binding */ Google_Hardware_Attestation_Root_2)\n/* harmony export */ });\n/**\n * Google Hardware Attestation Root 1\n *\n * Downloaded from https://developer.android.com/training/articles/security-key-attestation#root_certificate\n * (first entry)\n *\n * Valid until 2026-05-24 @ 09:28 PST\n *\n * SHA256 Fingerprint\n * C1:98:4A:3E:F4:5C:1E:2A:91:85:51:DE:10:60:3C:86:F7:05:1B:22:49:C4:89:1C:AE:32:30:EA:BD:0C:97:D5\n */ const Google_Hardware_Attestation_Root_1 = `-----BEGIN CERTIFICATE-----\nMIIFYDCCA0igAwIBAgIJAOj6GWMU0voYMA0GCSqGSIb3DQEBCwUAMBsxGTAXBgNV\nBAUTEGY5MjAwOWU4NTNiNmIwNDUwHhcNMTYwNTI2MTYyODUyWhcNMjYwNTI0MTYy\nODUyWjAbMRkwFwYDVQQFExBmOTIwMDllODUzYjZiMDQ1MIICIjANBgkqhkiG9w0B\nAQEFAAOCAg8AMIICCgKCAgEAr7bHgiuxpwHsK7Qui8xUFmOr75gvMsd/dTEDDJdS\nSxtf6An7xyqpRR90PL2abxM1dEqlXnf2tqw1Ne4Xwl5jlRfdnJLmN0pTy/4lj4/7\ntv0Sk3iiKkypnEUtR6WfMgH0QZfKHM1+di+y9TFRtv6y//0rb+T+W8a9nsNL/ggj\nnar86461qO0rOs2cXjp3kOG1FEJ5MVmFmBGtnrKpa73XpXyTqRxB/M0n1n/W9nGq\nC4FSYa04T6N5RIZGBN2z2MT5IKGbFlbC8UrW0DxW7AYImQQcHtGl/m00QLVWutHQ\noVJYnFPlXTcHYvASLu+RhhsbDmxMgJJ0mcDpvsC4PjvB+TxywElgS70vE0XmLD+O\nJtvsBslHZvPBKCOdT0MS+tgSOIfga+z1Z1g7+DVagf7quvmag8jfPioyKvxnK/Eg\nsTUVi2ghzq8wm27ud/mIM7AY2qEORR8Go3TVB4HzWQgpZrt3i5MIlCaY504LzSRi\nigHCzAPlHws+W0rB5N+er5/2pJKnfBSDiCiFAVtCLOZ7gLiMm0jhO2B6tUXHI/+M\nRPjy02i59lINMRRev56GKtcd9qO/0kUJWdZTdA2XoS82ixPvZtXQpUpuL12ab+9E\naDK8Z4RHJYYfCT3Q5vNAXaiWQ+8PTWm2QgBR/bkwSWc+NpUFgNPN9PvQi8WEg5Um\nAGMCAwEAAaOBpjCBozAdBgNVHQ4EFgQUNmHhAHyIBQlRi0RsR/8aTMnqTxIwHwYD\nVR0jBBgwFoAUNmHhAHyIBQlRi0RsR/8aTMnqTxIwDwYDVR0TAQH/BAUwAwEB/zAO\nBgNVHQ8BAf8EBAMCAYYwQAYDVR0fBDkwNzA1oDOgMYYvaHR0cHM6Ly9hbmRyb2lk\nLmdvb2dsZWFwaXMuY29tL2F0dGVzdGF0aW9uL2NybC8wDQYJKoZIhvcNAQELBQAD\nggIBACDIw41L3KlXG0aMiS//cqrG+EShHUGo8HNsw30W1kJtjn6UBwRM6jnmiwfB\nPb8VA91chb2vssAtX2zbTvqBJ9+LBPGCdw/E53Rbf86qhxKaiAHOjpvAy5Y3m00m\nqC0w/Zwvju1twb4vhLaJ5NkUJYsUS7rmJKHHBnETLi8GFqiEsqTWpG/6ibYCv7rY\nDBJDcR9W62BW9jfIoBQcxUCUJouMPH25lLNcDc1ssqvC2v7iUgI9LeoM1sNovqPm\nQUiG9rHli1vXxzCyaMTjwftkJLkf6724DFhuKug2jITV0QkXvaJWF4nUaHOTNA4u\nJU9WDvZLI1j83A+/xnAJUucIv/zGJ1AMH2boHqF8CY16LpsYgBt6tKxxWH00XcyD\nCdW2KlBCeqbQPcsFmWyWugxdcekhYsAWyoSf818NUsZdBWBaR/OukXrNLfkQ79Iy\nZohZbvabO/X+MVT3rriAoKc8oE2Uws6DF+60PV7/WIPjNvXySdqspImSN78mflxD\nqwLqRBYkA3I75qppLGG9rp7UCdRjxMl8ZDBld+7yvHVgt1cVzJx9xnyGCC23Uaic\nMDSXYrB4I4WHXPGjxhZuCuPBLTdOLU8YRvMYdEvYebWHMpvwGCF6bAx3JBpIeOQ1\nwDB5y0USicV3YgYGmi+NZfhA4URSh77Yd6uuJOJENRaNVTzk\n-----END CERTIFICATE-----\n`;\n/**\n * Google Hardware Attestation Root 2\n *\n * Downloaded from https://developer.android.com/training/articles/security-key-attestation#root_certificate\n * (second entry)\n *\n * Valid until 2034-11-18 @ 12:37 PST\n *\n * SHA256 Fingerprint\n * 1E:F1:A0:4B:8B:A5:8A:B9:45:89:AC:49:8C:89:82:A7:83:F2:4E:A7:30:7E:01:59:A0:C3:A7:3B:37:7D:87:CC\n */ const Google_Hardware_Attestation_Root_2 = `-----BEGIN CERTIFICATE-----\nMIIFHDCCAwSgAwIBAgIJANUP8luj8tazMA0GCSqGSIb3DQEBCwUAMBsxGTAXBgNV\nBAUTEGY5MjAwOWU4NTNiNmIwNDUwHhcNMTkxMTIyMjAzNzU4WhcNMzQxMTE4MjAz\nNzU4WjAbMRkwFwYDVQQFExBmOTIwMDllODUzYjZiMDQ1MIICIjANBgkqhkiG9w0B\nAQEFAAOCAg8AMIICCgKCAgEAr7bHgiuxpwHsK7Qui8xUFmOr75gvMsd/dTEDDJdS\nSxtf6An7xyqpRR90PL2abxM1dEqlXnf2tqw1Ne4Xwl5jlRfdnJLmN0pTy/4lj4/7\ntv0Sk3iiKkypnEUtR6WfMgH0QZfKHM1+di+y9TFRtv6y//0rb+T+W8a9nsNL/ggj\nnar86461qO0rOs2cXjp3kOG1FEJ5MVmFmBGtnrKpa73XpXyTqRxB/M0n1n/W9nGq\nC4FSYa04T6N5RIZGBN2z2MT5IKGbFlbC8UrW0DxW7AYImQQcHtGl/m00QLVWutHQ\noVJYnFPlXTcHYvASLu+RhhsbDmxMgJJ0mcDpvsC4PjvB+TxywElgS70vE0XmLD+O\nJtvsBslHZvPBKCOdT0MS+tgSOIfga+z1Z1g7+DVagf7quvmag8jfPioyKvxnK/Eg\nsTUVi2ghzq8wm27ud/mIM7AY2qEORR8Go3TVB4HzWQgpZrt3i5MIlCaY504LzSRi\nigHCzAPlHws+W0rB5N+er5/2pJKnfBSDiCiFAVtCLOZ7gLiMm0jhO2B6tUXHI/+M\nRPjy02i59lINMRRev56GKtcd9qO/0kUJWdZTdA2XoS82ixPvZtXQpUpuL12ab+9E\naDK8Z4RHJYYfCT3Q5vNAXaiWQ+8PTWm2QgBR/bkwSWc+NpUFgNPN9PvQi8WEg5Um\nAGMCAwEAAaNjMGEwHQYDVR0OBBYEFDZh4QB8iAUJUYtEbEf/GkzJ6k8SMB8GA1Ud\nIwQYMBaAFDZh4QB8iAUJUYtEbEf/GkzJ6k8SMA8GA1UdEwEB/wQFMAMBAf8wDgYD\nVR0PAQH/BAQDAgIEMA0GCSqGSIb3DQEBCwUAA4ICAQBOMaBc8oumXb2voc7XCWnu\nXKhBBK3e2KMGz39t7lA3XXRe2ZLLAkLM5y3J7tURkf5a1SutfdOyXAmeE6SRo83U\nh6WszodmMkxK5GM4JGrnt4pBisu5igXEydaW7qq2CdC6DOGjG+mEkN8/TA6p3cno\nL/sPyz6evdjLlSeJ8rFBH6xWyIZCbrcpYEJzXaUOEaxxXxgYz5/cTiVKN2M1G2ok\nQBUIYSY6bjEL4aUN5cfo7ogP3UvliEo3Eo0YgwuzR2v0KR6C1cZqZJSTnghIC/vA\nD32KdNQ+c3N+vl2OTsUVMC1GiWkngNx1OO1+kXW+YTnnTUOtOIswUP/Vqd5SYgAI\nmMAfY8U9/iIgkQj6T2W6FsScy94IN9fFhE1UtzmLoBIuUFsVXJMTz+Jucth+IqoW\nFua9v1R93/k98p41pjtFX+H8DslVgfP097vju4KDlqN64xV1grw3ZLl4CiOe/A91\noeLm2UHOq6wn3esB4r2EIQKb6jTVGu5sYCcdWpXr0AUVqcABPdgL+H7qJguBw09o\njm6xNIrw2OocrDKsudk/okr/AwqEyPKw9WnMlQgLIKw1rODG2NvU9oR3GVGdMkUB\nZutL8VuFkERQGt6vQ2OCw0sV47VMkuYbacK/xyZFiRcrPJPb41zgbQj9XAEyLKCH\nex0SdDrx+tWUDqG8At2JHA==\n-----END CERTIFICATE-----\n`;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNpbXBsZXdlYmF1dGhuL3NlcnZlci9lc20vc2VydmljZXMvZGVmYXVsdFJvb3RDZXJ0cy9hbmRyb2lkLWtleS5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBOzs7Ozs7Ozs7O0NBVUMsR0FDTSxNQUFNQSxxQ0FBcUMsQ0FBQzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQStCbkQsQ0FBQyxDQUFDO0FBQ0Y7Ozs7Ozs7Ozs7Q0FVQyxHQUNNLE1BQU1DLHFDQUFxQyxDQUFDOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUE4Qm5ELENBQUMsQ0FBQyIsInNvdXJjZXMiOlsid2VicGFjazovL2NhbXB1cy1taW5kLy4vbm9kZV9tb2R1bGVzL0BzaW1wbGV3ZWJhdXRobi9zZXJ2ZXIvZXNtL3NlcnZpY2VzL2RlZmF1bHRSb290Q2VydHMvYW5kcm9pZC1rZXkuanM/MTEzMSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEdvb2dsZSBIYXJkd2FyZSBBdHRlc3RhdGlvbiBSb290IDFcbiAqXG4gKiBEb3dubG9hZGVkIGZyb20gaHR0cHM6Ly9kZXZlbG9wZXIuYW5kcm9pZC5jb20vdHJhaW5pbmcvYXJ0aWNsZXMvc2VjdXJpdHkta2V5LWF0dGVzdGF0aW9uI3Jvb3RfY2VydGlmaWNhdGVcbiAqIChmaXJzdCBlbnRyeSlcbiAqXG4gKiBWYWxpZCB1bnRpbCAyMDI2LTA1LTI0IEAgMDk6MjggUFNUXG4gKlxuICogU0hBMjU2IEZpbmdlcnByaW50XG4gKiBDMTo5ODo0QTozRTpGNDo1QzoxRToyQTo5MTo4NTo1MTpERToxMDo2MDozQzo4NjpGNzowNToxQjoyMjo0OTpDNDo4OToxQzpBRTozMjozMDpFQTpCRDowQzo5NzpENVxuICovXG5leHBvcnQgY29uc3QgR29vZ2xlX0hhcmR3YXJlX0F0dGVzdGF0aW9uX1Jvb3RfMSA9IGAtLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS1cbk1JSUZZRENDQTBpZ0F3SUJBZ0lKQU9qNkdXTVUwdm9ZTUEwR0NTcUdTSWIzRFFFQkN3VUFNQnN4R1RBWEJnTlZcbkJBVVRFR1k1TWpBd09XVTROVE5pTm1Jd05EVXdIaGNOTVRZd05USTJNVFl5T0RVeVdoY05Nall3TlRJME1UWXlcbk9EVXlXakFiTVJrd0Z3WURWUVFGRXhCbU9USXdNRGxsT0RVellqWmlNRFExTUlJQ0lqQU5CZ2txaGtpRzl3MEJcbkFRRUZBQU9DQWc4QU1JSUNDZ0tDQWdFQXI3YkhnaXV4cHdIc0s3UXVpOHhVRm1Pcjc1Z3ZNc2QvZFRFRERKZFNcblN4dGY2QW43eHlxcFJSOTBQTDJhYnhNMWRFcWxYbmYydHF3MU5lNFh3bDVqbFJmZG5KTG1OMHBUeS80bGo0LzdcbnR2MFNrM2lpS2t5cG5FVXRSNldmTWdIMFFaZktITTErZGkreTlURlJ0djZ5Ly8wcmIrVCtXOGE5bnNOTC9nZ2pcbm5hcjg2NDYxcU8wck9zMmNYanAza09HMUZFSjVNVm1GbUJHdG5yS3BhNzNYcFh5VHFSeEIvTTBuMW4vVzluR3FcbkM0RlNZYTA0VDZONVJJWkdCTjJ6Mk1UNUlLR2JGbGJDOFVyVzBEeFc3QVlJbVFRY0h0R2wvbTAwUUxWV3V0SFFcbm9WSlluRlBsWFRjSFl2QVNMdStSaGhzYkRteE1nSkowbWNEcHZzQzRQanZCK1R4eXdFbGdTNzB2RTBYbUxEK09cbkp0dnNCc2xIWnZQQktDT2RUME1TK3RnU09JZmdhK3oxWjFnNytEVmFnZjdxdXZtYWc4amZQaW95S3Z4bksvRWdcbnNUVVZpMmdoenE4d20yN3VkL21JTTdBWTJxRU9SUjhHbzNUVkI0SHpXUWdwWnJ0M2k1TUlsQ2FZNTA0THpTUmlcbmlnSEN6QVBsSHdzK1cwckI1TitlcjUvMnBKS25mQlNEaUNpRkFWdENMT1o3Z0xpTW0wamhPMkI2dFVYSEkvK01cblJQankwMmk1OWxJTk1SUmV2NTZHS3RjZDlxTy8wa1VKV2RaVGRBMlhvUzgyaXhQdlp0WFFwVXB1TDEyYWIrOUVcbmFESzhaNFJISllZZkNUM1E1dk5BWGFpV1ErOFBUV20yUWdCUi9ia3dTV2MrTnBVRmdOUE45UHZRaThXRWc1VW1cbkFHTUNBd0VBQWFPQnBqQ0JvekFkQmdOVkhRNEVGZ1FVTm1IaEFIeUlCUWxSaTBSc1IvOGFUTW5xVHhJd0h3WURcblZSMGpCQmd3Rm9BVU5tSGhBSHlJQlFsUmkwUnNSLzhhVE1ucVR4SXdEd1lEVlIwVEFRSC9CQVV3QXdFQi96QU9cbkJnTlZIUThCQWY4RUJBTUNBWVl3UUFZRFZSMGZCRGt3TnpBMW9ET2dNWVl2YUhSMGNITTZMeTloYm1SeWIybGtcbkxtZHZiMmRzWldGd2FYTXVZMjl0TDJGMGRHVnpkR0YwYVc5dUwyTnliQzh3RFFZSktvWklodmNOQVFFTEJRQURcbmdnSUJBQ0RJdzQxTDNLbFhHMGFNaVMvL2NxckcrRVNoSFVHbzhITnN3MzBXMWtKdGpuNlVCd1JNNmpubWl3ZkJcblBiOFZBOTFjaGIydnNzQXRYMnpiVHZxQko5K0xCUEdDZHcvRTUzUmJmODZxaHhLYWlBSE9qcHZBeTVZM20wMG1cbnFDMHcvWnd2anUxdHdiNHZoTGFKNU5rVUpZc1VTN3JtSktISEJuRVRMaThHRnFpRXNxVFdwRy82aWJZQ3Y3cllcbkRCSkRjUjlXNjJCVzlqZklvQlFjeFVDVUpvdU1QSDI1bExOY0RjMXNzcXZDMnY3aVVnSTlMZW9NMXNOb3ZxUG1cblFVaUc5ckhsaTF2WHh6Q3lhTVRqd2Z0a0pMa2Y2NzI0REZodUt1ZzJqSVRWMFFrWHZhSldGNG5VYUhPVE5BNHVcbkpVOVdEdlpMSTFqODNBKy94bkFKVXVjSXYvekdKMUFNSDJib0hxRjhDWTE2THBzWWdCdDZ0S3h4V0gwMFhjeURcbkNkVzJLbEJDZXFiUVBjc0ZtV3lXdWd4ZGNla2hZc0FXeW9TZjgxOE5Vc1pkQldCYVIvT3VrWHJOTGZrUTc5SXlcblpvaFpidmFiTy9YK01WVDNycmlBb0tjOG9FMlV3czZERis2MFBWNy9XSVBqTnZYeVNkcXNwSW1TTjc4bWZseERcbnF3THFSQllrQTNJNzVxcHBMR0c5cnA3VUNkUmp4TWw4WkRCbGQrN3l2SFZndDFjVnpKeDl4bnlHQ0MyM1VhaWNcbk1EU1hZckI0STRXSFhQR2p4aFp1Q3VQQkxUZE9MVThZUnZNWWRFdlllYldITXB2d0dDRjZiQXgzSkJwSWVPUTFcbndEQjV5MFVTaWNWM1lnWUdtaStOWmZoQTRVUlNoNzdZZDZ1dUpPSkVOUmFOVlR6a1xuLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLVxuYDtcbi8qKlxuICogR29vZ2xlIEhhcmR3YXJlIEF0dGVzdGF0aW9uIFJvb3QgMlxuICpcbiAqIERvd25sb2FkZWQgZnJvbSBodHRwczovL2RldmVsb3Blci5hbmRyb2lkLmNvbS90cmFpbmluZy9hcnRpY2xlcy9zZWN1cml0eS1rZXktYXR0ZXN0YXRpb24jcm9vdF9jZXJ0aWZpY2F0ZVxuICogKHNlY29uZCBlbnRyeSlcbiAqXG4gKiBWYWxpZCB1bnRpbCAyMDM0LTExLTE4IEAgMTI6MzcgUFNUXG4gKlxuICogU0hBMjU2IEZpbmdlcnByaW50XG4gKiAxRTpGMTpBMDo0Qjo4QjpBNTo4QTpCOTo0NTo4OTpBQzo0OTo4Qzo4OTo4MjpBNzo4MzpGMjo0RTpBNzozMDo3RTowMTo1OTpBMDpDMzpBNzozQjozNzo3RDo4NzpDQ1xuICovXG5leHBvcnQgY29uc3QgR29vZ2xlX0hhcmR3YXJlX0F0dGVzdGF0aW9uX1Jvb3RfMiA9IGAtLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS1cbk1JSUZIRENDQXdTZ0F3SUJBZ0lKQU5VUDhsdWo4dGF6TUEwR0NTcUdTSWIzRFFFQkN3VUFNQnN4R1RBWEJnTlZcbkJBVVRFR1k1TWpBd09XVTROVE5pTm1Jd05EVXdIaGNOTVRreE1USXlNakF6TnpVNFdoY05NelF4TVRFNE1qQXpcbk56VTRXakFiTVJrd0Z3WURWUVFGRXhCbU9USXdNRGxsT0RVellqWmlNRFExTUlJQ0lqQU5CZ2txaGtpRzl3MEJcbkFRRUZBQU9DQWc4QU1JSUNDZ0tDQWdFQXI3YkhnaXV4cHdIc0s3UXVpOHhVRm1Pcjc1Z3ZNc2QvZFRFRERKZFNcblN4dGY2QW43eHlxcFJSOTBQTDJhYnhNMWRFcWxYbmYydHF3MU5lNFh3bDVqbFJmZG5KTG1OMHBUeS80bGo0LzdcbnR2MFNrM2lpS2t5cG5FVXRSNldmTWdIMFFaZktITTErZGkreTlURlJ0djZ5Ly8wcmIrVCtXOGE5bnNOTC9nZ2pcbm5hcjg2NDYxcU8wck9zMmNYanAza09HMUZFSjVNVm1GbUJHdG5yS3BhNzNYcFh5VHFSeEIvTTBuMW4vVzluR3FcbkM0RlNZYTA0VDZONVJJWkdCTjJ6Mk1UNUlLR2JGbGJDOFVyVzBEeFc3QVlJbVFRY0h0R2wvbTAwUUxWV3V0SFFcbm9WSlluRlBsWFRjSFl2QVNMdStSaGhzYkRteE1nSkowbWNEcHZzQzRQanZCK1R4eXdFbGdTNzB2RTBYbUxEK09cbkp0dnNCc2xIWnZQQktDT2RUME1TK3RnU09JZmdhK3oxWjFnNytEVmFnZjdxdXZtYWc4amZQaW95S3Z4bksvRWdcbnNUVVZpMmdoenE4d20yN3VkL21JTTdBWTJxRU9SUjhHbzNUVkI0SHpXUWdwWnJ0M2k1TUlsQ2FZNTA0THpTUmlcbmlnSEN6QVBsSHdzK1cwckI1TitlcjUvMnBKS25mQlNEaUNpRkFWdENMT1o3Z0xpTW0wamhPMkI2dFVYSEkvK01cblJQankwMmk1OWxJTk1SUmV2NTZHS3RjZDlxTy8wa1VKV2RaVGRBMlhvUzgyaXhQdlp0WFFwVXB1TDEyYWIrOUVcbmFESzhaNFJISllZZkNUM1E1dk5BWGFpV1ErOFBUV20yUWdCUi9ia3dTV2MrTnBVRmdOUE45UHZRaThXRWc1VW1cbkFHTUNBd0VBQWFOak1HRXdIUVlEVlIwT0JCWUVGRFpoNFFCOGlBVUpVWXRFYkVmL0dreko2azhTTUI4R0ExVWRcbkl3UVlNQmFBRkRaaDRRQjhpQVVKVVl0RWJFZi9Ha3pKNms4U01BOEdBMVVkRXdFQi93UUZNQU1CQWY4d0RnWURcblZSMFBBUUgvQkFRREFnSUVNQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUNBUUJPTWFCYzhvdW1YYjJ2b2M3WENXbnVcblhLaEJCSzNlMktNR3ozOXQ3bEEzWFhSZTJaTExBa0xNNXkzSjd0VVJrZjVhMVN1dGZkT3lYQW1lRTZTUm84M1Vcbmg2V3N6b2RtTWt4SzVHTTRKR3JudDRwQmlzdTVpZ1hFeWRhVzdxcTJDZEM2RE9HakcrbUVrTjgvVEE2cDNjbm9cbkwvc1B5ejZldmRqTGxTZUo4ckZCSDZ4V3lJWkNicmNwWUVKelhhVU9FYXh4WHhnWXo1L2NUaVZLTjJNMUcyb2tcblFCVUlZU1k2YmpFTDRhVU41Y2ZvN29nUDNVdmxpRW8zRW8wWWd3dXpSMnYwS1I2QzFjWnFaSlNUbmdoSUMvdkFcbkQzMktkTlErYzNOK3ZsMk9Uc1VWTUMxR2lXa25nTngxT08xK2tYVytZVG5uVFVPdE9Jc3dVUC9WcWQ1U1lnQUlcbm1NQWZZOFU5L2lJZ2tRajZUMlc2RnNTY3k5NElOOWZGaEUxVXR6bUxvQkl1VUZzVlhKTVR6K0p1Y3RoK0lxb1dcbkZ1YTl2MVI5My9rOThwNDFwanRGWCtIOERzbFZnZlAwOTd2anU0S0RscU42NHhWMWdydzNaTGw0Q2lPZS9BOTFcbm9lTG0yVUhPcTZ3bjNlc0I0cjJFSVFLYjZqVFZHdTVzWUNjZFdwWHIwQVVWcWNBQlBkZ0wrSDdxSmd1QncwOW9cbmptNnhOSXJ3Mk9vY3JES3N1ZGsvb2tyL0F3cUV5UEt3OVduTWxRZ0xJS3cxck9ERzJOdlU5b1IzR1ZHZE1rVUJcblp1dEw4VnVGa0VSUUd0NnZRMk9DdzBzVjQ3Vk1rdVliYWNLL3h5WkZpUmNyUEpQYjQxemdiUWo5WEFFeUxLQ0hcbmV4MFNkRHJ4K3RXVURxRzhBdDJKSEE9PVxuLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLVxuYDtcbiJdLCJuYW1lcyI6WyJHb29nbGVfSGFyZHdhcmVfQXR0ZXN0YXRpb25fUm9vdF8xIiwiR29vZ2xlX0hhcmR3YXJlX0F0dGVzdGF0aW9uX1Jvb3RfMiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@simplewebauthn/server/esm/services/defaultRootCerts/android-key.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@simplewebauthn/server/esm/services/defaultRootCerts/android-safetynet.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/@simplewebauthn/server/esm/services/defaultRootCerts/android-safetynet.js ***!
  \************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GlobalSign_Root_CA: () => (/* binding */ GlobalSign_Root_CA)\n/* harmony export */ });\n/**\n * GlobalSign Root CA\n *\n * Downloaded from https://pki.goog/roots.pem\n *\n * Valid until 2028-01-28 @ 04:00 PST\n *\n * SHA256 Fingerprint\n * EB:D4:10:40:E4:BB:3E:C7:42:C9:E3:81:D3:1E:F2:A4:1A:48:B6:68:5C:96:E7:CE:F3:C1:DF:6C:D4:33:1C:99\n */ const GlobalSign_Root_CA = `-----BEGIN CERTIFICATE-----\nMIIDdTCCAl2gAwIBAgILBAAAAAABFUtaw5QwDQYJKoZIhvcNAQEFBQAwVzELMAkG\nA1UEBhMCQkUxGTAXBgNVBAoTEEdsb2JhbFNpZ24gbnYtc2ExEDAOBgNVBAsTB1Jv\nb3QgQ0ExGzAZBgNVBAMTEkdsb2JhbFNpZ24gUm9vdCBDQTAeFw05ODA5MDExMjAw\nMDBaFw0yODAxMjgxMjAwMDBaMFcxCzAJBgNVBAYTAkJFMRkwFwYDVQQKExBHbG9i\nYWxTaWduIG52LXNhMRAwDgYDVQQLEwdSb290IENBMRswGQYDVQQDExJHbG9iYWxT\naWduIFJvb3QgQ0EwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDaDuaZ\njc6j40+Kfvvxi4Mla+pIH/EqsLmVEQS98GPR4mdmzxzdzxtIK+6NiY6arymAZavp\nxy0Sy6scTHAHoT0KMM0VjU/43dSMUBUc71DuxC73/OlS8pF94G3VNTCOXkNz8kHp\n1Wrjsok6Vjk4bwY8iGlbKk3Fp1S4bInMm/k8yuX9ifUSPJJ4ltbcdG6TRGHRjcdG\nsnUOhugZitVtbNV4FpWi6cgKOOvyJBNPc1STE4U6G7weNLWLBYy5d4ux2x8gkasJ\nU26Qzns3dLlwR5EiUWMWea6xrkEmCMgZK9FGqkjWZCrXgzT/LCrBbBlDSgeF59N8\n9iFo7+ryUp9/k5DPAgMBAAGjQjBAMA4GA1UdDwEB/wQEAwIBBjAPBgNVHRMBAf8E\nBTADAQH/MB0GA1UdDgQWBBRge2YaRQ2XyolQL30EzTSo//z9SzANBgkqhkiG9w0B\nAQUFAAOCAQEA1nPnfE920I2/7LqivjTFKDK1fPxsnCwrvQmeU79rXqoRSLblCKOz\nyj1hTdNGCbM+w6DjY1Ub8rrvrTnhQ7k4o+YviiY776BQVvnGCv04zcQLcFGUl5gE\n38NflNUVyRRBnMRddWQVDf9VMOyGj/8N7yy5Y0b2qvzfvGn9LhJIZJrglfCm7ymP\nAbEVtQwdpf5pLGkkeB6zpxxxYu7KyJesF12KwvhHhm4qxFYxldBniYUr+WymXUad\nDKqC5JlR3XC321Y9YeRq4VzW9v493kHMB65jUr9TU/Qr6cf9tveCX4XSQRjbgbME\nHMUfpIBvFSDJ3gyICh3WZlXi/EjJKSZp4A==\n-----END CERTIFICATE-----\n`;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNpbXBsZXdlYmF1dGhuL3NlcnZlci9lc20vc2VydmljZXMvZGVmYXVsdFJvb3RDZXJ0cy9hbmRyb2lkLXNhZmV0eW5ldC5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7Ozs7Ozs7OztDQVNDLEdBQ00sTUFBTUEscUJBQXFCLENBQUM7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQXFCbkMsQ0FBQyxDQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vY2FtcHVzLW1pbmQvLi9ub2RlX21vZHVsZXMvQHNpbXBsZXdlYmF1dGhuL3NlcnZlci9lc20vc2VydmljZXMvZGVmYXVsdFJvb3RDZXJ0cy9hbmRyb2lkLXNhZmV0eW5ldC5qcz80NDA1Il0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogR2xvYmFsU2lnbiBSb290IENBXG4gKlxuICogRG93bmxvYWRlZCBmcm9tIGh0dHBzOi8vcGtpLmdvb2cvcm9vdHMucGVtXG4gKlxuICogVmFsaWQgdW50aWwgMjAyOC0wMS0yOCBAIDA0OjAwIFBTVFxuICpcbiAqIFNIQTI1NiBGaW5nZXJwcmludFxuICogRUI6RDQ6MTA6NDA6RTQ6QkI6M0U6Qzc6NDI6Qzk6RTM6ODE6RDM6MUU6RjI6QTQ6MUE6NDg6QjY6Njg6NUM6OTY6RTc6Q0U6RjM6QzE6REY6NkM6RDQ6MzM6MUM6OTlcbiAqL1xuZXhwb3J0IGNvbnN0IEdsb2JhbFNpZ25fUm9vdF9DQSA9IGAtLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS1cbk1JSURkVENDQWwyZ0F3SUJBZ0lMQkFBQUFBQUJGVXRhdzVRd0RRWUpLb1pJaHZjTkFRRUZCUUF3VnpFTE1Ba0dcbkExVUVCaE1DUWtVeEdUQVhCZ05WQkFvVEVFZHNiMkpoYkZOcFoyNGdibll0YzJFeEVEQU9CZ05WQkFzVEIxSnZcbmIzUWdRMEV4R3pBWkJnTlZCQU1URWtkc2IySmhiRk5wWjI0Z1VtOXZkQ0JEUVRBZUZ3MDVPREE1TURFeE1qQXdcbk1EQmFGdzB5T0RBeE1qZ3hNakF3TURCYU1GY3hDekFKQmdOVkJBWVRBa0pGTVJrd0Z3WURWUVFLRXhCSGJHOWlcbllXeFRhV2R1SUc1MkxYTmhNUkF3RGdZRFZRUUxFd2RTYjI5MElFTkJNUnN3R1FZRFZRUURFeEpIYkc5aVlXeFRcbmFXZHVJRkp2YjNRZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFEYUR1YVpcbmpjNmo0MCtLZnZ2eGk0TWxhK3BJSC9FcXNMbVZFUVM5OEdQUjRtZG16eHpkenh0SUsrNk5pWTZhcnltQVphdnBcbnh5MFN5NnNjVEhBSG9UMEtNTTBWalUvNDNkU01VQlVjNzFEdXhDNzMvT2xTOHBGOTRHM1ZOVENPWGtOejhrSHBcbjFXcmpzb2s2VmprNGJ3WThpR2xiS2szRnAxUzRiSW5NbS9rOHl1WDlpZlVTUEpKNGx0YmNkRzZUUkdIUmpjZEdcbnNuVU9odWdaaXRWdGJOVjRGcFdpNmNnS09PdnlKQk5QYzFTVEU0VTZHN3dlTkxXTEJZeTVkNHV4Mng4Z2thc0pcblUyNlF6bnMzZExsd1I1RWlVV01XZWE2eHJrRW1DTWdaSzlGR3FraldaQ3JYZ3pUL0xDckJiQmxEU2dlRjU5TjhcbjlpRm83K3J5VXA5L2s1RFBBZ01CQUFHalFqQkFNQTRHQTFVZER3RUIvd1FFQXdJQkJqQVBCZ05WSFJNQkFmOEVcbkJUQURBUUgvTUIwR0ExVWREZ1FXQkJSZ2UyWWFSUTJYeW9sUUwzMEV6VFNvLy96OVN6QU5CZ2txaGtpRzl3MEJcbkFRVUZBQU9DQVFFQTFuUG5mRTkyMEkyLzdMcWl2alRGS0RLMWZQeHNuQ3dydlFtZVU3OXJYcW9SU0xibENLT3pcbnlqMWhUZE5HQ2JNK3c2RGpZMVViOHJydnJUbmhRN2s0bytZdmlpWTc3NkJRVnZuR0N2MDR6Y1FMY0ZHVWw1Z0VcbjM4TmZsTlVWeVJSQm5NUmRkV1FWRGY5Vk1PeUdqLzhON3l5NVkwYjJxdnpmdkduOUxoSklaSnJnbGZDbTd5bVBcbkFiRVZ0UXdkcGY1cExHa2tlQjZ6cHh4eFl1N0t5SmVzRjEyS3d2aEhobTRxeEZZeGxkQm5pWVVyK1d5bVhVYWRcbkRLcUM1SmxSM1hDMzIxWTlZZVJxNFZ6Vzl2NDkza0hNQjY1alVyOVRVL1FyNmNmOXR2ZUNYNFhTUVJqYmdiTUVcbkhNVWZwSUJ2RlNESjNneUlDaDNXWmxYaS9FakpLU1pwNEE9PVxuLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLVxuYDtcbiJdLCJuYW1lcyI6WyJHbG9iYWxTaWduX1Jvb3RfQ0EiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@simplewebauthn/server/esm/services/defaultRootCerts/android-safetynet.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@simplewebauthn/server/esm/services/defaultRootCerts/apple.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@simplewebauthn/server/esm/services/defaultRootCerts/apple.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Apple_WebAuthn_Root_CA: () => (/* binding */ Apple_WebAuthn_Root_CA)\n/* harmony export */ });\n/**\n * Apple WebAuthn Root CA\n *\n * Downloaded from https://www.apple.com/certificateauthority/Apple_WebAuthn_Root_CA.pem\n *\n * Valid until 2045-03-14 @ 17:00 PST\n *\n * SHA256 Fingerprint\n * 09:15:DD:5C:07:A2:8D:B5:49:D1:F6:77:BB:5A:75:D4:BF:BE:95:61:A7:73:42:43:27:76:2E:9E:02:F9:BB:29\n */ const Apple_WebAuthn_Root_CA = `-----BEGIN CERTIFICATE-----\nMIICEjCCAZmgAwIBAgIQaB0BbHo84wIlpQGUKEdXcTAKBggqhkjOPQQDAzBLMR8w\nHQYDVQQDDBZBcHBsZSBXZWJBdXRobiBSb290IENBMRMwEQYDVQQKDApBcHBsZSBJ\nbmMuMRMwEQYDVQQIDApDYWxpZm9ybmlhMB4XDTIwMDMxODE4MjEzMloXDTQ1MDMx\nNTAwMDAwMFowSzEfMB0GA1UEAwwWQXBwbGUgV2ViQXV0aG4gUm9vdCBDQTETMBEG\nA1UECgwKQXBwbGUgSW5jLjETMBEGA1UECAwKQ2FsaWZvcm5pYTB2MBAGByqGSM49\nAgEGBSuBBAAiA2IABCJCQ2pTVhzjl4Wo6IhHtMSAzO2cv+H9DQKev3//fG59G11k\nxu9eI0/7o6V5uShBpe1u6l6mS19S1FEh6yGljnZAJ+2GNP1mi/YK2kSXIuTHjxA/\npcoRf7XkOtO4o1qlcaNCMEAwDwYDVR0TAQH/BAUwAwEB/zAdBgNVHQ4EFgQUJtdk\n2cV4wlpn0afeaxLQG2PxxtcwDgYDVR0PAQH/BAQDAgEGMAoGCCqGSM49BAMDA2cA\nMGQCMFrZ+9DsJ1PW9hfNdBywZDsWDbWFp28it1d/5w2RPkRX3Bbn/UbDTNLx7Jr3\njAGGiQIwHFj+dJZYUJR786osByBelJYsVZd2GbHQu209b5RCmGQ21gpSAk9QZW4B\n1bWeT0vT\n-----END CERTIFICATE-----\n`;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNpbXBsZXdlYmF1dGhuL3NlcnZlci9lc20vc2VydmljZXMvZGVmYXVsdFJvb3RDZXJ0cy9hcHBsZS5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7Ozs7Ozs7OztDQVNDLEdBQ00sTUFBTUEseUJBQXlCLENBQUM7Ozs7Ozs7Ozs7Ozs7O0FBY3ZDLENBQUMsQ0FBQyIsInNvdXJjZXMiOlsid2VicGFjazovL2NhbXB1cy1taW5kLy4vbm9kZV9tb2R1bGVzL0BzaW1wbGV3ZWJhdXRobi9zZXJ2ZXIvZXNtL3NlcnZpY2VzL2RlZmF1bHRSb290Q2VydHMvYXBwbGUuanM/MjkwYSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEFwcGxlIFdlYkF1dGhuIFJvb3QgQ0FcbiAqXG4gKiBEb3dubG9hZGVkIGZyb20gaHR0cHM6Ly93d3cuYXBwbGUuY29tL2NlcnRpZmljYXRlYXV0aG9yaXR5L0FwcGxlX1dlYkF1dGhuX1Jvb3RfQ0EucGVtXG4gKlxuICogVmFsaWQgdW50aWwgMjA0NS0wMy0xNCBAIDE3OjAwIFBTVFxuICpcbiAqIFNIQTI1NiBGaW5nZXJwcmludFxuICogMDk6MTU6REQ6NUM6MDc6QTI6OEQ6QjU6NDk6RDE6RjY6Nzc6QkI6NUE6NzU6RDQ6QkY6QkU6OTU6NjE6QTc6NzM6NDI6NDM6Mjc6NzY6MkU6OUU6MDI6Rjk6QkI6MjlcbiAqL1xuZXhwb3J0IGNvbnN0IEFwcGxlX1dlYkF1dGhuX1Jvb3RfQ0EgPSBgLS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tXG5NSUlDRWpDQ0FabWdBd0lCQWdJUWFCMEJiSG84NHdJbHBRR1VLRWRYY1RBS0JnZ3Foa2pPUFFRREF6QkxNUjh3XG5IUVlEVlFRRERCWkJjSEJzWlNCWFpXSkJkWFJvYmlCU2IyOTBJRU5CTVJNd0VRWURWUVFLREFwQmNIQnNaU0JKXG5ibU11TVJNd0VRWURWUVFJREFwRFlXeHBabTl5Ym1saE1CNFhEVEl3TURNeE9ERTRNakV6TWxvWERUUTFNRE14XG5OVEF3TURBd01Gb3dTekVmTUIwR0ExVUVBd3dXUVhCd2JHVWdWMlZpUVhWMGFHNGdVbTl2ZENCRFFURVRNQkVHXG5BMVVFQ2d3S1FYQndiR1VnU1c1akxqRVRNQkVHQTFVRUNBd0tRMkZzYVdadmNtNXBZVEIyTUJBR0J5cUdTTTQ5XG5BZ0VHQlN1QkJBQWlBMklBQkNKQ1EycFRWaHpqbDRXbzZJaEh0TVNBek8yY3YrSDlEUUtldjMvL2ZHNTlHMTFrXG54dTllSTAvN282VjV1U2hCcGUxdTZsNm1TMTlTMUZFaDZ5R2xqblpBSisyR05QMW1pL1lLMmtTWEl1VEhqeEEvXG5wY29SZjdYa090TzRvMXFsY2FOQ01FQXdEd1lEVlIwVEFRSC9CQVV3QXdFQi96QWRCZ05WSFE0RUZnUVVKdGRrXG4yY1Y0d2xwbjBhZmVheExRRzJQeHh0Y3dEZ1lEVlIwUEFRSC9CQVFEQWdFR01Bb0dDQ3FHU000OUJBTURBMmNBXG5NR1FDTUZyWis5RHNKMVBXOWhmTmRCeXdaRHNXRGJXRnAyOGl0MWQvNXcyUlBrUlgzQmJuL1ViRFROTHg3SnIzXG5qQUdHaVFJd0hGaitkSlpZVUpSNzg2b3NCeUJlbEpZc1ZaZDJHYkhRdTIwOWI1UkNtR1EyMWdwU0FrOVFaVzRCXG4xYldlVDB2VFxuLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLVxuYDtcbiJdLCJuYW1lcyI6WyJBcHBsZV9XZWJBdXRobl9Sb290X0NBIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@simplewebauthn/server/esm/services/defaultRootCerts/apple.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@simplewebauthn/server/esm/services/defaultRootCerts/mds.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@simplewebauthn/server/esm/services/defaultRootCerts/mds.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GlobalSign_Root_CA_R3: () => (/* binding */ GlobalSign_Root_CA_R3)\n/* harmony export */ });\n/**\n * GlobalSign Root CA - R3\n *\n * Downloaded from https://valid.r3.roots.globalsign.com/\n *\n * Valid until 2029-03-18 @ 00:00 PST\n *\n * SHA256 Fingerprint\n * CB:B5:22:D7:B7:F1:27:AD:6A:01:13:86:5B:DF:1C:D4:10:2E:7D:07:59:AF:63:5A:7C:F4:72:0D:C9:63:C5:3B\n */ const GlobalSign_Root_CA_R3 = `-----BEGIN CERTIFICATE-----\n MIIDXzCCAkegAwIBAgILBAAAAAABIVhTCKIwDQYJKoZIhvcNAQELBQAwTDEgMB4G\n A1UECxMXR2xvYmFsU2lnbiBSb290IENBIC0gUjMxEzARBgNVBAoTCkdsb2JhbFNp\n Z24xEzARBgNVBAMTCkdsb2JhbFNpZ24wHhcNMDkwMzE4MTAwMDAwWhcNMjkwMzE4\n MTAwMDAwWjBMMSAwHgYDVQQLExdHbG9iYWxTaWduIFJvb3QgQ0EgLSBSMzETMBEG\n A1UEChMKR2xvYmFsU2lnbjETMBEGA1UEAxMKR2xvYmFsU2lnbjCCASIwDQYJKoZI\n hvcNAQEBBQADggEPADCCAQoCggEBAMwldpB5BngiFvXAg7aEyiie/QV2EcWtiHL8\n RgJDx7KKnQRfJMsuS+FggkbhUqsMgUdwbN1k0ev1LKMPgj0MK66X17YUhhB5uzsT\n gHeMCOFJ0mpiLx9e+pZo34knlTifBtc+ycsmWQ1z3rDI6SYOgxXG71uL0gRgykmm\n KPZpO/bLyCiR5Z2KYVc3rHQU3HTgOu5yLy6c+9C7v/U9AOEGM+iCK65TpjoWc4zd\n QQ4gOsC0p6Hpsk+QLjJg6VfLuQSSaGjlOCZgdbKfd/+RFO+uIEn8rUAVSNECMWEZ\n XriX7613t2Saer9fwRPvm2L7DWzgVGkWqQPabumDk3F2xmmFghcCAwEAAaNCMEAw\n DgYDVR0PAQH/BAQDAgEGMA8GA1UdEwEB/wQFMAMBAf8wHQYDVR0OBBYEFI/wS3+o\n LkUkrk1Q+mOai97i3Ru8MA0GCSqGSIb3DQEBCwUAA4IBAQBLQNvAUKr+yAzv95ZU\n RUm7lgAJQayzE4aGKAczymvmdLm6AC2upArT9fHxD4q/c2dKg8dEe3jgr25sbwMp\n jjM5RcOO5LlXbKr8EpbsU8Yt5CRsuZRj+9xTaGdWPoO4zzUhw8lo/s7awlOqzJCK\n 6fBdRoyV3XpYKBovHd7NADdBj+1EbddTKJd+82cEHhXXipa0095MJ6RMG3NzdvQX\n mcIfeg7jLQitChws/zyrVQ4PkX4268NXSb7hLi18YIvDQVETI53O9zJrlAGomecs\n Mx86OyXShkDOOyyGeMlhLxS67ttVb9+E7gUJTb0o2HLO02JQZR7rkpeDMdmztcpH\n WD9f\n -----END CERTIFICATE-----\n `;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNpbXBsZXdlYmF1dGhuL3NlcnZlci9lc20vc2VydmljZXMvZGVmYXVsdFJvb3RDZXJ0cy9tZHMuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBOzs7Ozs7Ozs7Q0FTQyxHQUNNLE1BQU1BLHdCQUF3QixDQUFDOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Q0FxQnJDLENBQUMsQ0FBQyIsInNvdXJjZXMiOlsid2VicGFjazovL2NhbXB1cy1taW5kLy4vbm9kZV9tb2R1bGVzL0BzaW1wbGV3ZWJhdXRobi9zZXJ2ZXIvZXNtL3NlcnZpY2VzL2RlZmF1bHRSb290Q2VydHMvbWRzLmpzPzViYWEiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBHbG9iYWxTaWduIFJvb3QgQ0EgLSBSM1xuICpcbiAqIERvd25sb2FkZWQgZnJvbSBodHRwczovL3ZhbGlkLnIzLnJvb3RzLmdsb2JhbHNpZ24uY29tL1xuICpcbiAqIFZhbGlkIHVudGlsIDIwMjktMDMtMTggQCAwMDowMCBQU1RcbiAqXG4gKiBTSEEyNTYgRmluZ2VycHJpbnRcbiAqIENCOkI1OjIyOkQ3OkI3OkYxOjI3OkFEOjZBOjAxOjEzOjg2OjVCOkRGOjFDOkQ0OjEwOjJFOjdEOjA3OjU5OkFGOjYzOjVBOjdDOkY0OjcyOjBEOkM5OjYzOkM1OjNCXG4gKi9cbmV4cG9ydCBjb25zdCBHbG9iYWxTaWduX1Jvb3RfQ0FfUjMgPSBgLS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tXG4gTUlJRFh6Q0NBa2VnQXdJQkFnSUxCQUFBQUFBQklWaFRDS0l3RFFZSktvWklodmNOQVFFTEJRQXdUREVnTUI0R1xuIEExVUVDeE1YUjJ4dlltRnNVMmxuYmlCU2IyOTBJRU5CSUMwZ1VqTXhFekFSQmdOVkJBb1RDa2RzYjJKaGJGTnBcbiBaMjR4RXpBUkJnTlZCQU1UQ2tkc2IySmhiRk5wWjI0d0hoY05NRGt3TXpFNE1UQXdNREF3V2hjTk1qa3dNekU0XG4gTVRBd01EQXdXakJNTVNBd0hnWURWUVFMRXhkSGJHOWlZV3hUYVdkdUlGSnZiM1FnUTBFZ0xTQlNNekVUTUJFR1xuIEExVUVDaE1LUjJ4dlltRnNVMmxuYmpFVE1CRUdBMVVFQXhNS1IyeHZZbUZzVTJsbmJqQ0NBU0l3RFFZSktvWklcbiBodmNOQVFFQkJRQURnZ0VQQURDQ0FRb0NnZ0VCQU13bGRwQjVCbmdpRnZYQWc3YUV5aWllL1FWMkVjV3RpSEw4XG4gUmdKRHg3S0tuUVJmSk1zdVMrRmdna2JoVXFzTWdVZHdiTjFrMGV2MUxLTVBnajBNSzY2WDE3WVVoaEI1dXpzVFxuIGdIZU1DT0ZKMG1waUx4OWUrcFpvMzRrbmxUaWZCdGMreWNzbVdRMXozckRJNlNZT2d4WEc3MXVMMGdSZ3lrbW1cbiBLUFpwTy9iTHlDaVI1WjJLWVZjM3JIUVUzSFRnT3U1eUx5NmMrOUM3di9VOUFPRUdNK2lDSzY1VHBqb1djNHpkXG4gUVE0Z09zQzBwNkhwc2srUUxqSmc2VmZMdVFTU2FHamxPQ1pnZGJLZmQvK1JGTyt1SUVuOHJVQVZTTkVDTVdFWlxuIFhyaVg3NjEzdDJTYWVyOWZ3UlB2bTJMN0RXemdWR2tXcVFQYWJ1bURrM0YyeG1tRmdoY0NBd0VBQWFOQ01FQXdcbiBEZ1lEVlIwUEFRSC9CQVFEQWdFR01BOEdBMVVkRXdFQi93UUZNQU1CQWY4d0hRWURWUjBPQkJZRUZJL3dTMytvXG4gTGtVa3JrMVErbU9haTk3aTNSdThNQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUJBUUJMUU52QVVLcit5QXp2OTVaVVxuIFJVbTdsZ0FKUWF5ekU0YUdLQWN6eW12bWRMbTZBQzJ1cEFyVDlmSHhENHEvYzJkS2c4ZEVlM2pncjI1c2J3TXBcbiBqak01UmNPTzVMbFhiS3I4RXBic1U4WXQ1Q1JzdVpSais5eFRhR2RXUG9PNHp6VWh3OGxvL3M3YXdsT3F6SkNLXG4gNmZCZFJveVYzWHBZS0JvdkhkN05BRGRCaisxRWJkZFRLSmQrODJjRUhoWFhpcGEwMDk1TUo2Uk1HM056ZHZRWFxuIG1jSWZlZzdqTFFpdENod3MvenlyVlE0UGtYNDI2OE5YU2I3aExpMThZSXZEUVZFVEk1M085ekpybEFHb21lY3NcbiBNeDg2T3lYU2hrRE9PeXlHZU1saEx4UzY3dHRWYjkrRTdnVUpUYjBvMkhMTzAySlFaUjdya3BlRE1kbXp0Y3BIXG4gV0Q5ZlxuIC0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS1cbiBgO1xuIl0sIm5hbWVzIjpbIkdsb2JhbFNpZ25fUm9vdF9DQV9SMyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@simplewebauthn/server/esm/services/defaultRootCerts/mds.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@simplewebauthn/server/esm/services/metadataService.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@simplewebauthn/server/esm/services/metadataService.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BaseMetadataService: () => (/* binding */ BaseMetadataService),\n/* harmony export */   MetadataService: () => (/* binding */ MetadataService)\n/* harmony export */ });\n/* harmony import */ var _helpers_validateCertificatePath_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../helpers/validateCertificatePath.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/validateCertificatePath.js\");\n/* harmony import */ var _helpers_convertCertBufferToPEM_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../helpers/convertCertBufferToPEM.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/convertCertBufferToPEM.js\");\n/* harmony import */ var _helpers_convertAAGUIDToString_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../helpers/convertAAGUIDToString.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/convertAAGUIDToString.js\");\n/* harmony import */ var _settingsService_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./settingsService.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/services/settingsService.js\");\n/* harmony import */ var _helpers_logging_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../helpers/logging.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/logging.js\");\n/* harmony import */ var _helpers_convertPEMToBytes_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../helpers/convertPEMToBytes.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/convertPEMToBytes.js\");\n/* harmony import */ var _helpers_fetch_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../helpers/fetch.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/fetch.js\");\n/* harmony import */ var _metadata_parseJWT_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../metadata/parseJWT.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/metadata/parseJWT.js\");\n/* harmony import */ var _metadata_verifyJWT_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../metadata/verifyJWT.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/metadata/verifyJWT.js\");\n\n\n\n\n\n\n\n\n\nconst defaultURLMDS = \"https://mds.fidoalliance.org/\"; // v3\nvar SERVICE_STATE;\n(function(SERVICE_STATE) {\n    SERVICE_STATE[SERVICE_STATE[\"DISABLED\"] = 0] = \"DISABLED\";\n    SERVICE_STATE[SERVICE_STATE[\"REFRESHING\"] = 1] = \"REFRESHING\";\n    SERVICE_STATE[SERVICE_STATE[\"READY\"] = 2] = \"READY\";\n})(SERVICE_STATE || (SERVICE_STATE = {}));\nconst log = (0,_helpers_logging_js__WEBPACK_IMPORTED_MODULE_4__.getLogger)(\"MetadataService\");\n/**\n * A basic service for coordinating interactions with the FIDO Metadata Service. This includes BLOB\n * download and parsing, and on-demand requesting and caching of individual metadata statements.\n *\n * https://fidoalliance.org/metadata/\n */ class BaseMetadataService {\n    constructor(){\n        Object.defineProperty(this, \"mdsCache\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: {}\n        });\n        Object.defineProperty(this, \"statementCache\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: {}\n        });\n        Object.defineProperty(this, \"state\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: SERVICE_STATE.DISABLED\n        });\n        Object.defineProperty(this, \"verificationMode\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"strict\"\n        });\n    }\n    /**\n     * Prepare the service to handle remote MDS servers and/or cache local metadata statements.\n     *\n     * **Options:**\n     *\n     * @param opts.mdsServers An array of URLs to FIDO Alliance Metadata Service\n     * (version 3.0)-compatible servers. Defaults to the official FIDO MDS server\n     * @param opts.statements An array of local metadata statements\n     * @param opts.verificationMode How MetadataService will handle unregistered AAGUIDs. Defaults to\n     * `\"strict\"` which throws errors during registration response verification when an\n     * unregistered AAGUID is encountered. Set to `\"permissive\"` to allow registration by\n     * authenticators with unregistered AAGUIDs\n     */ async initialize(opts = {}) {\n        const { mdsServers = [\n            defaultURLMDS\n        ], statements, verificationMode } = opts;\n        this.setState(SERVICE_STATE.REFRESHING);\n        // If metadata statements are provided, load them into the cache first\n        if (statements?.length) {\n            let statementsAdded = 0;\n            statements.forEach((statement)=>{\n                // Only cache statements that are for FIDO2-compatible authenticators\n                if (statement.aaguid) {\n                    this.statementCache[statement.aaguid] = {\n                        entry: {\n                            metadataStatement: statement,\n                            statusReports: [],\n                            timeOfLastStatusChange: \"1970-01-01\"\n                        },\n                        url: \"\"\n                    };\n                    statementsAdded += 1;\n                }\n            });\n            log(`Cached ${statementsAdded} local statements`);\n        }\n        // If MDS servers are provided, then process them and add their statements to the cache\n        if (mdsServers?.length) {\n            // Get a current count so we know how many new statements we've added from MDS servers\n            const currentCacheCount = Object.keys(this.statementCache).length;\n            let numServers = mdsServers.length;\n            for (const url of mdsServers){\n                try {\n                    await this.downloadBlob({\n                        url,\n                        no: 0,\n                        nextUpdate: new Date(0)\n                    });\n                } catch (err) {\n                    // Notify of the error and move on\n                    log(`Could not download BLOB from ${url}:`, err);\n                    numServers -= 1;\n                }\n            }\n            // Calculate the difference to get the total number of new statements we successfully added\n            const newCacheCount = Object.keys(this.statementCache).length;\n            const cacheDiff = newCacheCount - currentCacheCount;\n            log(`Cached ${cacheDiff} statements from ${numServers} metadata server(s)`);\n        }\n        if (verificationMode) {\n            this.verificationMode = verificationMode;\n        }\n        this.setState(SERVICE_STATE.READY);\n    }\n    /**\n     * Get a metadata statement for a given AAGUID.\n     *\n     * This method will coordinate updating the cache as per the `nextUpdate` property in the initial\n     * BLOB download.\n     */ async getStatement(aaguid) {\n        if (this.state === SERVICE_STATE.DISABLED) {\n            return;\n        }\n        if (!aaguid) {\n            return;\n        }\n        if (aaguid instanceof Uint8Array) {\n            aaguid = (0,_helpers_convertAAGUIDToString_js__WEBPACK_IMPORTED_MODULE_2__.convertAAGUIDToString)(aaguid);\n        }\n        // If a cache refresh is in progress then pause this until the service is ready\n        await this.pauseUntilReady();\n        // Try to grab a cached statement\n        const cachedStatement = this.statementCache[aaguid];\n        if (!cachedStatement) {\n            if (this.verificationMode === \"strict\") {\n                // FIDO conformance requires RP's to only support registered AAGUID's\n                throw new Error(`No metadata statement found for aaguid \"${aaguid}\"`);\n            }\n            // Allow registration verification to continue without using metadata\n            return;\n        }\n        // If the statement points to an MDS API, check the MDS' nextUpdate to see if we need to refresh\n        if (cachedStatement.url) {\n            const mds = this.mdsCache[cachedStatement.url];\n            const now = new Date();\n            if (now > mds.nextUpdate) {\n                try {\n                    this.setState(SERVICE_STATE.REFRESHING);\n                    await this.downloadBlob(mds);\n                } finally{\n                    this.setState(SERVICE_STATE.READY);\n                }\n            }\n        }\n        const { entry } = cachedStatement;\n        // Check to see if the this aaguid has a status report with a \"compromised\" status\n        for (const report of entry.statusReports){\n            const { status } = report;\n            if (status === \"USER_VERIFICATION_BYPASS\" || status === \"ATTESTATION_KEY_COMPROMISE\" || status === \"USER_KEY_REMOTE_COMPROMISE\" || status === \"USER_KEY_PHYSICAL_COMPROMISE\") {\n                throw new Error(`Detected compromised aaguid \"${aaguid}\"`);\n            }\n        }\n        return entry.metadataStatement;\n    }\n    /**\n     * Download and process the latest BLOB from MDS\n     */ async downloadBlob(mds) {\n        const { url, no } = mds;\n        // Get latest \"BLOB\" (FIDO's terminology, not mine)\n        const resp = await (0,_helpers_fetch_js__WEBPACK_IMPORTED_MODULE_6__.fetch)(url);\n        const data = await resp.text();\n        // Parse the JWT\n        const parsedJWT = (0,_metadata_parseJWT_js__WEBPACK_IMPORTED_MODULE_7__.parseJWT)(data);\n        const header = parsedJWT[0];\n        const payload = parsedJWT[1];\n        if (payload.no <= no) {\n            // From FIDO MDS docs: \"also ignore the file if its number (no) is less or equal to the\n            // number of the last BLOB cached locally.\"\n            throw new Error(`Latest BLOB no. \"${payload.no}\" is not greater than previous ${no}`);\n        }\n        const headerCertsPEM = header.x5c.map(_helpers_convertCertBufferToPEM_js__WEBPACK_IMPORTED_MODULE_1__.convertCertBufferToPEM);\n        try {\n            // Validate the certificate chain\n            const rootCerts = _settingsService_js__WEBPACK_IMPORTED_MODULE_3__.SettingsService.getRootCertificates({\n                identifier: \"mds\"\n            });\n            await (0,_helpers_validateCertificatePath_js__WEBPACK_IMPORTED_MODULE_0__.validateCertificatePath)(headerCertsPEM, rootCerts);\n        } catch (error) {\n            const _error = error;\n            // From FIDO MDS docs: \"ignore the file if the chain cannot be verified or if one of the\n            // chain certificates is revoked\"\n            throw new Error(`BLOB certificate path could not be validated: ${_error.message}`);\n        }\n        // Verify the BLOB JWT signature\n        const leafCert = headerCertsPEM[0];\n        const verified = await (0,_metadata_verifyJWT_js__WEBPACK_IMPORTED_MODULE_8__.verifyJWT)(data, (0,_helpers_convertPEMToBytes_js__WEBPACK_IMPORTED_MODULE_5__.convertPEMToBytes)(leafCert));\n        if (!verified) {\n            // From FIDO MDS docs: \"The FIDO Server SHOULD ignore the file if the signature is invalid.\"\n            throw new Error(\"BLOB signature could not be verified\");\n        }\n        // Cache statements for FIDO2 devices\n        for (const entry of payload.entries){\n            // Only cache entries with an `aaguid`\n            if (entry.aaguid) {\n                this.statementCache[entry.aaguid] = {\n                    entry,\n                    url\n                };\n            }\n        }\n        // Remember info about the server so we can refresh later\n        const [year, month, day] = payload.nextUpdate.split(\"-\");\n        this.mdsCache[url] = {\n            ...mds,\n            // Store the payload `no` to make sure we're getting the next BLOB in the sequence\n            no: payload.no,\n            // Convert the nextUpdate property into a Date so we can determine when to re-download\n            nextUpdate: new Date(parseInt(year, 10), // Months need to be zero-indexed\n            parseInt(month, 10) - 1, parseInt(day, 10))\n        };\n    }\n    /**\n     * A helper method to pause execution until the service is ready\n     */ pauseUntilReady() {\n        if (this.state === SERVICE_STATE.READY) {\n            return new Promise((resolve)=>{\n                resolve();\n            });\n        }\n        // State isn't ready, so set up polling\n        const readyPromise = new Promise((resolve, reject)=>{\n            const totalTimeoutMS = 70000;\n            const intervalMS = 100;\n            let iterations = totalTimeoutMS / intervalMS;\n            // Check service state every `intervalMS` milliseconds\n            const intervalID = globalThis.setInterval(()=>{\n                if (iterations < 1) {\n                    clearInterval(intervalID);\n                    reject(`State did not become ready in ${totalTimeoutMS / 1000} seconds`);\n                } else if (this.state === SERVICE_STATE.READY) {\n                    clearInterval(intervalID);\n                    resolve();\n                }\n                iterations -= 1;\n            }, intervalMS);\n        });\n        return readyPromise;\n    }\n    /**\n     * Report service status on change\n     */ setState(newState) {\n        this.state = newState;\n        if (newState === SERVICE_STATE.DISABLED) {\n            log(\"MetadataService is DISABLED\");\n        } else if (newState === SERVICE_STATE.REFRESHING) {\n            log(\"MetadataService is REFRESHING\");\n        } else if (newState === SERVICE_STATE.READY) {\n            log(\"MetadataService is READY\");\n        }\n    }\n}\n// Export a service singleton\nconst MetadataService = new BaseMetadataService();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@simplewebauthn/server/esm/services/metadataService.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@simplewebauthn/server/esm/services/settingsService.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@simplewebauthn/server/esm/services/settingsService.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SettingsService: () => (/* binding */ SettingsService)\n/* harmony export */ });\n/* harmony import */ var _helpers_convertCertBufferToPEM_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../helpers/convertCertBufferToPEM.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/convertCertBufferToPEM.js\");\n/* harmony import */ var _defaultRootCerts_android_safetynet_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./defaultRootCerts/android-safetynet.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/services/defaultRootCerts/android-safetynet.js\");\n/* harmony import */ var _defaultRootCerts_android_key_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./defaultRootCerts/android-key.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/services/defaultRootCerts/android-key.js\");\n/* harmony import */ var _defaultRootCerts_apple_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./defaultRootCerts/apple.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/services/defaultRootCerts/apple.js\");\n/* harmony import */ var _defaultRootCerts_mds_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./defaultRootCerts/mds.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/services/defaultRootCerts/mds.js\");\n\n\n\n\n\nclass BaseSettingsService {\n    constructor(){\n        // Certificates are stored as PEM-formatted strings\n        Object.defineProperty(this, \"pemCertificates\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.pemCertificates = new Map();\n    }\n    /**\n     * Set potential root certificates for attestation formats that use them. Root certs will be tried\n     * one-by-one when validating a certificate path.\n     *\n     * Certificates can be specified as a raw `Buffer`, or as a PEM-formatted string. If a\n     * `Buffer` is passed in it will be converted to PEM format.\n     */ setRootCertificates(opts) {\n        const { identifier, certificates } = opts;\n        const newCertificates = [];\n        for (const cert of certificates){\n            if (cert instanceof Uint8Array) {\n                newCertificates.push((0,_helpers_convertCertBufferToPEM_js__WEBPACK_IMPORTED_MODULE_0__.convertCertBufferToPEM)(cert));\n            } else {\n                newCertificates.push(cert);\n            }\n        }\n        this.pemCertificates.set(identifier, newCertificates);\n    }\n    /**\n     * Get any registered root certificates for the specified attestation format\n     */ getRootCertificates(opts) {\n        const { identifier } = opts;\n        return this.pemCertificates.get(identifier) ?? [];\n    }\n}\nconst SettingsService = new BaseSettingsService();\n// Initialize default certificates\nSettingsService.setRootCertificates({\n    identifier: \"android-key\",\n    certificates: [\n        _defaultRootCerts_android_key_js__WEBPACK_IMPORTED_MODULE_2__.Google_Hardware_Attestation_Root_1,\n        _defaultRootCerts_android_key_js__WEBPACK_IMPORTED_MODULE_2__.Google_Hardware_Attestation_Root_2\n    ]\n});\nSettingsService.setRootCertificates({\n    identifier: \"android-safetynet\",\n    certificates: [\n        _defaultRootCerts_android_safetynet_js__WEBPACK_IMPORTED_MODULE_1__.GlobalSign_Root_CA\n    ]\n});\nSettingsService.setRootCertificates({\n    identifier: \"apple\",\n    certificates: [\n        _defaultRootCerts_apple_js__WEBPACK_IMPORTED_MODULE_3__.Apple_WebAuthn_Root_CA\n    ]\n});\nSettingsService.setRootCertificates({\n    identifier: \"mds\",\n    certificates: [\n        _defaultRootCerts_mds_js__WEBPACK_IMPORTED_MODULE_4__.GlobalSign_Root_CA_R3\n    ]\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNpbXBsZXdlYmF1dGhuL3NlcnZlci9lc20vc2VydmljZXMvc2V0dGluZ3NTZXJ2aWNlLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUE4RTtBQUNEO0FBQytDO0FBQ3ZEO0FBQ0g7QUFDbEUsTUFBTU07SUFDRkMsYUFBYztRQUNWLG1EQUFtRDtRQUNuREMsT0FBT0MsY0FBYyxDQUFDLElBQUksRUFBRSxtQkFBbUI7WUFDM0NDLFlBQVk7WUFDWkMsY0FBYztZQUNkQyxVQUFVO1lBQ1ZDLE9BQU8sS0FBSztRQUNoQjtRQUNBLElBQUksQ0FBQ0MsZUFBZSxHQUFHLElBQUlDO0lBQy9CO0lBQ0E7Ozs7OztLQU1DLEdBQ0RDLG9CQUFvQkMsSUFBSSxFQUFFO1FBQ3RCLE1BQU0sRUFBRUMsVUFBVSxFQUFFQyxZQUFZLEVBQUUsR0FBR0Y7UUFDckMsTUFBTUcsa0JBQWtCLEVBQUU7UUFDMUIsS0FBSyxNQUFNQyxRQUFRRixhQUFjO1lBQzdCLElBQUlFLGdCQUFnQkMsWUFBWTtnQkFDNUJGLGdCQUFnQkcsSUFBSSxDQUFDdkIsMEZBQXNCQSxDQUFDcUI7WUFDaEQsT0FDSztnQkFDREQsZ0JBQWdCRyxJQUFJLENBQUNGO1lBQ3pCO1FBQ0o7UUFDQSxJQUFJLENBQUNQLGVBQWUsQ0FBQ1UsR0FBRyxDQUFDTixZQUFZRTtJQUN6QztJQUNBOztLQUVDLEdBQ0RLLG9CQUFvQlIsSUFBSSxFQUFFO1FBQ3RCLE1BQU0sRUFBRUMsVUFBVSxFQUFFLEdBQUdEO1FBQ3ZCLE9BQU8sSUFBSSxDQUFDSCxlQUFlLENBQUNZLEdBQUcsQ0FBQ1IsZUFBZSxFQUFFO0lBQ3JEO0FBQ0o7QUFDTyxNQUFNUyxrQkFBa0IsSUFBSXJCLHNCQUFzQjtBQUN6RCxrQ0FBa0M7QUFDbENxQixnQkFBZ0JYLG1CQUFtQixDQUFDO0lBQ2hDRSxZQUFZO0lBQ1pDLGNBQWM7UUFDVmpCLGdHQUFrQ0E7UUFDbENDLGdHQUFrQ0E7S0FDckM7QUFDTDtBQUNBd0IsZ0JBQWdCWCxtQkFBbUIsQ0FBQztJQUNoQ0UsWUFBWTtJQUNaQyxjQUFjO1FBQUNsQixzRkFBa0JBO0tBQUM7QUFDdEM7QUFDQTBCLGdCQUFnQlgsbUJBQW1CLENBQUM7SUFDaENFLFlBQVk7SUFDWkMsY0FBYztRQUFDZiw4RUFBc0JBO0tBQUM7QUFDMUM7QUFDQXVCLGdCQUFnQlgsbUJBQW1CLENBQUM7SUFDaENFLFlBQVk7SUFDWkMsY0FBYztRQUFDZCwyRUFBcUJBO0tBQUM7QUFDekMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jYW1wdXMtbWluZC8uL25vZGVfbW9kdWxlcy9Ac2ltcGxld2ViYXV0aG4vc2VydmVyL2VzbS9zZXJ2aWNlcy9zZXR0aW5nc1NlcnZpY2UuanM/NDNlMSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjb252ZXJ0Q2VydEJ1ZmZlclRvUEVNIH0gZnJvbSAnLi4vaGVscGVycy9jb252ZXJ0Q2VydEJ1ZmZlclRvUEVNLmpzJztcbmltcG9ydCB7IEdsb2JhbFNpZ25fUm9vdF9DQSB9IGZyb20gJy4vZGVmYXVsdFJvb3RDZXJ0cy9hbmRyb2lkLXNhZmV0eW5ldC5qcyc7XG5pbXBvcnQgeyBHb29nbGVfSGFyZHdhcmVfQXR0ZXN0YXRpb25fUm9vdF8xLCBHb29nbGVfSGFyZHdhcmVfQXR0ZXN0YXRpb25fUm9vdF8yLCB9IGZyb20gJy4vZGVmYXVsdFJvb3RDZXJ0cy9hbmRyb2lkLWtleS5qcyc7XG5pbXBvcnQgeyBBcHBsZV9XZWJBdXRobl9Sb290X0NBIH0gZnJvbSAnLi9kZWZhdWx0Um9vdENlcnRzL2FwcGxlLmpzJztcbmltcG9ydCB7IEdsb2JhbFNpZ25fUm9vdF9DQV9SMyB9IGZyb20gJy4vZGVmYXVsdFJvb3RDZXJ0cy9tZHMuanMnO1xuY2xhc3MgQmFzZVNldHRpbmdzU2VydmljZSB7XG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIC8vIENlcnRpZmljYXRlcyBhcmUgc3RvcmVkIGFzIFBFTS1mb3JtYXR0ZWQgc3RyaW5nc1xuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcywgXCJwZW1DZXJ0aWZpY2F0ZXNcIiwge1xuICAgICAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHdyaXRhYmxlOiB0cnVlLFxuICAgICAgICAgICAgdmFsdWU6IHZvaWQgMFxuICAgICAgICB9KTtcbiAgICAgICAgdGhpcy5wZW1DZXJ0aWZpY2F0ZXMgPSBuZXcgTWFwKCk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFNldCBwb3RlbnRpYWwgcm9vdCBjZXJ0aWZpY2F0ZXMgZm9yIGF0dGVzdGF0aW9uIGZvcm1hdHMgdGhhdCB1c2UgdGhlbS4gUm9vdCBjZXJ0cyB3aWxsIGJlIHRyaWVkXG4gICAgICogb25lLWJ5LW9uZSB3aGVuIHZhbGlkYXRpbmcgYSBjZXJ0aWZpY2F0ZSBwYXRoLlxuICAgICAqXG4gICAgICogQ2VydGlmaWNhdGVzIGNhbiBiZSBzcGVjaWZpZWQgYXMgYSByYXcgYEJ1ZmZlcmAsIG9yIGFzIGEgUEVNLWZvcm1hdHRlZCBzdHJpbmcuIElmIGFcbiAgICAgKiBgQnVmZmVyYCBpcyBwYXNzZWQgaW4gaXQgd2lsbCBiZSBjb252ZXJ0ZWQgdG8gUEVNIGZvcm1hdC5cbiAgICAgKi9cbiAgICBzZXRSb290Q2VydGlmaWNhdGVzKG9wdHMpIHtcbiAgICAgICAgY29uc3QgeyBpZGVudGlmaWVyLCBjZXJ0aWZpY2F0ZXMgfSA9IG9wdHM7XG4gICAgICAgIGNvbnN0IG5ld0NlcnRpZmljYXRlcyA9IFtdO1xuICAgICAgICBmb3IgKGNvbnN0IGNlcnQgb2YgY2VydGlmaWNhdGVzKSB7XG4gICAgICAgICAgICBpZiAoY2VydCBpbnN0YW5jZW9mIFVpbnQ4QXJyYXkpIHtcbiAgICAgICAgICAgICAgICBuZXdDZXJ0aWZpY2F0ZXMucHVzaChjb252ZXJ0Q2VydEJ1ZmZlclRvUEVNKGNlcnQpKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIG5ld0NlcnRpZmljYXRlcy5wdXNoKGNlcnQpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHRoaXMucGVtQ2VydGlmaWNhdGVzLnNldChpZGVudGlmaWVyLCBuZXdDZXJ0aWZpY2F0ZXMpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBHZXQgYW55IHJlZ2lzdGVyZWQgcm9vdCBjZXJ0aWZpY2F0ZXMgZm9yIHRoZSBzcGVjaWZpZWQgYXR0ZXN0YXRpb24gZm9ybWF0XG4gICAgICovXG4gICAgZ2V0Um9vdENlcnRpZmljYXRlcyhvcHRzKSB7XG4gICAgICAgIGNvbnN0IHsgaWRlbnRpZmllciB9ID0gb3B0cztcbiAgICAgICAgcmV0dXJuIHRoaXMucGVtQ2VydGlmaWNhdGVzLmdldChpZGVudGlmaWVyKSA/PyBbXTtcbiAgICB9XG59XG5leHBvcnQgY29uc3QgU2V0dGluZ3NTZXJ2aWNlID0gbmV3IEJhc2VTZXR0aW5nc1NlcnZpY2UoKTtcbi8vIEluaXRpYWxpemUgZGVmYXVsdCBjZXJ0aWZpY2F0ZXNcblNldHRpbmdzU2VydmljZS5zZXRSb290Q2VydGlmaWNhdGVzKHtcbiAgICBpZGVudGlmaWVyOiAnYW5kcm9pZC1rZXknLFxuICAgIGNlcnRpZmljYXRlczogW1xuICAgICAgICBHb29nbGVfSGFyZHdhcmVfQXR0ZXN0YXRpb25fUm9vdF8xLFxuICAgICAgICBHb29nbGVfSGFyZHdhcmVfQXR0ZXN0YXRpb25fUm9vdF8yLFxuICAgIF0sXG59KTtcblNldHRpbmdzU2VydmljZS5zZXRSb290Q2VydGlmaWNhdGVzKHtcbiAgICBpZGVudGlmaWVyOiAnYW5kcm9pZC1zYWZldHluZXQnLFxuICAgIGNlcnRpZmljYXRlczogW0dsb2JhbFNpZ25fUm9vdF9DQV0sXG59KTtcblNldHRpbmdzU2VydmljZS5zZXRSb290Q2VydGlmaWNhdGVzKHtcbiAgICBpZGVudGlmaWVyOiAnYXBwbGUnLFxuICAgIGNlcnRpZmljYXRlczogW0FwcGxlX1dlYkF1dGhuX1Jvb3RfQ0FdLFxufSk7XG5TZXR0aW5nc1NlcnZpY2Uuc2V0Um9vdENlcnRpZmljYXRlcyh7XG4gICAgaWRlbnRpZmllcjogJ21kcycsXG4gICAgY2VydGlmaWNhdGVzOiBbR2xvYmFsU2lnbl9Sb290X0NBX1IzXSxcbn0pO1xuIl0sIm5hbWVzIjpbImNvbnZlcnRDZXJ0QnVmZmVyVG9QRU0iLCJHbG9iYWxTaWduX1Jvb3RfQ0EiLCJHb29nbGVfSGFyZHdhcmVfQXR0ZXN0YXRpb25fUm9vdF8xIiwiR29vZ2xlX0hhcmR3YXJlX0F0dGVzdGF0aW9uX1Jvb3RfMiIsIkFwcGxlX1dlYkF1dGhuX1Jvb3RfQ0EiLCJHbG9iYWxTaWduX1Jvb3RfQ0FfUjMiLCJCYXNlU2V0dGluZ3NTZXJ2aWNlIiwiY29uc3RydWN0b3IiLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImVudW1lcmFibGUiLCJjb25maWd1cmFibGUiLCJ3cml0YWJsZSIsInZhbHVlIiwicGVtQ2VydGlmaWNhdGVzIiwiTWFwIiwic2V0Um9vdENlcnRpZmljYXRlcyIsIm9wdHMiLCJpZGVudGlmaWVyIiwiY2VydGlmaWNhdGVzIiwibmV3Q2VydGlmaWNhdGVzIiwiY2VydCIsIlVpbnQ4QXJyYXkiLCJwdXNoIiwic2V0IiwiZ2V0Um9vdENlcnRpZmljYXRlcyIsImdldCIsIlNldHRpbmdzU2VydmljZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@simplewebauthn/server/esm/services/settingsService.js\n");

/***/ })

};
;